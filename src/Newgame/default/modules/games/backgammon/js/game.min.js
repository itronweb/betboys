var userLang = navigator['language'] || navigator['userLanguage'],
    language, game_assets, user_data = new Object,
    game_data = new Object,
    socket_connection, bet_selector, active_screen = '',
    board_width_percent = 0.8695,
    moved_pawns = [],
    all_moves, last_dice_first = 6,
    last_dice_second = 6,
    places_will_be, last_known_places, mute_audios = !1,
    wait_for_pawn_move = !1,
    game_turn_time = 20,
    double_game = !1,
    can_send_double = !1;
if (void(0) === debug_level) {
    var debug_level = 0
};

function getCookie(cname) {
    var name = cname + "=";
    var decodedCookie = decodeURIComponent(document.cookie);
    var ca = decodedCookie.split(';');
    for(var i = 0; i <ca.length; i++) {
        var c = ca[i];
        while (c.charAt(0) == ' ') {
            c = c.substring(1);
        }
        if (c.indexOf(name) == 0) {
            return c.substring(name.length, c.length);
        }
    }
    return "";
}



data_from_socket = function(_0x52afx16) {
    var _0x52afx17 = null != _0x52afx16['command'] ? _0x52afx16['command'] : '';
    null != _0x52afx16['turn'] && null != game_data['me'] && _0x52afx16['turn'] == game_data['me'] ? (can_send_double = !0, $('#double_icon')['removeClass']('doublepassive')) : (can_send_double = !1, $('#double_icon')['addClass']('doublepassive')), 
		
		'auth' == _0x52afx17 && game_auth(_0x52afx16), 
		'not_found' == _0x52afx17 && game_not_found(_0x52afx16),
		'start_error' == _0x52afx17 && game_start_error(_0x52afx16),
		'game_started' == _0x52afx17 && game_game_started(_0x52afx16), 
		'game_status' == _0x52afx17 && game_game_status(_0x52afx16), 
		'turn_dice' == _0x52afx17 && game_turn_dice(_0x52afx16), 
		'game_dice' == _0x52afx17 && game_game_dice(_0x52afx16),
		'played' == _0x52afx17 && game_played(_0x52afx16),
		'win' == _0x52afx17 && game_win(_0x52afx16), 
		'chat' == _0x52afx17 && game_chat(_0x52afx16), 
		'error' == _0x52afx17 && game_error(_0x52afx16),
		'broadcast' == _0x52afx17 && game_broadcast(_0x52afx16), 
		'friends' == _0x52afx17 && show_friends_screen(_0x52afx16),
		'invite' == _0x52afx17 && friend_invited(_0x52afx16),
		'games_list' == _0x52afx17 && games_list(_0x52afx16),
		'cancelled' == _0x52afx17 && cancelled_game(_0x52afx16),
		'double_accept' == _0x52afx17 && double_accept(_0x52afx16), 
		'double_offer' == _0x52afx17 && double_offer(_0x52afx16)
	
}, double_accept = function(_0x52afx16) {
    var _0x52afx17 = _0x52afx16['amount'];
    1 == _0x52afx16['double_level'] && (_0x52afx17 *= 2), 2 == _0x52afx16['double_level'] && (_0x52afx17 *= 4), $('#game_amount_place')['html'](full_chip_format(_0x52afx17))
},
	double_offer = function(_0x52afx16) {
    if ('WHITE' == game_data['me'] && '1' == _0x52afx16['offered']) {
        return $('#double_icon')['hide'](), !1
    };
    if ('BLACK' == game_data['me'] && '2' == _0x52afx16['offered']) {
        return $('#double_icon')['hide'](), !1
    };
    var _0x52afx17 = _0x52afx16['amount'];
    0 == _0x52afx16['double_level'] && (_0x52afx17 *= 2), 1 == _0x52afx16['double_level'] && (_0x52afx17 *= 4), swal({
        title: '',
        text: '<font style=\'font-size:20px;\'>' + language['data']['double_offer_accept']['replace']('{amount}', full_chip_format(_0x52afx17)) + '</font>',
        type: 'warning',
        showCancelButton: !0,
        confirmButtonColor: '#DD6B55',
        confirmButtonText: language['data']['accept'],
        cancelButtonText: language['data']['dont_accept'],
        closeOnConfirm: !0,
        html: !0,
        allowOutsideClick: !1,
        allowEscapeKey: !1,
        allowEnterKey: !1
    }, function(_0x52afx16) {
        _0x52afx16 ? socket_send({
            command: 'double_accept',
			uid: user_data['uid'],
			token: user_data['token'],
			game_id: user_data['game_id'],
        }) : socket_send({
            command: 'drawn',
			uid: user_data['uid'],
			token: user_data['token'],
			game_id: user_data['game_id'],
        })
    })
},
	games_list = function(_0x52afx16) {
    _0x52afx16['games']['sort'](function(_0x52afx16, _0x52afx17) {
        return _0x52afx17['amount'] - _0x52afx16['amount']
    });
    var _0x52afx17 = '',
        _0x52afx18 = 0;
    for (i in _0x52afx16['games']) {
        var _0x52afx19 = language['data']['game_waiting'];
        1 == _0x52afx16['games'][i]['double'] && (_0x52afx19 = language['data']['game_double_waiting']), _0x52afx19 = (_0x52afx19 = _0x52afx19['replace']('{amount}', '<span class=\'games-waiting-amount\'>' + full_chip_format(_0x52afx16['games'][i]['amount']) + '</span>'))['replace']('{name}', '<span class=\'games-waiting-name\'>' + _0x52afx16['games'][i]['name'] + '</span>');
        var _0x52afx1a = _0x52afx16['games'][i]['double'] ? 'double' : 'normal';
        if (_0x52afx17 = _0x52afx17 + _0x52afx19 + (' <a href=\'javascript:;\' class=\'clickable joinButton\' data=\'' + _0x52afx16['games'][i]['amount'] + '\' data-double=\'' + _0x52afx1a + '\'>' + language['data']['join'] + '</a>') + '<br>', (_0x52afx18 += 1) >= 5) {
            break
        }
    };
    $('#waiting_players')['html'](_0x52afx17), $('.joinButton')['unbind']('click'), $('.joinButton')['click'](function() {
        var _0x52afx16 = $(this)['attr']('data'),
            _0x52afx17 = $(this)['attr']('data-double');
        _0x52afx17 = 'double' == _0x52afx17, change_screen('searching_screen'), socket_send({
            command: 'enter_game',
            amount: _0x52afx16,
            double: _0x52afx17,
			uid: user_data['uid'],
			token: user_data['token'],
			game_id: user_data['game_id'],
        })
    })
}, 
	refresh_games_list = function() {
    $('#waiting_players')['html'](''), socket_send({
        command: 'games_list',
		uid: user_data['uid'],
		token: user_data['token'],
		game_id: user_data['game_id'],
    })
},
	cancelled_game = function() {
    change_screen('lobby_screen')
},
	game_auth = function(_0x52afx16) {
    user_data['uid'] = _0x52afx16['uid'], user_data['name'] = _0x52afx16['name'], user_data['photo'] = _0x52afx16['photo'], user_data['chips'] = _0x52afx16['chips'], user_data['currency'] = _0x52afx16['currency'], user_data['bets'] = _0x52afx16['bets'], user_data['level'] = _0x52afx16['level'], user_data['friends'] = _0x52afx16['friends'], '' != user_data['photo'] && (user_data['photo_image'] = new Image, user_data['photo_image']['onload'] = function() {
        $('#profile_photo')['attr']('src', user_data['photo'])
    }, user_data['photo_image']['onerror'] = function() {}, user_data['photo_image']['src'] = user_data['photo']);
//    var _0x52afx17 = '(' + find_level_from_xp(user_data['level']) + ') ' + user_data['name'];
    var _0x52afx17 =  user_data['name'];
    $('.top_left_name')['html'](_0x52afx17), $('.top_left_chips')['html'](full_chip_format(user_data['chips'])), bet_selector['prepare'](), change_screen('lobby_screen');
	
},
	game_not_found = function(_0x52afx16) {
    change_screen('lobby_screen'), message(language['data']['backgammon_not_found'])
},
	game_start_error = function(_0x52afx16) {
    change_screen('lobby_screen'), message(language['data']['error'])
},
	game_game_started = function(_0x52afx16) {
    game_data['me'] = _0x52afx16['uid_1'] == user_data['uid'] ? 'WHITE' : 'BLACK';
    var _0x52afx17 = '',
        _0x52afx18 = '',
        _0x52afx19 = '',
        _0x52afx1a = '',
        _0x52afx1b = '',
        _0x52afx1c = '';
    if ('WHITE' == game_data['me'] ? ($('#game_container')['html'](game_pawns_for_white()), $('#opponent_name')['html']('(' + find_level_from_xp(_0x52afx16['level_2']) + ') ' + _0x52afx16['name_2']), $('#my_name')['html']('(' + find_level_from_xp(_0x52afx16['level_1']) + ') ' + _0x52afx16['name_1']), _0x52afx1a = _0x52afx16['photo_2'], _0x52afx17 = _0x52afx16['photo_1'], _0x52afx18 = _0x52afx16['uid_2'], _0x52afx19 = _0x52afx16['name_2'], _0x52afx1b = _0x52afx16['chips_2'], _0x52afx1c = _0x52afx16['level_2']) : ($('#game_container')['html'](game_pawns_for_black()),
	$('#opponent_name')['html'](_0x52afx16['name_1']),	
//	$('#my_name')['html']('(' + find_level_from_xp(_0x52afx16['level_2']) + ') ' + _0x52afx16['name_2']), 
	$('#my_name')['html'](_0x52afx16['name_2']), 
	_0x52afx1a = _0x52afx16['photo_1'], _0x52afx17 = _0x52afx16['photo_2'], _0x52afx18 = _0x52afx16['uid_1'], _0x52afx19 = _0x52afx16['name_1'], _0x52afx1b = _0x52afx16['chips_1'], _0x52afx1c = _0x52afx16['level_1']), $('#opponent_photo')['unbind']('click'), $('#opponent_photo')['click'](function(_0x52afx16) {
            _0x52afx16['preventDefault'](), open_user_profile({
                uid: _0x52afx18,
                photo: _0x52afx1a,
                shown: _0x52afx1b,
                level: _0x52afx1c,
                name: _0x52afx19
            })
        }), '' != _0x52afx17) {
        var _0x52afx1d = new Image;
        _0x52afx1d['onload'] = function() {
            $('#my_photo')['attr']('src', _0x52afx17)
        }, _0x52afx1d['onerror'] = function() {}, _0x52afx1d['src'] = _0x52afx17
    };
    if (clear_chat_panel(), game_turn_change('null'), $('#opponent_photo')['attr']('src', GAME_FOLDER + 'assets/placeholder.png'), $('.game_result')['hide'](), $('#last_dices')['hide'](), $('.chat_area')['hide'](), $('.play_again_button')['hide'](), $('.message_alert')['hide'](), null != _0x52afx16['double'] && 1 == _0x52afx16['double'] && null != _0x52afx16['double_level']) {
        _0x52afx21 = _0x52afx16['amount'];
        1 == _0x52afx16['double_level'] && (_0x52afx21 *= 2), 2 == _0x52afx16['double_level'] && (_0x52afx21 *= 4), $('#game_amount_place')['html'](full_chip_format(_0x52afx21))
    } else {
        $('#game_amount_place')['html'](full_chip_format(_0x52afx16['amount']))
    };
    if ($('#double_icon')['hide'](), null != _0x52afx16['double'] && 1 == _0x52afx16['double']) {
        var _0x52afx1e = !0;
        'WHITE' == game_data['me'] && null != _0x52afx16['double_uid_1'] && 1 == _0x52afx16['double_uid_1'] && (_0x52afx1e = !1), 'BLACK' == game_data['me'] && null != _0x52afx16['double_uid_2'] && 1 == _0x52afx16['double_uid_2'] && (_0x52afx1e = !1), _0x52afx1e && $('#double_icon')['show']()
    };
    if ('' != _0x52afx1a) {
        var _0x52afx1f = new Image;
        _0x52afx1f['onload'] = function() {
            $('#opponent_photo')['attr']('src', _0x52afx1a)
        }, _0x52afx1f['onerror'] = function() {}, _0x52afx1f['src'] = _0x52afx1a
    };
    if (set_pawn_positions(_0x52afx16['places']), set_coloumns(), change_screen('game_screen'), null != _0x52afx16['double_waiting'] && 1 == _0x52afx16['double_waiting']) {
		
        var _0x52afx20 = !1;
        if ('WHITE' == game_data['me'] && 2 == _0x52afx16['double_offered'] && (_0x52afx20 = !0), 'BLACK' == game_data['me'] && 1 == _0x52afx16['double_offered'] && (_0x52afx20 = !0), _0x52afx20) {
            var _0x52afx21 = _0x52afx16['amount'];
            0 == _0x52afx16['double_level'] && (_0x52afx21 *= 2), 1 == _0x52afx16['double_level'] && (_0x52afx21 *= 4), swal({
                title: '',
                text: '<font style=\'font-size:20px;\'>' + language['data']['double_offer_accept']['replace']('{amount}', full_chip_format(_0x52afx21)) + '</font>',
                type: 'warning',
                showCancelButton: !0,
                confirmButtonColor: '#DD6B55',
                confirmButtonText: language['data']['accept'],
                cancelButtonText: language['data']['dont_accept'],
                closeOnConfirm: !0,
                html: !0,
                allowOutsideClick: !1,
                allowEscapeKey: !1,
                allowEnterKey: !1
            }, function(_0x52afx16) {
                _0x52afx16 ? socket_send({
                    command: 'double_accept',
					uid: user_data['uid'],
					token: user_data['token'],
					game_id: user_data['game_id'],
                }) : socket_send({
                    command: 'drawn',
					uid: user_data['uid'],
					token: user_data['token'],
					game_id: user_data['game_id'],
                })
            })
        }
    }
},
	game_game_status = function(_0x52afx16) {
    if (game_game_started(_0x52afx16), 4 == _0x52afx16['status']) {
        last_known_places = _0x52afx16['places'], _0x52afx16['turn'] == game_data['me'] ? (all_moves = parse_posibilities(_0x52afx16['posibilities']), set_pawn_sortable(all_moves), $('#user_dices_area')['attr']({
            style: 'vertical-align: bottom !important;'
        })) : $('#user_dices_area')['attr']({
            style: 'vertical-align: top !important;'
        }), game_turn_change(_0x52afx16['turn']), $('#last_dices .last_dices_first')['attr']({
            src: GAME_FOLDER + 'assets/dice/' + _0x52afx16['dice_1'] + '.png'
        }), $('#last_dices .last_dices_second')['attr']({
            src: GAME_FOLDER + 'assets/dice/' + _0x52afx16['dice_2'] + '.png'
        });
        var _0x52afx17 = 0.25 * ($('#user_dices_area')['height']() > $('#user_dices_area')['width']() ? $('#user_dices_area')['width']() : $('#user_dices_area')['height']());
        $('#last_dices img')['css']({
            width: _0x52afx17,
            height: _0x52afx17
        }), $('#last_dices')['show']()
    }
},
	game_turn_dice = function(_0x52afx16) {
	
	console.log('turn dice');
    var _0x52afx17 = 0,
        _0x52afx18 = 0;
    game_data['turn'] = _0x52afx16['turn'], 'WHITE' == game_data['me'] ? (_0x52afx17 = _0x52afx16['black_dice'], _0x52afx18 = _0x52afx16['white_dice']) : (_0x52afx17 = _0x52afx16['white_dice'], _0x52afx18 = _0x52afx16['black_dice']), setTimeout(function() {
        game_data['me'] == game_data['turn'] ? show_message(language['data']['backgammon_your_turn']) : show_message(language['data']['backgammon_opponent_turn'])
    }, 750), roll_turn_dices(_0x52afx17, _0x52afx18)
}, 
	game_game_dice = function(_0x52afx16) {
    $('.play_again_button')['hide']();
	console.log('game_dice');
    var _0x52afx17 = _0x52afx16['turn'];
    setTimeout(function() {
        '' != _0x52afx16['posibilities'] ? game_turn_change(_0x52afx17) : game_turn_change('null')
    }, 2e3);
    var _0x52afx18 = _0x52afx16['turn'] == game_data['me'] ? 'right' : 'left';
	console.log(_0x52afx18);
    '' == _0x52afx16['posibilities'] && (_0x52afx18 = 'right' == _0x52afx18 ? 'left' : 'right'), roll_game_dices(_0x52afx18, _0x52afx16['dice_1'], _0x52afx16['dice_2'], last_dice_first, last_dice_second), last_dice_first = _0x52afx16['dice_1'], last_dice_second = _0x52afx16['dice_2'], moved_pawns = [], last_known_places = _0x52afx16['places'], '' == _0x52afx16['posibilities'] && setTimeout(function() {
        show_message(language['data']['backgammon_no_move'])
    }, 750), 'right' == _0x52afx18 ? ($('#user_dices_area')['attr']({
        style: 'vertical-align: bottom !important;'
    }), all_moves = parse_posibilities(_0x52afx16['posibilities']), set_pawn_sortable(all_moves)) : $('#user_dices_area')['attr']({
        style: 'vertical-align: top !important;'
    })
}, 
	game_played = function(_0x52afx16) {
    if (game_turn_change('null'), $('.game_place')['css']({
            background: ''
        }), $('.play_again_button')['hide'](), _0x52afx16['player'] == game_data['me']) {
        return set_pawn_positions(_0x52afx16['places']), set_coloumns(), !1
    };
	
    _0x52afx16['places'] != pawn_positions() && (set_pawn_positions(_0x52afx16['places_were']), set_coloumns()), _0x52afx16['moves']['length'] > 0 && (places_will_be = _0x52afx16['places'], m_temp = _0x52afx16['moves'], player_played())
},
	game_win = function(_0x52afx16) {
    if (clear_chat_panel(), user_data['uid'] == _0x52afx16['uid_1'] && (user_data['chips'] = _0x52afx16['chips_1']), user_data['uid'] == _0x52afx16['uid_2'] && (user_data['chips'] = _0x52afx16['chips_2']), $('.top_left_chips')['html'](full_chip_format(user_data['chips'])), 'game_screen' == active_screen) {
        if (user_data['uid'] == _0x52afx16['winner_uid']) {
            $('.result_for_loser')['hide'](), $('.result_for_winner')['show']();
            var _0x52afx17 = language['data']['backgammon_win_amount']['replace']('{amount}', full_chip_format(_0x52afx16['amount']));
            $('.game_result_title3')['html'](_0x52afx17)
        } else {
            $('.result_for_winner')['hide'](), $('.result_for_loser')['show']()
        };
        $('.game_result')['fadeIn']()
    }
}, 
	game_chat = function(_0x52afx16) {
    add_to_chat_panel(_0x52afx16['name'], _0x52afx16['text'])
},
	game_error = function(_0x52afx16) {
    'searching_screen' == active_screen && fadein_screen('lobby_screen');
    var _0x52afx17 = _0x52afx16['message'];
    null != language['data'][_0x52afx17] && message(language['data'][_0x52afx17])
},
	game_broadcast = function(_0x52afx16) {
    if ('chat' == _0x52afx16['type']) {
        var _0x52afx17 = $('.chat_text_container')['html']();
        _0x52afx17 += '<font color=\'yellow\' style=\'font-size: 18px; font-weight: bold;\'>' + _0x52afx16['message'] + '</font><br />', $('.chat_text_container')['html'](_0x52afx17), 'none' == $('.chat_area')['css']('display') && $('#chat_button')['css']({
            color: '#ff0000',
            border: '2px solid #ff0000'
        }), setTimeout(function() {
            $('.chat_text_container')['prop']('scrollTop', $('.chat_text_container')['prop']('scrollHeight'))
        }, 100)
    } else {
        message(_0x52afx16['message'])
    }
},
	$(document)['ready'](function() {
    $(window)['resize'](function() {
        set_coloumns()
    }), set_coloumns(), start_game_timer(), $('.play_again_button')['click'](function() {
        $('.play_again_button')['hide'](), moved_pawns = [], set_pawn_positions(last_known_places), set_coloumns(), set_pawn_sortable(all_moves)
    }), $('.game_result')['click'](function() {
        $('.game_result')['hide'](), $('.play_again_button')['hide'](), change_screen('lobby_screen')
    }), $('.chat_area_overlay')['click'](function() {
        $('.chat_area')['hide']()
    }), $('#chat_button')['click'](function() {
        open_chat_panel()
    }), $('#chat_message_send')['click'](function() {
        var _0x52afx16 = $('#chat_message_text')['val']();
        if ('' == _0x52afx16) {
            return !1
        };
        $('#chat_message_text')['val'](''), socket_send({
            command: 'chat',
            text: _0x52afx16,
			uid: user_data['uid'],
			token: user_data['token'],
			game_id: user_data['game_id'],
        })
    }), $('#exit_button')['click'](function() {
        swal({
            title: '',
            text: '<font style=\'font-size:20px;\'>' + language['data']['backgammon_exit_confirm'] + '</font>',
            type: 'warning',
            showCancelButton: !0,
            confirmButtonColor: '#DD6B55',
            confirmButtonText: language['data']['backgammon_exit_yes'],
            cancelButtonText: language['data']['backgammon_exit_no'],
            closeOnConfirm: !0,
            html: !0,
            allowOutsideClick: !1,
            allowEscapeKey: !1,
            allowEnterKey: !1
        }, function() {
            change_screen('lobby_screen'), socket_send({
                command: 'drawn',
				uid: user_data['uid'],
				token: user_data['token'],
				game_id: user_data['game_id'],
            })
        })
    })
}),
	
	clear_chat_panel = function() {
    $('#chat_button')['css']({
        color: '#fff'
    }), $('.chat_area')['hide']();
    var _0x52afx16 = '';
    for (i = 0; i < 40; i++) {
        _0x52afx16 += '<br />'
    };
    $('.chat_text_container')['html'](_0x52afx16)
},
	add_to_chat_panel = function(_0x52afx16, _0x52afx17) {
    var _0x52afx18 = $('.chat_text_container')['html']();
    _0x52afx18 += '<span>' + _0x52afx16 + ':</span> ' + _0x52afx17 + '<br />', $('.chat_text_container')['html'](_0x52afx18), 'none' == $('.chat_area')['css']('display') && $('#chat_button')['css']({
        color: '#ff0000',
        border: '2px solid #ff0000'
    }), setTimeout(function() {
        $('.chat_text_container')['prop']('scrollTop', $('.chat_text_container')['prop']('scrollHeight'))
    }, 100)
},
	open_chat_panel = function() {
    var _0x52afx16 = $(window)['height']();
    0 == _0x52afx16 && (_0x52afx16 = $(document)['height']());
    var _0x52afx17 = 0.95 * (_0x52afx16 - 60);
    $('.chat_text_container')['height'](_0x52afx17), $('#chat_button')['css']({
        color: '#fff',
        border: '1px solid #235e64'
    }), $('.chat_area')['fadeIn'](), $('.chat_text_container')['prop']('scrollTop', $('.chat_text_container')['prop']('scrollHeight'))
},
	
	set_pawn_positions = function(_0x52afx16) {
	
    var _0x52afx17 = _0x52afx16['split'](',');
    for (k in _0x52afx17) {
        if ('' != _0x52afx17[k]) {
            for (var _0x52afx18 = _0x52afx17[k]['split']('.'), _0x52afx19 = _0x52afx18[0], _0x52afx1a = 'W' == _0x52afx18[1] ? 'white' : 'black', _0x52afx1b = _0x52afx18[2], _0x52afx1c = '', _0x52afx1d = 0; _0x52afx1d < _0x52afx1b; _0x52afx1d++) {
                _0x52afx1c += '<div src="' + GAME_FOLDER + 'assets/_' + _0x52afx1a + '.png" class="pawn ' + _0x52afx1a + '"></div>'
            };
            $('#place_' + _0x52afx19)['html'](_0x52afx1c)
        }
    }
},
	set_pawn_sortable = function(_0x52afx16) {

    for (k in _0x52afx16) {
        var _0x52afx17 = '#place_' + _0x52afx16[k]['from'],
            _0x52afx18 = find_to_positions(_0x52afx16[k]['from'], _0x52afx16),
            _0x52afx19 = -1 == $(_0x52afx17)['attr']('class')['indexOf']('uptd') ? 'div:first-child' : 'div:last-child';
//		console.log($(_0x52afx17)['sortable']);//file jequery-ui function(option) line 225
        $(_0x52afx17)['sortable']({
            items: _0x52afx19,
            connectWith: _0x52afx18,
            scroll: !1,
            placeholder: 'pawn_placeholder',
            forcePlaceholderSize: !1,
            start: function(_0x52afx17, _0x52afx18) {
				console.log('set_pawn_sortable/start');
				
                var _0x52afx19 = $(_0x52afx17['target'])['attr']('data'),
                    _0x52afx1a = find_to_positions(_0x52afx19, _0x52afx16);
                $(_0x52afx1a)['each'](function() {
                    var _0x52afx16 = -1 == $(this)['attr']('class')['indexOf']('uptd') ? 'bottom' : 'top',
                        _0x52afx17 = 0 == $(this)['attr']('data') || 25 == $(this)['attr']('data') ? '_last' : '',
                        _0x52afx18 = 'url(' + GAME_FOLDER + 'assets/helper_' + _0x52afx16 + _0x52afx17 + '.png) no-repeat';
                    $(this)['css']({
                        background: _0x52afx18,
                        "\x62\x61\x63\x6B\x67\x72\x6F\x75\x6E\x64\x2D\x73\x69\x7A\x65": '100% 100%'
                    })
                })
            },
            stop: function(_0x52afx16, _0x52afx17) {
//				console.log('set_pawn_sortable/stop');
//				console.log(_0x52afx16);
//				console.log(_0x52afx17);
                var _0x52afx18 = $(_0x52afx16['target'])['attr']('data');
                $('.game_place')['css']({
                    background: ''
                });
                var _0x52afx19 = $(_0x52afx16['toElement'])['parent']()['attr']('data');
                if (null == _0x52afx16['toElement'] && null != _0x52afx17['item'] && _0x52afx17['item']['length'] > 0 && (_0x52afx19 = $(_0x52afx17['item'][0])['parent']()['attr']('data')), son_olay = _0x52afx16, son_ui = _0x52afx17, 'BLACK' == game_data['me']) {
                    (_0x52afx1a = $('#place_' + _0x52afx19 + ' .white'))['length'] > 0 && ($(_0x52afx1a)['remove'](), $(_0x52afx1a)['appendTo']('#place_27'))
                } else {
//                    var _0x52afx1a = $('#place_' + _0x52afx19 + ' .black');
//					
//                    _0x52afx1a['length'] > 0 && ($(_0x52afx1a)['remove'](), $(_0x52afx1a)['appendTo']('#place_26'))
                };
                set_coloumns(), pawn_moved(_0x52afx18, _0x52afx19), _0x52afx18 != _0x52afx19 && play_audio('pawn')
            }
        })['disableSelection']()
			, 
			$(_0x52afx18)['sortable']({
            items: 'img',
            placeholder: 'pawn_placeholder'
        })['disableSelection']()
    };
    $('.pawn')['unbind']('click'), $('.pawn')['click'](function(_0x52afx16) {
        _0x52afx16['preventDefault']();
        var _0x52afx17 = $(this)['parent']()['attr']('data');
        pawn_can_move(_0x52afx17)
    })
},
	pawn_can_move = function(_0x52afx16) {
    var _0x52afx17 = all_moves;
    for (key in moved_pawns) {
		
        var _0x52afx18 = moved_pawns[key];
		
        for (k in _0x52afx17) {
            if (_0x52afx18['from'] == _0x52afx17[k]['from'] && _0x52afx18['to'] == _0x52afx17[k]['to']) {
                _0x52afx17 = _0x52afx17[k]['moves'];
                break
            }
        }
    };
    var _0x52afx19 = -1;
    for (key in _0x52afx17) {
        if (_0x52afx17[key]['from'] == _0x52afx16) {
            _0x52afx19 = _0x52afx17[key]['to'];
            break
        }
    };
    return -1 != _0x52afx19 && (!wait_for_pawn_move && (wait_for_pawn_move = !0, void(pawn_animation(_0x52afx16, _0x52afx19, function() {
        wait_for_pawn_move = !1, pawn_moved(_0x52afx16, _0x52afx19)
    }))))
},
	pawn_positions = function() {
    var _0x52afx16 = '';
    for (i = 0; i <= 27; i++) {
        var _0x52afx17 = 'N',
            _0x52afx18 = $('#place_' + i)['children']()['length'];
        if (_0x52afx18 > 0) {
            var _0x52afx19 = $('#place_' + i + ' .pawn')['attr']('class');
            _0x52afx19['indexOf']('black') > -1 && (_0x52afx17 = 'B'), _0x52afx19['indexOf']('white') > -1 && (_0x52afx17 = 'W')
        };
        0 != i && 27 != i || (_0x52afx17 = 'W'), 25 != i && 26 != i || (_0x52afx17 = 'B'), _0x52afx16 += i + '.' + _0x52afx17 + '.' + _0x52afx18 + ','
    };
    return _0x52afx16
},
	delete_sortable = function() {
    $('#game_container')['html']($('#game_container')['html']())
},
	find_to_positions = function(_0x52afx16, _0x52afx17) {
    var _0x52afx18 = [];
    for (key in _0x52afx17) {
        _0x52afx17[key]['from'] == _0x52afx16 && _0x52afx18['push']('#place_' + _0x52afx17[key]['to'])
    };
    return _0x52afx18['join'](',')
},
	pawn_moved = function(_0x52afx16, _0x52afx17) {
    delete_sortable(), _0x52afx16 != _0x52afx17 && moved_pawns['push']({
        from: _0x52afx16,
        to: _0x52afx17
    });
	
    var _0x52afx18 = all_moves;
	console.log(_0x52afx18);
    for (key in moved_pawns) {
        var _0x52afx19 = moved_pawns[key];
        for (k in _0x52afx18) {
            if (_0x52afx19['from'] == _0x52afx18[k]['from'] && _0x52afx19['to'] == _0x52afx18[k]['to']) {
                _0x52afx18 = _0x52afx18[k]['moves'];
                break
            }
        }
    };
	
    if (0 == _0x52afx18['length']) {
        var _0x52afx1a = [];
        for (key in moved_pawns) {
            var _0x52afx1b = parseInt(key) + 1;
            _0x52afx1a['push']({
                i: _0x52afx1b,
                from: parseInt(moved_pawns[key]['from']),
                to: parseInt(moved_pawns[key]['to'])
            })
        };
        $('.play_again_button')['hide'](), socket_send({
            command: 'play',
            moves: _0x52afx1a,
			uid: user_data['uid'],
			token: user_data['token'],
			game_id: user_data['game_id'],
			
        })
    }
	else {
        parseInt(_0x52afx16) != parseInt(_0x52afx17) 
//			&& $('.play_again_button')['show']()
    };
//	console.log(_0x52afx18);
    set_pawn_sortable(_0x52afx18)
},
	pawn_animation = function(_0x52afx16, _0x52afx17, _0x52afx18) {
    var _0x52afx19 = '#place_' + _0x52afx16,
        _0x52afx1a = '#place_' + _0x52afx17;
    if ('BLACK' == (-1 == $(_0x52afx19 + ' .pawn')['attr']('class')['indexOf']('white') ? 'BLACK' : 'WHITE')) {
        (_0x52afx1b = $(_0x52afx1a + ' .white'))['length'] > 0 && ($(_0x52afx1b)['remove'](), $(_0x52afx1b)['appendTo']('#place_27'))
    } else {
        var _0x52afx1b = $(_0x52afx1a + ' .black');
        _0x52afx1b['length'] > 0 && ($(_0x52afx1b)['remove'](), $(_0x52afx1b)['appendTo']('#place_26'))
    };
    var _0x52afx1c = find_pawn_offset(_0x52afx1a);
    _0x52afx19 += ' .pawn:' + (-1 == $(_0x52afx19)['attr']('class')['indexOf']('uptd') ? 'first' : 'last');
    var _0x52afx1d = $(_0x52afx19),
        _0x52afx1e = $(_0x52afx1d)['clone']();
    $(_0x52afx1e)['appendTo']('body'), _0x52afx1e['offset']($(_0x52afx1d)['offset']()), _0x52afx1e['width']($(_0x52afx1d)['width']()), _0x52afx1e['height']($(_0x52afx1d)['height']()), $(_0x52afx1d)['hide'](), $(_0x52afx1d)['remove'](), $(_0x52afx1d)['appendTo'](_0x52afx1a), $(_0x52afx1e)['animate']({
        left: _0x52afx1c['left'],
        top: _0x52afx1c['top']
    }, 250, function() {
        $(_0x52afx1e)['remove'](), $(_0x52afx1d)['show'](), set_coloumns(), null != _0x52afx18 && _0x52afx18()
    }), play_audio('pawn')
}, find_pawn_offset = function(_0x52afx16) {
    var _0x52afx17 = -1 == $(_0x52afx16)['attr']('class')['indexOf']('uptd') ? 'first' : 'last';
    pawn_to = _0x52afx16 + ' .pawn:' + _0x52afx17;
    var _0x52afx18 = $(_0x52afx16)['offset']()['left'],
        _0x52afx19 = 0;
    return _0x52afx19 = 0 == $(pawn_to)['length'] ? 'first' == _0x52afx17 ? $(_0x52afx16)['offset']()['top'] + $(_0x52afx16)['height']() - $('.pawn')['height']() : $(_0x52afx16)['offset']()['top'] : 'first' == _0x52afx17 ? $(pawn_to)['offset']()['top'] - $('.pawn')['height']() : $(pawn_to)['offset']()['top'] + $('.pawn')['height'](), new Object({
        left: _0x52afx18,
        top: _0x52afx19
    })
},
	set_coloumns = function() {
    var _0x52afx16 = 0.2 * $(document)['width']();
    $('#my_name')['css']({
        "\x6D\x61\x78\x2D\x77\x69\x64\x74\x68": _0x52afx16 + 'px',
        width: _0x52afx16 + 'px'
    }), $('#opponent_name')['css']({
        "\x6D\x61\x78\x2D\x77\x69\x64\x74\x68": _0x52afx16 + 'px',
        width: _0x52afx16 + 'px'
    });
    var _0x52afx17 = $(window)['height']();
	
    0 == _0x52afx17 && (_0x52afx17 = window.innerHeight);
				
    var _0x52afx18 = 0.47 * _0x52afx17,
        _0x52afx19 = _0x52afx17 / 650 * 66,
        _0x52afx1a = $(window)['width']() * board_width_percent * 0.066;
	
    _0x52afx1a < _0x52afx19 && (_0x52afx19 = _0x52afx1a), $('.pawn')['height'](_0x52afx19), $('.game_place')['each'](function(_0x52afx16) {
        var _0x52afx17 = -1 == $(this)['attr']('class')['indexOf']('uptd') ? 'bottom' : 'top',
            _0x52afx1a = $(this)['children'](),
            _0x52afx1b = _0x52afx1a['length'] - 1;
        if (_0x52afx1a['length'] > 0) {
            var _0x52afx1c = (_0x52afx18 - 1 * _0x52afx19) / _0x52afx1a['length'] - _0x52afx19;
            _0x52afx1c > 0 && (_0x52afx1c = 0), $(_0x52afx1a)['each'](function(_0x52afx16) {
                if (0 == _0x52afx16 && 'top' == _0x52afx17 || _0x52afx16 == _0x52afx1b && 'bottom' == _0x52afx17 ? $(this)['css']({
                        "\x6D\x61\x72\x67\x69\x6E\x2D\x74\x6F\x70": '0px',
                        "\x6D\x61\x72\x67\x69\x6E\x2D\x62\x6F\x74\x74\x6F\x6D": '0px'
                    }) : 'top' == _0x52afx17 ? $(this)['css']({
                        "\x6D\x61\x72\x67\x69\x6E\x2D\x62\x6F\x74\x74\x6F\x6D": '0px',
                        "\x6D\x61\x72\x67\x69\x6E\x2D\x74\x6F\x70": _0x52afx1c + 'px'
                    }) : $(this)['css']({
                        "\x6D\x61\x72\x67\x69\x6E\x2D\x74\x6F\x70": '0px',
                        "\x6D\x61\x72\x67\x69\x6E\x2D\x62\x6F\x74\x74\x6F\x6D": _0x52afx1c + 'px'
                    }), 'bottom' == _0x52afx17) {
                    var _0x52afx18 = _0x52afx1a['length'] - _0x52afx16;
                    $(this)['css']({
                        "\x7A\x2D\x69\x6E\x64\x65\x78": _0x52afx18
                    })
                } else {
                    $(this)['css']({
                        "\x7A\x2D\x69\x6E\x64\x65\x78": _0x52afx16
                    })
                }
            })
        }
    })
};

	var posibility_chars = '1234567890ABCDEFGHIJKLMNOPRSTUVYZWX',
    posibility_model = function(_0x52afx16) {
        for (_0x52afx17 = 0; _0x52afx17 < posibility_chars['length']; _0x52afx17++) {
            if (_0x52afx16[0] == posibility_chars[_0x52afx17]) {
                this['from'] = _0x52afx17;
                break
            }
        };
        for (var _0x52afx17 = 0; _0x52afx17 < posibility_chars['length']; _0x52afx17++) {
            if (_0x52afx16[1] == posibility_chars[_0x52afx17]) {
                this['to'] = _0x52afx17;
                break
            }
        };
        this['moves'] = [], this['add_move'] = function(_0x52afx16) {
            this['moves']['push'](_0x52afx16)
        }
    };

	parse_posibilities = function(_0x52afx16) {

		console.log('parse_posibilities');
		
		var _0x52afx17 = [];
		if (null == _0x52afx16 || '' == _0x52afx16) {
			return _0x52afx17
		};
		var _0x52afx18 = _0x52afx16['split']('.');
		
		for (key_first in _0x52afx18) {
		
			if ('' != _0x52afx18[key_first]) {
				var _0x52afx19 = _0x52afx18[key_first]['substr'](0, 2),
					_0x52afx1a = new posibility_model(_0x52afx19);
					_0x52afx17['push'](_0x52afx1a),
					_0x52afx18[key_first] = _0x52afx18[key_first]['substr'](3);
				var _0x52afx1b = _0x52afx18[key_first]['split'](',');
				for (key_second in _0x52afx1b) {
					if ('' != _0x52afx1b[key_second]) {
						var _0x52afx1c = _0x52afx1b[key_second]['substr'](0, 2),
							_0x52afx1d = new posibility_model(_0x52afx1c);
						_0x52afx1a['add_move'](_0x52afx1d),
						_0x52afx1b[key_second] = _0x52afx1b[key_second]['substr'](3);
						var _0x52afx1e = _0x52afx1b[key_second]['split'](';');
						for (key_third in _0x52afx1e) {
							if ('' != _0x52afx1e[key_third]) {
								var _0x52afx1f = _0x52afx1e[key_third]['substr'](0, 2),
									_0x52afx20 = new posibility_model(_0x52afx1f);

								_0x52afx1d['add_move'](_0x52afx20), _0x52afx1e[key_third] = _0x52afx1e[key_third]['substr'](3);

//								console.log(_0x52afx1e[key_third]['length']);

								for (var _0x52afx21 = 0; _0x52afx21 < _0x52afx1e[key_third]['length']; _0x52afx21 += 2) {
									var _0x52afx24 = _0x52afx1e[key_third]['substring'](_0x52afx21, _0x52afx21 + 2),
										_0x52afx25 = new posibility_model(_0x52afx24);
									_0x52afx20['add_move'](_0x52afx25);
//									console.log(_0x52afx24);
								}
							}
						}
					}
				}
			}
		};
		return _0x52afx17
	}, 
	get_dice_angle = function(_0x52afx16) {
    var _0x52afx17 = new Object({
        x: 0,
        y: 0
    });
    return 1 == _0x52afx16 && (_0x52afx17['x'] = -90, _0x52afx17['y'] = 0), 2 == _0x52afx16 && (_0x52afx17['x'] = 0, _0x52afx17['y'] = 0), 3 == _0x52afx16 && (_0x52afx17['x'] = 0, _0x52afx17['y'] = -90), 4 == _0x52afx16 && (_0x52afx17['x'] = 180, _0x52afx17['y'] = 0), 5 == _0x52afx16 && (_0x52afx17['x'] = 0, _0x52afx17['y'] = 90), 6 == _0x52afx16 && (_0x52afx17['x'] = 90, _0x52afx17['y'] = 0), _0x52afx17
},
	roll_turn_dices = function(_0x52afx16, _0x52afx17) {
	
    $('.dice_container')['html']('<div class="dice_container_left">	<section class="game_dice">		<div class="left">			<div class="dice first_dice">			    <div class="sf f1"></div><div class="sf f2"></div><div class="sf f3"></div><div class="sf f4"></div><div class="sf f5"></div><div class="sf f6"></div>			</div>		</div>		<div class="clear"></div>	</section></div><div class="dice_container_right">	<section class="game_dice">		<div class="left">			<div class="dice second_dice">			    <div class="sf f1"></div><div class="sf f2"></div><div class="sf f3"></div><div class="sf f4"></div><div class="sf f5"></div><div class="sf f6"></div>			</div>		</div>		<div class="clear"></div>	</section></div>'), setTimeout(function() {
        var _0x52afx18 = get_dice_angle(_0x52afx16);
        _0x52afx18['x'] += 360, _0x52afx18['y'] += 360;
        var _0x52afx19 = get_dice_angle(_0x52afx17);
        _0x52afx19['x'] -= 360, _0x52afx19['y'] -= 360,
			$('.game_dice .first_dice')['css']('transform', 'rotateX(' + _0x52afx18['x'] + 'deg) rotateY(' + _0x52afx18['y'] + 'deg)'),
			$('.game_dice .second_dice')['css']('transform', 'rotateX(' + _0x52afx19['x'] + 'deg) rotateY(' + _0x52afx19['y'] + 'deg)'),
			play_audio('dice')
    }, 100), setTimeout(function() {
        $('.dice_container')['html']('')
    }, 2e3)
}, 
	roll_game_dices = function(_0x52afx16, _0x52afx17, _0x52afx18, _0x52afx19, _0x52afx1a) {
    $('#last_dices')['hide']();
	// var1 :left or right , 
    var _0x52afx1b = get_dice_angle(_0x52afx19),
        _0x52afx1c = get_dice_angle(_0x52afx1a),
        _0x52afx1d = '<div class="dice_container_' + _0x52afx16 + '">	<section class="game_dice">		<div class="left">			<div class="dice first_dice" style="transform: rotateX(' + _0x52afx1b['x'] + 'deg) rotateY(' + _0x52afx1b['y'] + 'deg);">			    <div class="sf f1"></div><div class="sf f2"></div><div class="sf f3"></div><div class="sf f4"></div><div class="sf f5"></div><div class="sf f6"></div>			</div>		</div>		<div class="left dice_space">			<div class="dice second_dice" style="transform: rotateX(' + _0x52afx1c['x'] + 'deg) rotateY(' + _0x52afx1c['y'] + 'deg);">			    <div class="sf f1"></div><div class="sf f2"></div><div class="sf f3"></div><div class="sf f4"></div><div class="sf f5"></div><div class="sf f6"></div>			</div>		</div>		<div class="clear"></div>	</section></div>';
    $('.dice_container')['html'](_0x52afx1d), setTimeout(function() {
        var _0x52afx16 = get_dice_angle(_0x52afx17);
        _0x52afx16['x'] += 360, _0x52afx16['y'] += 360;
		
        var _0x52afx19 = get_dice_angle(_0x52afx18);
        _0x52afx19['x'] -= 360, _0x52afx19['y'] -= 360,
			$('.game_dice .first_dice')['css']('transform', 'rotateX(' + _0x52afx16['x'] + 'deg) rotateY(' + _0x52afx16['y'] + 'deg)'), $('.game_dice .second_dice')['css']('transform', 'rotateX(' + _0x52afx19['x'] + 'deg) rotateY(' + _0x52afx19['y'] + 'deg)'), play_audio('dice')
    }, 100), setTimeout(function() {
        $('.dice_container')['html'](''), $('#last_dices .last_dices_first')['attr']({
            src: GAME_FOLDER + 'assets/dice/' + _0x52afx17 + '.png'
        }), $('#last_dices .last_dices_second')['attr']({
            src: GAME_FOLDER + 'assets/dice/' + _0x52afx18 + '.png'
        });
        var _0x52afx16 = 0.25 * ($('#user_dices_area')['height']() > $('#user_dices_area')['width']() ? $('#user_dices_area')['width']() : $('#user_dices_area')['height']());
        $('#last_dices img')['css']({
            width: _0x52afx16,
            height: _0x52afx16
        }), $('#last_dices')['fadeIn']('normal')
    }, 2e3)
};

	var m_temp = []; //for function player_played

	player_played = function() {
		if (0 == m_temp['length']) {
			return set_pawn_positions(places_will_be), set_coloumns(), !1
		};
		var _0x52afx16 = m_temp[0]['from'],
			_0x52afx17 = m_temp[0]['to'];
		
		m_temp['shift'](), pawn_animation(_0x52afx16, _0x52afx17, function() {
			player_played()
		})
	},
	show_message = function(_0x52afx16) {
    $('.message_alert')['html'](_0x52afx16), $('.message_alert')['fadeIn'](), setTimeout(function() {
        $('.message_alert')['fadeOut']()
    }, 1500)
},
	game_pawns_for_white = function() {
    return '<table class="game_table">	<tr>		<td class="std"></td>		<td id="place_13" data="13" class="uptd game_place"></td>		<td id="place_14" data="14" class="uptd game_place"></td>		<td id="place_15" data="15" class="uptd game_place"></td>		<td id="place_16" data="16" class="uptd game_place"></td>		<td id="place_17" data="17" class="uptd game_place"></td>		<td id="place_18" data="18" class="uptd game_place"></td>		<td class="lstd"></td>		<td id="place_27" data="27" class="uptd game_place"></td>		<td class="lstd"></td>		<td id="place_19" data="19" class="uptd game_place"></td>		<td id="place_20" data="20" class="uptd game_place"></td>		<td id="place_21" data="21" class="uptd game_place"></td>		<td id="place_22" data="22" class="uptd game_place"></td>		<td id="place_23" data="23" class="uptd game_place"></td>		<td id="place_24" data="24" class="uptd game_place"></td>		<td class="std"></td>		<td class="mstd"></td>		<td id="place_25" data="" class="uptd game_place"></td>		<td class="mstd"></td>	</tr>	<tr>		<td class="std"></td>		<td id="place_12" data="12" class="dptd game_place"></td>		<td id="place_11" data="11" class="dptd game_place"></td>		<td id="place_10" data="10" class="dptd game_place"></td>		<td id="place_9" data="9" class="dptd game_place"></td>		<td id="place_8" data="8" class="dptd game_place"></td>		<td id="place_7" data="7" class="dptd game_place"></td>		<td class="lstd"></td>		<td id="place_26" data="26" class="dptd game_place"></td>		<td class="lstd"></td>		<td id="place_6" data="6" class="dptd game_place"></td>		<td id="place_5" data="5" class="dptd game_place"></td>		<td id="place_4" data="4" class="dptd game_place"></td>		<td id="place_3" data="3" class="dptd game_place"></td>		<td id="place_2" data="2" class="dptd game_place"></td>		<td id="place_1" data="1" class="dptd game_place"></td>		<td class="std"></td>		<td class="mstd"></td>		<td id="place_0" data="0" class="dptd game_place"></td>		<td class="mstd"></td>	</tr></table>'
},
	game_pawns_for_black = function() {
    return '<table class="game_table">	<tr>		<td class="std"></td>		<td id="place_12" data="12" class="uptd game_place"></td>		<td id="place_11" data="11" class="uptd game_place"></td>		<td id="place_10" data="10" class="uptd game_place"></td>		<td id="place_9" data="9" class="uptd game_place"></td>		<td id="place_8" data="8" class="uptd game_place"></td>		<td id="place_7" data="7" class="uptd game_place"></td>		<td class="lstd"></td>		<td id="place_26" data="26" class="uptd game_place"></td>		<td class="lstd"></td>		<td id="place_6" data="6" class="uptd game_place"></td>		<td id="place_5" data="5" class="uptd game_place"></td>		<td id="place_4" data="4" class="uptd game_place"></td>		<td id="place_3" data="3" class="uptd game_place"></td>		<td id="place_2" data="2" class="uptd game_place"></td>		<td id="place_1" data="1" class="uptd game_place"></td>		<td class="std"></td>		<td class="mstd"></td>		<td id="place_0" data="0" class="uptd game_place"></td>		<td class="mstd"></td>	</tr>	<tr>		<td class="std"></td>		<td id="place_13" data="13" class="dptd game_place"></td>		<td id="place_14" data="14" class="dptd game_place"></td>		<td id="place_15" data="15" class="dptd game_place"></td>		<td id="place_16" data="16" class="dptd game_place"></td>		<td id="place_17" data="17" class="dptd game_place"></td>		<td id="place_18" data="18" class="dptd game_place"></td>		<td class="lstd"></td>		<td id="place_27" data="27" class="dptd game_place"></td>		<td class="lstd"></td>		<td id="place_19" data="19" class="dptd game_place"></td>		<td id="place_20" data="20" class="dptd game_place"></td>		<td id="place_21" data="21" class="dptd game_place"></td>		<td id="place_22" data="22" class="dptd game_place"></td>		<td id="place_23" data="23" class="dptd game_place"></td>		<td id="place_24" data="24" class="dptd game_place"></td>		<td class="std"></td>		<td class="mstd"></td>		<td id="place_25" data="25" class="dptd game_place"></td>		<td class="mstd"></td>	</tr></table>'
},
	change_screen = function(_0x52afx16) {
    active_screen = _0x52afx16, $('.screen')['hide'](), $('#' + _0x52afx16)['show'](), 'lobby_screen' == _0x52afx16 && refresh_games_list()
},
	fadein_screen = function(_0x52afx16) {
    active_screen = _0x52afx16, $('.screen')['hide'](), $('#' + _0x52afx16)['fadeIn'](), 'lobby_screen' == _0x52afx16 && refresh_games_list()
},
	start_game = function(_0x52afx16) {
    setTimeout(function() {
        change_screen('loading_screen'), language = (new lang)['load'](function() {
            language['set_game'](), (game_assets = new game_assets_class)['load'](function() {
                _0x52afx16()
            })
        })
    }, 1e3)
},
	createCookie = function(_0x52afx16, _0x52afx17) {
    var _0x52afx18 = new Date;
    _0x52afx18['setTime'](_0x52afx18['getTime']() + 2592e6);
    var _0x52afx19 = '; expires=' + _0x52afx18['toGMTString']();
    document['cookie'] = _0x52afx16 + '=' + _0x52afx17 + _0x52afx19 + '; path=/'
},
	readCookie = function(_0x52afx16) {
    for (var _0x52afx17 = _0x52afx16 + '=', _0x52afx18 = document['cookie']['split'](';'), _0x52afx19 = 0; _0x52afx19 < _0x52afx18['length']; _0x52afx19++) {
        for (var _0x52afx1a = _0x52afx18[_0x52afx19];
            ' ' == _0x52afx1a['charAt'](0);) {
            _0x52afx1a = _0x52afx1a['substring'](1, _0x52afx1a['length'])
        };
        if (0 == _0x52afx1a['indexOf'](_0x52afx17)) {
            return _0x52afx1a['substring'](_0x52afx17['length'], _0x52afx1a['length'])
        }
    };
    return null
},
	eraseCookie = function(_0x52afx16) {
    createCookie(_0x52afx16, '', -1)
},
	apiRequest = function(_0x52afx16, _0x52afx17, _0x52afx18) {
    var _0x52afx19 = readCookie('language');
    null != _0x52afx19 && null == _0x52afx17['language'] && (_0x52afx17['language'] = _0x52afx19), _0x52afx17['lang'] = userLang, _0x52afx17['device'] = DEVICE_TYPE, _0x52afx17['game'] = 'backgammon', $['post'](API_URL + _0x52afx16, _0x52afx17)['done'](function(_0x52afx16) {
        if (null != _0x52afx18) {
            var _0x52afx17 = 'object' == typeof _0x52afx16 ? _0x52afx16 : JSON['parse'](_0x52afx16),
                _0x52afx19 = null != _0x52afx17['result'] ? _0x52afx17['result'] : 'null';
            _0x52afx18(_0x52afx19, _0x52afx17)
        }
    })['fail'](function(_0x52afx16, _0x52afx17, _0x52afx18) {
//        top['location']['reload']()
    })
},
	message = function(_0x52afx16) {
    var _0x52afx17 = null != language && null != language['data'] && null != language['data']['okey'] ? language['data']['okey'] : 'OK';
    swal({
        title: '',
        text: '<font style=\'font-size:20px;\'>' + _0x52afx16 + '</font>',
        confirmButtonText: _0x52afx17,
        html: !0
    })
};

	var lang = function() {
			this['load'] = function(_0x52afx16) {
				var _0x52afx17 = new Object;
				_0x52afx17['lang'] = userLang;
				var _0x52afx18 = readCookie('language');
				return null != _0x52afx18 && (_0x52afx17['language'] = _0x52afx18), apiRequest('user/Newgame/language', _0x52afx17, function(_0x52afx17, _0x52afx18) {
					null != _0x52afx18['data'] && (language['data'] = _0x52afx18['data']), null != _0x52afx16 && _0x52afx16()
				}), this
			}, this['set_game'] = function() {
				$('.lang_31')['html'](this['data']['main_disconnect']), $('.lang_32')['html'](this['data']['main_connect_again']), $('.lang_46')['html'](this['data']['landscape']), $('.lang_47')['html'](this['data']['backgammon_searching']), $('.lang_48')['html'](this['data']['please_wait']), $('.lang_49')['html'](this['data']['cancel']), $('.lang_50')['html'](this['data']['backgammon_exit']), $('.lang_51')['html'](this['data']['backgammon_chat']), $('.lang_52')['html'](this['data']['backgammon_go_back']), $('.lang_53')['html'](this['data']['backgammon_loser']), $('.lang_54')['html'](this['data']['backgammon_winner']), $('.lang_55')['html'](this['data']['backgammon_close']), $('.lang_56')['html'](this['data']['chat_send']), $('.lang_70')['html'](this['data']['friends_list']), $('.lang_71')['html'](this['data']['double_option']), null != this['data']['javascript'] && eval(this['data']['javascript'])
			}
		},
    game_assets_class = function() {
        this['assets'] = new Object, this['list'] = [], this['list']['push']({
            type: 'image',
            url: 'assets/back.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/black_pawn.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/board.jpg'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/board_rear.jpg'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/button_blue.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/button_red.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/cancel.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/cashier.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/compose.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/friends.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/helper_bottom.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/helper_bottom_last.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/helper_top.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/helper_top_last.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/home.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/landscape.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/lang.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/minus.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/placeholder.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/plus.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/settings.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/sound_0.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/sound_1.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/telegram.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/white_pawn.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/check.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/double.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/dice/1.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/dice/2.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/dice/3.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/dice/4.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/dice/5.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/dice/6.png'
        }), this['clean_name'] = function(_0x52afx16) {
            return _0x52afx16['split']('/')['join']('')['split']('.')['join']('')
        }, this['total_assets'] = this['list']['length'], this['load'] = function(_0x52afx16) {
            var _0x52afx17 = 150 * (this['total_assets'] - this['list']['length']) / this['total_assets'];
            if ($('.loading_bar')['show'](), $('#loading_indicator')['width'](_0x52afx17), this['list']['length'] > 0) {
                var _0x52afx18 = this['list'][0]['url'],
                    _0x52afx19 = this['list'][0]['type'];
                if (this['list']['shift'](), 'image' == _0x52afx19) {
                    var _0x52afx1a = new Image;
                    _0x52afx1a['onload'] = function() {
                        var _0x52afx17 = game_assets['clean_name'](_0x52afx18);
                        game_assets['assets'][_0x52afx17] = _0x52afx1a, game_assets['load'](_0x52afx16)
                    }, _0x52afx1a['onerror'] = function() {
                        game_assets['load'](_0x52afx16)
                    }, null != ADDITIONAL_FILES[_0x52afx18] ? _0x52afx1a['src'] = ADDITIONAL_FILES[_0x52afx18] : _0x52afx1a['src'] = GAME_FOLDER + _0x52afx18
                } else {
                    if ('sound' == _0x52afx19) {
                        var _0x52afx1b = new Audio;
                        _0x52afx1b['onloadeddata'] = function() {
                            var _0x52afx17 = game_assets['clean_name'](_0x52afx18);
                            game_assets['assets'][_0x52afx17] = _0x52afx1b, game_assets['load'](_0x52afx16)
                        }, _0x52afx1b['onerror'] = function() {
                            game_assets['load'](_0x52afx16)
                        }, _0x52afx1b['src'] = GAME_FOLDER + _0x52afx18
                    }
                };
                return !1
            };
            $('.loading_bar')['hide'](), _0x52afx16()
        }, this['get'] = function(_0x52afx16) {
            if (_0x52afx16['length'] < 7) {
                return null
            };
            if ('assets' != _0x52afx16['substr'](0, 6)) {
                return null
            };
            var _0x52afx17 = this['clean_name'](_0x52afx16);
            return null != this['assets'][_0x52afx17] ? this['assets'][_0x52afx17] : null
        }
    };


	full_chip_format = function(_0x52afx16) {
		return (_0x52afx16 / 1)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
	},
	short_chip_format = function(_0x52afx16) {
    return (_0x52afx16 / 1)['formatMoney'](0, MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
},
	chip_format_no_symbol = function(_0x52afx16) {
    return (_0x52afx16 / 1)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2])
},
	Number['prototype']['formatMoney'] = function(_0x52afx16, _0x52afx17, _0x52afx18) {
    var _0x52afx19 = this,
        _0x52afx16 = isNaN(_0x52afx16 = Math['abs'](_0x52afx16)) ? 2 : _0x52afx16,
        _0x52afx17 = void(0) == _0x52afx17 ? '.' : _0x52afx17,
        _0x52afx18 = void(0) == _0x52afx18 ? ',' : _0x52afx18,
        _0x52afx1a = _0x52afx19 < 0 ? '-' : '',
        _0x52afx1b = parseInt(_0x52afx19 = Math['abs'](+_0x52afx19 || 0)['toFixed'](_0x52afx16)) + '',
        _0x52afx1c = (_0x52afx1c = _0x52afx1b['length']) > 3 ? _0x52afx1c % 3 : 0;
    return _0x52afx1a + (_0x52afx1c ? _0x52afx1b['substr'](0, _0x52afx1c) + _0x52afx18 : '') + _0x52afx1b['substr'](_0x52afx1c)['replace'](/(\d{3})(?=\d)/g, '$1' + _0x52afx18) + (_0x52afx16 ? _0x52afx17 + Math['abs'](_0x52afx19 - _0x52afx1b)['toFixed'](_0x52afx16)['slice'](2) : '')
};


	var bet_selector_model = function() {
		this['prepare'] = function() {
			this['bets'] = null != user_data['bets'] ? user_data['bets'] : [], null == this['percent'] && (this['percent'] = Math['round'](this['bets']['length'] / 2)), this['setValue'](), this['setBar']()
		}, this['plus'] = function() {
			this['percent'] += 1, this['percent'] > this['bets']['length'] && (this['percent'] = this['bets']['length']), this['setValue'](), this['setBar']()
		}, this['minus'] = function() {
			this['percent'] -= 1, this['percent'] < 1 && (this['percent'] = 1), this['setValue'](), this['setBar']()
		}, this['drag'] = function(_0x52afx16, _0x52afx17) {
			this['percent'] = Math['round'](this['bets']['length'] * _0x52afx16 / 100), this['percent'] < 1 && (this['percent'] = 1), this['setValue'](), $('.bet_holder_bg_in')['css']({
				width: _0x52afx17
			})
		}, this['setValue'] = function() {
			var _0x52afx16 = short_chip_format(this['bets'][this['percent'] - 1]);
			$('#play_button')['html'](language['data']['backgammon_play']['replace']('{amount}', _0x52afx16))
		}, this['setBar'] = function() {
			var _0x52afx16 = 80 * (this['percent'] - 1) / (this['bets']['length'] - 1);
			_0x52afx16 = 'lobby_screen' != active_screen ? _0x52afx16 / 100 * (0.7 * ($(window)['width']() > $(window)['height']() ? $(window)['width']() : $(window)['height']()) - 100) : $('.bet_holder')['width']() * (_0x52afx16 / 100), $('.bet_indicator')['css']({
				left: _0x52afx16
			});
			var _0x52afx17 = 95 * (this['percent'] - 1) / (this['bets']['length'] - 1);
			$('.bet_holder_bg_in')['css']({
				width: _0x52afx17 + '%'
			})
		}, this['getValue'] = function() {
			return this['bets'][this['percent'] - 1]
		}
	};


	start_game_timer = function() {
		setInterval(function() {
			if (null == game_data['turn_counter'] || null == game_data['turn_who'] || 'game_screen' != active_screen) {
				return !1
			};
			game_data['turn_counter'] -= 1, game_data['turn_counter'] < 0 && (game_data['turn_counter'] = 0);
			var _0x52afx16 = 100 * game_data['turn_counter'] / (10 * game_turn_time),
				_0x52afx17 = game_data['turn_who'] + ' .turn_bar';
			$(_0x52afx17)['css']({
				width: _0x52afx16 + '%'
			})
		}, 100)
	},
	game_turn_change = function(_0x52afx16) {
	
    if ('null' == _0x52afx16) {
        return game_data['turn_counter'] = null, $('.turn_container')['hide'](), !1
    };
    $('.turn_container')['hide'](), $('.turn_container .turn_bar')['css']({
        width: '100%'
    }), game_data['turn_counter'] = 10 * game_turn_time, game_data['turn_who'] = _0x52afx16 == game_data['me'] ? '.my_turn' : '.opponent_turn', $(game_data['turn_who'])['fadeIn']()
},
	play_audio = function(_0x52afx16) {
    if (1 == mute_audios) {
        return !1
    };
    var _0x52afx17 = document['getElementById']('sound_' + _0x52afx16);
    return _0x52afx17['currentTime'] = 0, _0x52afx17['play'](), _0x52afx17
},
	socket_connect = function(_0x52afx16, _0x52afx17) {
    null != socket_connection && 1 == socket_connection['readyState'] && (socket_connection['close'](), socket_connection = null), (socket_connection = new WebSocket(_0x52afx16, 'onopen'))['onopen'] = function(_0x52afx16) {
        null != _0x52afx17 && _0x52afx17(!0), _0x52afx17 = null
    }, socket_connection['onmessage'] = function(_0x52afx16) {
        var _0x52afx17 = JSON['parse'](_0x52afx16['data']);
        data_from_socket(_0x52afx17)
    }, socket_connection['onclose'] = function(_0x52afx16) {
        fadein_screen('disconnect_screen')
    }, socket_connection['onerror'] = function(_0x52afx16) {
        null != _0x52afx17 && _0x52afx17(!1), fadein_screen('disconnect_screen')
    }
},
	socket_disconnect = function() {
    if (null == socket_connection || 1 != socket_connection['readyState']) {
        return !1
    };
    socket_connection['close']()
},
	socket_send = function(_0x52afx16) {
    return null != socket_connection && 1 == socket_connection['readyState'] && (socket_connection['send'](JSON['stringify'](_0x52afx16)), !0)
},
	connect_to_server = function(_0x52afx16) {
    socket_connect(_0x52afx16, function(_0x52afx16) {
        1 == _0x52afx16 ? socket_send({
            command: 'auth',
			uid: user_data['uid'],
			token: user_data['token'],
			game_id: user_data['game_id'],
        }) : fadein_screen('disconnect_screen')
    })
},
	$(document)['ready'](function() {
    double_game && $('#double_game_image')['css']({
        visibility: 'visible'
    }), $('#double_button')['click'](function() {
        double_game ? (double_game = !1, $('#double_game_image')['css']({
            visibility: 'hidden'
        })) : (double_game = !0, $('#double_game_image')['css']({
            visibility: 'visible'
        }))
    }), $('#double_icon')['click'](function() {
        can_send_double && swal({
            title: '',
            text: '<font style=\'font-size:20px;\'>' + language['data']['double_offer_confirm'] + '</font>',
            type: 'warning',
            showCancelButton: !0,
            confirmButtonColor: '#DD6B55',
            confirmButtonText: language['data']['backgammon_exit_yes'],
            cancelButtonText: language['data']['pasoor_exit_no'],
            closeOnConfirm: !0,
            html: !0,
            allowOutsideClick: !1,
            allowEscapeKey: !1,
            allowEnterKey: !1
        }, function() {
            socket_send({
                command: 'double_offer',
				uid: user_data['uid'],
				token: user_data['token'],
				game_id: user_data['game_id'],
            })
        })
    }), start_game(function() {
		
		var code = getCookie('code');
		var game_id = getCookie('game');
		
        apiRequest('user/Newgame/auth', {'code': code, 'game_id': game_id}, function(_0x52afx2a, _0x52afx2b) {
            'ok' == _0x52afx2a ? (user_data['uid'] = _0x52afx2b['data']['uid'], user_data['game_id'] = _0x52afx2b['data']['game_id'], user_data['token'] = _0x52afx2b['data']['token'], null != _0x52afx2b['data']['javascript'] && eval(_0x52afx2b['data']['javascript']), connect_to_server(_0x52afx2b['data']['address'])) : fadein_screen('disconnect_screen')
        })
    }), $('.home_button')['click'](function() {
        top['location'] = HOME_URL
    }), $('.back_to_home')['click'](function() {
        fadein_screen('home_screen')
    }), $('.back_to_lobby')['click'](function() {
        fadein_screen('lobby_screen')
    }), $('.refresh_button')['click'](function() {
        top['location'] = MAIN_URL
    }), $('#play_button')['click'](function() {
        change_screen('searching_screen'), socket_send({
            command: 'enter_game',
            amount: bet_selector['getValue'](),
            double: double_game,
			uid: user_data['uid'],
			token: user_data['token'],
			game_id: user_data['game_id'],
        })
    }), $('#cancel_button')['click'](function() {
        socket_send({
            command: 'cancel_game',
			uid: user_data['uid'],
			token: user_data['token'],
			game_id: user_data['game_id'],
        })
    }), $('#sound_icon')['click'](function() {
        mute_audios ? (mute_audios = !1, $('#sound_icon')['attr']({
            src: GAME_FOLDER + 'assets/sound_0.png'
        })) : (mute_audios = !0, $('#sound_icon')['attr']({
            src: GAME_FOLDER + 'assets/sound_1.png'
        }))
    }), $('.friends_button')['click'](function() {
        open_friends_screen()
    }), bet_selector = new bet_selector_model, $('.bet_selector_plus')['click'](function() {
        bet_selector['plus']()
    }), $('.bet_selector_minus')['click'](function() {
        bet_selector['minus']()
    }), $('.bet_indicator')['draggable']({
        axis: 'x',
        containment: '.bet_holder',
        scroll: !1,
        drag: function(_0x52afx16, _0x52afx17) {
            var _0x52afx18 = $('.bet_holder')['width']() - $('.bet_indicator')['width'](),
                _0x52afx19 = Math['round'](100 * _0x52afx17['position']['left'] / _0x52afx18);
            bet_selector['drag'](_0x52afx19, _0x52afx17['position']['left'] + 10)
        }
    }), $(window)['resize'](function() {
        'lobby_screen' == active_screen && fadein_screen('lobby_screen')
    }), document['getElementById']('canvas_holder')['addEventListener']('touchmove', function(_0x52afx16) {
        _0x52afx16['preventDefault']()
    }, !1), document['getElementById']('canvas_holder')['addEventListener']('click', function(_0x52afx16) {
        _0x52afx16['preventDefault']()
    }, !1), document['getElementById']('canvas_holder')['addEventListener']('touchstart', function(_0x52afx16) {
        _0x52afx16['preventDefault']()
    }, !1), document['getElementById']('canvas_holder')['addEventListener']('touchend', function(_0x52afx16) {
        _0x52afx16['preventDefault']()
    }, !1)
}),
	find_level_from_xp = function(_0x52afx16) {
    for (var _0x52afx17 = 1; _0x52afx17 <= 100; _0x52afx17++) {
        if (_0x52afx16 <= 5 * _0x52afx17 * _0x52afx17) {
            return _0x52afx17
        }
    };
    return 100
},
	open_user_profile = function(_0x52afx16) {
    if (null == _0x52afx16['uid'] || _0x52afx16['uid'] == user_data['uid']) {
        return !1
    };
    var _0x52afx17 = '' != _0x52afx16['photo'] ? _0x52afx16['photo'] : GAME_FOLDER + 'assets/placeholder.png',
        _0x52afx18 = is_my_friend(_0x52afx16['uid']) ? language['data']['profile_remove_friend'] : language['data']['profile_add_friend'],
        _0x52afx19 = (language['data']['profile_chips']['replace']('{amount}', full_chip_format(_0x52afx16['shown'])), language['data']['profile_level']['replace']('{level}', find_level_from_xp(_0x52afx16['level']))),
        _0x52afx1a = is_my_friend(_0x52afx16['uid']) ? '#AF0505' : '#1DA52E';
    swal({
        title: _0x52afx16['name'],
        imageUrl: _0x52afx17,
        text: '<font style=\'font-size:20px;\'>' + _0x52afx19 + '</font>',
        confirmButtonColor: _0x52afx1a,
        confirmButtonText: _0x52afx18,
        cancelButtonText: language['data']['profile_close'],
        showCancelButton: !0,
        closeOnConfirm: !0,
        closeOnCancel: !0,
        allowOutsideClick: !0,
        html: !0
    }, function(_0x52afx17) {
        _0x52afx17 && friendship_proccess(_0x52afx16['uid'])
    })
},
	friendship_proccess = function(_0x52afx16) {
    if (is_my_friend(_0x52afx16)) {
        for (key in user_data['friends']) {
            if (user_data['friends'][key]['uid'] == _0x52afx16) {
                user_data['friends']['splice'](key, 1);
                break
            }
        };
        socket_send({
            command: 'friends',
            type: 'remove',
            uid: _0x52afx16,
//			uid: user_data['uid'],
			token: user_data['token'],
			game_id: user_data['game_id'],
        })
    } else {
        user_data['friends']['push']({
            uid: _0x52afx16,
            name: ''
        }), socket_send({
            command: 'friends',
            type: 'add',
            uid: _0x52afx16,
//			uid: user_data['uid'],
			token: user_data['token'],
			game_id: user_data['game_id'],
        })
    }
}, 
	is_my_friend = function(_0x52afx16) {
    if (null == user_data['friends']) {
        return !1
    };
    for (key in user_data['friends']) {
        if (user_data['friends'][key]['uid'] == _0x52afx16) {
            return !0
        }
    };
    return !1
}, 
	open_friends_screen = function() {
    change_screen('loading_screen'), socket_send({
        command: 'friends',
        type: 'list',
		uid: user_data['uid'],
		token: user_data['token'],
		game_id: user_data['game_id'],
    })
},
	show_friends_screen = function(_0x52afx16) {
    _0x52afx16['friends'] = _0x52afx16['friends']['sort'](function(_0x52afx16, _0x52afx17) {
        return _0x52afx17['code'] - _0x52afx16['code']
    });
    var _0x52afx17 = '<table class="support_table">';
    for (key in _0x52afx16['friends']) {
        var _0x52afx18 = '';
        '1' == _0x52afx16['friends'][key]['code'] && (_0x52afx18 = '<font color="#A91717">(' + language['data']['friends_offline'] + ')</font>'), '2' == _0x52afx16['friends'][key]['code'] && (_0x52afx18 = '<font color="#30DAE3">(' + language['data']['friends_online'] + ')</font>'), '3' == _0x52afx16['friends'][key]['code'] && (_0x52afx18 = '<font color="#3FFF28">(' + language['data']['friends_playing'] + ')</font>');
        var _0x52afx19 = '';
        '2' == _0x52afx16['friends'][key]['code'] && (_0x52afx19 = '<a href="javascript:;" class="clickable invite_button myButton" data="' + _0x52afx16['friends'][key]['uid'] + '">' + $('#play_button')['html']() + '</a>'), _0x52afx17 = _0x52afx17 + '<tr class="black_back">	<td valign="center" style="vertical-aligment: center !important;">		<div class="left margin_5">' + _0x52afx16['friends'][key]['name'] + ' &nbsp; ' + _0x52afx18 + '</div>		<div class="right margin_5">' + _0x52afx19 + '</div>		<div class="clear"></div>	</td></tr>'
    };
    _0x52afx17 += '</table>', 0 == _0x52afx16['friends']['length'] && (_0x52afx17 = '<table class="support_table">	<tr class="black_back">		<td><div class="margin_5">' + language['data']['has_no_friends'] + '</div></td>	</tr></table>'), $('#friends_list')['html'](_0x52afx17), change_screen('friends_screen'), $('.invite_button')['unbind']('click'), $('.invite_button')['click'](function(_0x52afx16) {
        _0x52afx16['preventDefault']();
        var _0x52afx17 = $(this)['attr']('data');
        change_screen('searching_screen'), socket_send({
            command: 'enter_game',
            invite: _0x52afx17,
            amount: bet_selector['getValue'](),
            double: double_game,
			uid: user_data['uid'],
			token: user_data['token'],
			game_id: user_data['game_id'],
        })
    })
},
	friend_invited = function(_0x52afx16) {
    var _0x52afx17 = '' != _0x52afx16['photo'] ? _0x52afx16['photo'] : GAME_FOLDER + 'assets/placeholder.png',
        _0x52afx18 = language['data']['invite_text']['replace']('{amount}', full_chip_format(_0x52afx16['amount']));
    null != _0x52afx16['double'] && 1 == _0x52afx16['double'] && (_0x52afx18 = language['data']['double_invite_text']['replace']('{amount}', full_chip_format(_0x52afx16['amount']))), _0x52afx18 = _0x52afx18['replace']('{name}', _0x52afx16['name']), swal({
        title: '',
        imageUrl: _0x52afx17,
        text: '<font style=\'font-size:20px;\'>' + _0x52afx18 + '</font>',
        confirmButtonColor: '#1DA52E',
        confirmButtonText: language['data']['invite_accept'],
        cancelButtonText: language['data']['invite_decline'],
        cancelButtonColor: '#AF0505',
        showCancelButton: !0,
        closeOnConfirm: !0,
        closeOnCancel: !0,
        allowOutsideClick: !0,
        html: !0
    }, function(_0x52afx17) {
        _0x52afx17 && (change_screen('searching_screen'), socket_send({
            command: 'enter_game',
            invited: _0x52afx16['uid'],
            amount: _0x52afx16['amount'],
            double: _0x52afx16['double'],
			uid: user_data['uid'],
			token: user_data['token'],
			game_id: user_data['game_id'],
        }))
    })
}