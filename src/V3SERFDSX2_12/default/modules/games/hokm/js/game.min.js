var assets_element = function() {
    this['callback'] = null, this['assets_list'] = null, this['assets_total'] = 0, this['assets_map'] = new Object, this['load'] = function(_0xdb4bx2, _0xdb4bx3) {
        this['assets_list'] = _0xdb4bx2, this['assets_total'] = _0xdb4bx2['length'], this['callback'] = _0xdb4bx3, this['load_asset']()
    }, this['load_asset'] = function() {
        if (0 == this['assets_list']['length']) {
            return null != this['callback'] && this['callback'](!0, 100), !1
        };
        this['callback'](!1, this['percent']());
        var _0xdb4bx2 = this['assets_list']['pop']();
        'image' == _0xdb4bx2['type'] && (this['assets_map'][_0xdb4bx2['name']] = new Image, this['assets_map'][_0xdb4bx2['name']]['onload'] = function() {
            assets['load_asset']()
        }, this['assets_map'][_0xdb4bx2['name']]['src'] = _0xdb4bx2['file'])
    }, this['get'] = function(_0xdb4bx2) {
        return null != this['assets_map'][_0xdb4bx2] ? this['assets_map'][_0xdb4bx2] : null
    }, this['percent'] = function() {
        return parseInt(100 * (this['assets_total'] - this['assets_list']['length']) / this['assets_total'])
    }
};


function getCookie(cname) {
    var name = cname + "=";
    var decodedCookie = decodeURIComponent(document.cookie);
    var ca = decodedCookie.split(';');
    for(var i = 0; i <ca.length; i++) {
        var c = ca[i];
        while (c.charAt(0) == ' ') {
            c = c.substring(1);
        }
        if (c.indexOf(name) == 0) {
            return c.substring(name.length, c.length);
        }
    }
    return "";
}



play_audio = function(_0xdb4bx2) {
    if (!controls['sounds']) {
        return !1
    };
    var _0xdb4bx3 = document['getElementById']('sound_' + _0xdb4bx2);
    return _0xdb4bx3['currentTime'] = 0, _0xdb4bx3['play'](), _0xdb4bx3
};
var controls_element = function() {
        this['effect_time'] = 10, this['hokm'] = -1, this['posibilities'] = [], this['turn_time_finish'] = 0, this['turn_time_total'] = 0, this['sounds'] = !0, this['sounds_img'] = assets['get']('soundo'), this['alertText'] = null, this['alertTimer'] = null, this['alertOnClose'] = null, this['coors'] = null, this['chat_badge'] = !1, this['profile1'] = null, this['profile2'] = null, this['profile3'] = null, this['profile4'] = null, this['hand'] = null, this['deck'] = null, this['middle'] = null, this['select_hokm'] = !1, this['select_coors'] = null, this['selectHokm'] = function() {
            this['select_hokm'] = !0
        }, this['hokmSelected'] = function() {
            this['select_hokm'] = !1, this['select_coors'] = null
        }, this['showAlert'] = function(_0xdb4bx2, _0xdb4bx3, _0xdb4bx18) {
            null != this['alertTimer'] && (clearTimeout(this['alertTimer']), this['alertTimer'] = null), this['alertOnClose'] = null, this['alertText'] = _0xdb4bx2, null == _0xdb4bx3 && (_0xdb4bx3 = 0), _0xdb4bx3 > 0 && (this['alertTimer'] = setTimeout(function() {
                controls['alertText'] = null, controls['alertTimer'] = null, controls['alertOnClose'] = null, null != controls['alertOnClose'] && controls['alertOnClose']()
            }, _0xdb4bx3)), null != _0xdb4bx18 && (this['alertOnClose'] = _0xdb4bx18)
        }, this['setTurn'] = function(_0xdb4bx2, _0xdb4bx3) {
            1 == _0xdb4bx2 && play_audio('turn'), null != this['profile1'] && (this['profile1']['turn'] = !1), null != this['profile2'] && (this['profile2']['turn'] = !1), null != this['profile3'] && (this['profile3']['turn'] = !1), null != this['profile4'] && (this['profile4']['turn'] = !1), 1 == _0xdb4bx2 && null != this['profile1'] && (this['profile1']['turn'] = !0), 2 == _0xdb4bx2 && null != this['profile2'] && (this['profile2']['turn'] = !0), 3 == _0xdb4bx2 && null != this['profile3'] && (this['profile3']['turn'] = !0), 4 == _0xdb4bx2 && null != this['profile4'] && (this['profile4']['turn'] = !0), this['turn_time_finish'] = (new Date)['getTime']() + _0xdb4bx3
        }, this['turnTime'] = function() {
            var _0xdb4bx2 = 2 * (this['turn_time_finish'] - (new Date)['getTime']()) / this['turn_time_total'];
            return _0xdb4bx2 <= 0 ? 1.5 : 1.5001 - _0xdb4bx2
        }, this['mousedown'] = function(_0xdb4bx2) {
            if (null != this['alertText']) {
                return null != this['alertTimer'] && (clearTimeout(this['alertTimer']), this['alertTimer'] = null), this['alertText'] = null, null != this['alertOnClose'] && this['alertOnClose'](), this['alertOnClose'] = null, !0
            };
            if (this['select_hokm'] && null != this['select_coors']) {
                if (_0xdb4bx2['clientY'] >= this['select_coors']['sy'] && _0xdb4bx2['clientY'] <= this['select_coors']['sy'] + this['select_coors']['ss']) {
                    if (_0xdb4bx2['clientX'] >= this['select_coors']['sx'][0] && _0xdb4bx2['clientX'] <= this['select_coors']['sx'][0] + this['select_coors']['ss']) {
                        return socket_send({
                            command: 'hokm',
                            card: 0
                        }), !0
                    };
                    if (_0xdb4bx2['clientX'] >= this['select_coors']['sx'][1] && _0xdb4bx2['clientX'] <= this['select_coors']['sx'][1] + this['select_coors']['ss']) {
                        return socket_send({
                            command: 'hokm',
                            card: 2
                        }), !0
                    };
                    if (_0xdb4bx2['clientX'] >= this['select_coors']['sx'][2] && _0xdb4bx2['clientX'] <= this['select_coors']['sx'][2] + this['select_coors']['ss']) {
                        return socket_send({
                            command: 'hokm',
                            card: 1
                        }), !0
                    };
                    if (_0xdb4bx2['clientX'] >= this['select_coors']['sx'][3] && _0xdb4bx2['clientX'] <= this['select_coors']['sx'][3] + this['select_coors']['ss']) {
                        return socket_send({
                            command: 'hokm',
                            card: 3
                        }), !0
                    }
                };
                return !1
            };
            if (null != this['hand'] && this['hand']['mousedown'](_0xdb4bx2)) {
                return !0
            };
            if (null != this['coors']) {
                if (_0xdb4bx2['clientX'] >= this['coors']['close']['x'] && _0xdb4bx2['clientX'] <= this['coors']['close']['x'] + this['coors']['close']['s'] && _0xdb4bx2['clientY'] >= this['coors']['close']['y'] && _0xdb4bx2['clientY'] <= this['coors']['close']['y'] + this['coors']['close']['s']) {
                    return leave_game(), !0
                };
                if (_0xdb4bx2['clientX'] >= this['coors']['sound']['x'] && _0xdb4bx2['clientX'] <= this['coors']['sound']['x'] + this['coors']['sound']['s'] && _0xdb4bx2['clientY'] >= this['coors']['sound']['y'] && _0xdb4bx2['clientY'] <= this['coors']['sound']['y'] + this['coors']['sound']['s']) {
                    return this['sounds'] ? (this['sounds'] = !1, this['sounds_img'] = assets['get']('soundc')) : (this['sounds'] = !0, this['sounds_img'] = assets['get']('soundo')), this['sound_change'](this['sounds']), !0
                }
            };
            return null != this['profile1'] && null != this['profile1']['coors'] && _0xdb4bx2['clientX'] >= this['profile1']['coors']['x'] && _0xdb4bx2['clientX'] <= this['profile1']['coors']['x'] + this['profile1']['coors']['s'] && _0xdb4bx2['clientY'] >= this['profile1']['coors']['y'] && _0xdb4bx2['clientY'] <= this['profile1']['coors']['y'] + this['profile1']['coors']['s'] || (null != this['profile2'] && null != this['profile2']['coors'] && _0xdb4bx2['clientX'] >= this['profile2']['coors']['x'] && _0xdb4bx2['clientX'] <= this['profile2']['coors']['x'] + this['profile2']['coors']['s'] && _0xdb4bx2['clientY'] >= this['profile2']['coors']['y'] && _0xdb4bx2['clientY'] <= this['profile2']['coors']['y'] + this['profile2']['coors']['s'] ? (this['profile2']['click'](), !0) : null != this['profile3'] && null != this['profile3']['coors'] && _0xdb4bx2['clientX'] >= this['profile3']['coors']['x'] && _0xdb4bx2['clientX'] <= this['profile3']['coors']['x'] + this['profile3']['coors']['s'] && _0xdb4bx2['clientY'] >= this['profile3']['coors']['y'] && _0xdb4bx2['clientY'] <= this['profile3']['coors']['y'] + this['profile3']['coors']['s'] ? (this['profile3']['click'](), !0) : null != this['profile4'] && null != this['profile4']['coors'] && _0xdb4bx2['clientX'] >= this['profile4']['coors']['x'] && _0xdb4bx2['clientX'] <= this['profile4']['coors']['x'] + this['profile4']['coors']['s'] && _0xdb4bx2['clientY'] >= this['profile4']['coors']['y'] && _0xdb4bx2['clientY'] <= this['profile4']['coors']['y'] + this['profile4']['coors']['s'] && (this['profile4']['click'](), !0))
        }, this['mouseup'] = function(_0xdb4bx2) {
            return !(null == this['hand'] || !this['hand']['mouseup'](_0xdb4bx2))
        }, this['mousemove'] = function(_0xdb4bx2) {
            return !(null == this['hand'] || !this['hand']['mousemove'](_0xdb4bx2))
        }, this['resize'] = function() {
            this['coors'] = null, this['select_coors'] = null, null != this['profile1'] && this['profile1']['resize'](), null != this['profile2'] && this['profile2']['resize'](), null != this['profile3'] && this['profile3']['resize'](), null != this['profile4'] && this['profile4']['resize'](), null != this['hand'] && this['hand']['resize'](), null != this['deck'] && this['deck']['resize'](), null != this['middle'] && this['middle']['resize']()
        }, this['init'] = function() {
            null == this['profile1'] && (this['profile1'] = new profile_element(1)), null == this['profile2'] && (this['profile2'] = new profile_element(2)), null == this['profile3'] && (this['profile3'] = new profile_element(3)), null == this['profile4'] && (this['profile4'] = new profile_element(4)), null == this['hand'] && (this['hand'] = new hand_element), null == this['middle'] && (this['middle'] = new middle_element)
        }, this['draw'] = function(_0xdb4bx2) {
            if (null == this['coors']) {
                var _0xdb4bx3 = roundit(0.25 * canvas_size['width']),
                    _0xdb4bx18 = roundit(_0xdb4bx3 / 3.8),
                    _0xdb4bx19 = roundit(0.2 * _0xdb4bx18);
                this['coors'] = {
                    close: {
                        x: canvas_size['width'] - (_0xdb4bx19 + _0xdb4bx18),
                        y: _0xdb4bx19,
                        s: _0xdb4bx18
                    },
                    sound: {
                        x: canvas_size['width'] - 2 * (_0xdb4bx19 + _0xdb4bx18),
                        y: _0xdb4bx19,
                        s: _0xdb4bx18
                    },
                    symbol: {
                        x: canvas_size['width'] - 3 * (_0xdb4bx19 + _0xdb4bx18),
                        y: _0xdb4bx19,
                        s: _0xdb4bx18
                    }
                }
            };
            if (_0xdb4bx2['drawImage'](assets['get']('close'), this['coors']['close']['x'], this['coors']['close']['y'], this['coors']['close']['s'], this['coors']['close']['s']), _0xdb4bx2['drawImage'](this['sounds_img'], this['coors']['sound']['x'], this['coors']['sound']['y'], this['coors']['sound']['s'], this['coors']['sound']['s']), -1 != this['hokm'] && _0xdb4bx2['drawImage'](assets['get']('symbol' + this['hokm']), this['coors']['symbol']['x'], this['coors']['symbol']['y'], this['coors']['symbol']['s'], this['coors']['symbol']['s']), this['profile1']['draw'](_0xdb4bx2), this['profile2']['draw'](_0xdb4bx2), this['profile3']['draw'](_0xdb4bx2), this['profile4']['draw'](_0xdb4bx2), null != this['deck'] && this['deck']['draw'](_0xdb4bx2), this['hand']['draw'](_0xdb4bx2), this['middle']['draw'](_0xdb4bx2), this['select_hokm']) {
                if (null == this['select_coors']) {
                    this['select_coors'] = {
                        x: roundit(table['x'] + (table['width'] - 0.6 * table['width']) / 2),
                        y: roundit(table['y'] + (table['height'] - 0.3 * table['height']) / 2),
                        w: roundit(0.6 * table['width']),
                        h: roundit(0.3 * table['height'])
                    }, this['select_coors']['fs'] = roundit(0.1 * this['select_coors']['h']), this['select_coors']['fx'] = roundit(this['select_coors']['x'] + this['select_coors']['w'] / 2), this['select_coors']['fy'] = roundit(this['select_coors']['y'] + 2.5 * this['select_coors']['fs']), this['select_coors']['ss'] = roundit(0.4 * this['select_coors']['h']), this['select_coors']['sy'] = roundit(this['select_coors']['y'] + 0.42 * this['select_coors']['h']);
                    var _0xdb4bx1a = (this['select_coors']['w'] - 4 * this['select_coors']['ss']) / 5;
                    this['select_coors']['sx'] = [roundit(this['select_coors']['x'] + _0xdb4bx1a), roundit(this['select_coors']['x'] + _0xdb4bx1a + (_0xdb4bx1a + this['select_coors']['ss'])), roundit(this['select_coors']['x'] + _0xdb4bx1a + 2 * (_0xdb4bx1a + this['select_coors']['ss'])), roundit(this['select_coors']['x'] + _0xdb4bx1a + 3 * (_0xdb4bx1a + this['select_coors']['ss']))]
                };
                _0xdb4bx2['save'](), _0xdb4bx2['beginPath'](), _0xdb4bx2['rect'](this['select_coors']['x'], this['select_coors']['y'], this['select_coors']['w'], this['select_coors']['h']), _0xdb4bx2['globalAlpha'] = 0.9, _0xdb4bx2['fillStyle'] = 'black', _0xdb4bx2['fill'](), _0xdb4bx2['lineWidth'] = 2, _0xdb4bx2['strokeStyle'] = '#fff', _0xdb4bx2['stroke'](), _0xdb4bx2['restore'](), _0xdb4bx2['font'] = this['select_coors']['fs'] + 'px IRANSans', _0xdb4bx2['fillStyle'] = 'white', _0xdb4bx2['textAlign'] = 'center', _0xdb4bx2['fillText'](language['data']['hokm_select'], this['select_coors']['fx'], this['select_coors']['fy']), _0xdb4bx2['drawImage'](assets['get']('symbol0'), this['select_coors']['sx'][0], this['select_coors']['sy'], this['select_coors']['ss'], this['select_coors']['ss']), _0xdb4bx2['drawImage'](assets['get']('symbol2'), this['select_coors']['sx'][1], this['select_coors']['sy'], this['select_coors']['ss'], this['select_coors']['ss']), _0xdb4bx2['drawImage'](assets['get']('symbol1'), this['select_coors']['sx'][2], this['select_coors']['sy'], this['select_coors']['ss'], this['select_coors']['ss']), _0xdb4bx2['drawImage'](assets['get']('symbol3'), this['select_coors']['sx'][3], this['select_coors']['sy'], this['select_coors']['ss'], this['select_coors']['ss'])
            };
            null != this['alertText'] && (_0xdb4bx2['save'](), _0xdb4bx2['beginPath'](), _0xdb4bx2['rect'](0, 0, canvas_size['width'], canvas_size['height']), _0xdb4bx2['globalAlpha'] = 0.75, _0xdb4bx2['fillStyle'] = 'black', _0xdb4bx2['fill'](), _0xdb4bx2['restore'](), _0xdb4bx2['save'](), _0xdb4bx2['font'] = roundit(0.055 * table['height']) + 'px IRANSans', _0xdb4bx2['lineWidth'] = 1, _0xdb4bx2['fillStyle'] = 'white', _0xdb4bx2['strokeStyle'] = 'white', _0xdb4bx2['textAlign'] = 'center', _0xdb4bx2['shadowColor'] = 'rgba(0,0,0,0.8)', _0xdb4bx2['shadowBlur'] = 5, _0xdb4bx2['shadowOffsetX'] = 1, _0xdb4bx2['shadowOffsetY'] = 1, _0xdb4bx2['fillText'](this['alertText'], table['x'] + table['width'] / 2, table['y'] + table['height'] / 2), _0xdb4bx2['restore']())
        }, this['sound_status'] = function() {
            for (var _0xdb4bx2 = '', _0xdb4bx3 = document['cookie']['split'](';'), _0xdb4bx18 = 0; _0xdb4bx18 < _0xdb4bx3['length']; _0xdb4bx18++) {
                for (var _0xdb4bx19 = _0xdb4bx3[_0xdb4bx18];
                    ' ' == _0xdb4bx19['charAt'](0);) {
                    _0xdb4bx19 = _0xdb4bx19['substring'](1, _0xdb4bx19['length'])
                };
                if (0 == _0xdb4bx19['indexOf']('pool8sound=')) {
                    _0xdb4bx2 = _0xdb4bx19['substring']('pool8sound=' ['length'], _0xdb4bx19['length']);
                    break
                }
            };
            return 'mute' != _0xdb4bx2
        }, this['sound_change'] = function(_0xdb4bx2) {
            var _0xdb4bx3 = _0xdb4bx2 ? 'normal' : 'mute',
                _0xdb4bx18 = new Date;
            _0xdb4bx18['setTime'](_0xdb4bx18['getTime']() + 2592e6);
            var _0xdb4bx19 = '; expires=' + _0xdb4bx18['toGMTString']();
            document['cookie'] = 'pool8sound=' + _0xdb4bx3 + _0xdb4bx19 + '; path=/'
        }
    },
    table_element = function(_0xdb4bx2, _0xdb4bx3) {
        this['prop'] = null != _0xdb4bx2 ? _0xdb4bx2 : null, this['position'] = null != _0xdb4bx3 ? _0xdb4bx3 : {
            x: 0,
            y: 0,
            width: 962,
            height: 529
        }, this['image'] = null != this['prop']['image'] ? assets['get'](this['prop']['image']) : null, this['x'] = 0, this['y'] = 0, this['width'] = 0, this['height'] = 0, this['margin'] = 0, this['resize'] = function() {
            this['margin'] = Math['fixed'](this['position']['width'] * Math['fixed'](48 / 962)), this['width'] = Math['fixed'](this['position']['width'] * Math['fixed'](866 / 962)), this['height'] = Math['fixed'](this['position']['height'] * Math['fixed'](433 / 529)), this['x'] = this['position']['x'] + this['margin'], this['y'] = this['position']['y'] + this['margin'], this['x'] = roundit(this['x']), this['y'] = roundit(this['y']), this['width'] = roundit(this['width']), this['height'] = roundit(this['height'])
        }, this['draw'] = function(_0xdb4bx2) {
            _0xdb4bx2['drawImage'](this['image'], this['position']['x'], this['position']['y'], this['position']['width'], this['position']['height'])
        }
    },
    profile_element = function(_0xdb4bx2) {
        this['place'] = _0xdb4bx2, this['coors'] = null, this['name'] = '', this['photo'] = !1, this['pimg'] = null, this['turn'] = !1, this['score'] = 0, this['total_score'] = 0, this['image'] = '', this['uid'] = '', this['chips'] = 0, this['level'] = 0, this['setPlayer'] = function(_0xdb4bx2, _0xdb4bx3, _0xdb4bx18, _0xdb4bx19, _0xdb4bx1a) {
            if (this['name'] = _0xdb4bx2, this['photo'] = !1, this['image'] = _0xdb4bx3, this['uid'] = _0xdb4bx18, this['chips'] = _0xdb4bx19, this['level'] = _0xdb4bx1a, null == _0xdb4bx3 || '' == _0xdb4bx3) {
                this['photo'] = !1, this['pimg'] = null
            } else {
                var _0xdb4bx1b = this;
                this['pimg'] = new Image, this['pimg']['onload'] = function() {
                    _0xdb4bx1b['photo'] = !0
                }, this['pimg']['src'] = _0xdb4bx3
            };
            this['coors'] = null
        }, this['click'] = function() {
            open_user_profile({
                uid: this['uid'],
                photo: this['image'],
                shown: this['chips'],
                level: this['level'],
                name: this['name']
            })
        }, this['setScore'] = function(_0xdb4bx2, _0xdb4bx3) {
            this['score'] = _0xdb4bx2, this['total_score'] = _0xdb4bx3, this['coors'] = null
        }, this['resize'] = function() {
            this['coors'] = null
        }, this['draw'] = function(_0xdb4bx2) {
            if (null == this['coors']) {
                var _0xdb4bx3 = roundit(0.055 * table['height']),
                    _0xdb4bx18 = roundit(table['x'] + 0.5 * table['width']),
                    _0xdb4bx1a = roundit(table['y'] + 0.75 * table['height']);
                2 == this['place'] ? (_0xdb4bx18 = roundit(table['x'] + 0.9 * table['width']), _0xdb4bx1a = roundit(table['y'] + 0.4 * table['height'])) : 3 == this['place'] ? (_0xdb4bx18 = roundit(table['x'] + 0.5 * table['width']), _0xdb4bx1a = roundit(table['y'] + 0.05 * table['height'])) : 4 == this['place'] && (_0xdb4bx18 = roundit(table['x'] + 0.1 * table['width']), _0xdb4bx1a = roundit(table['y'] + 0.4 * table['height']));
                var _0xdb4bx1b = roundit(0.4 * _0xdb4bx3);
                if (this['coors'] = new Object({
                        r: _0xdb4bx3,
                        s: 2 * _0xdb4bx3,
                        xp: _0xdb4bx18,
                        yp: _0xdb4bx1a,
                        x: _0xdb4bx18 - _0xdb4bx3,
                        y: _0xdb4bx1a - _0xdb4bx3,
                        l: _0xdb4bx1b
                    }), null != this['name']) {
                    var _0xdb4bx1c = roundit(0.4 * _0xdb4bx3);
                    _0xdb4bx2['font'] = _0xdb4bx1c + 'px IRANSans';
                    var _0xdb4bx1d = _0xdb4bx2['measureText'](this['name'])['width'];
                    this['coors']['c'] = {
                        fs: _0xdb4bx1c,
                        fx: this['coors']['xp'],
                        fy: this['coors']['yp'] + 0.9 * this['coors']['s'],
                        x: this['coors']['xp'] - 0.5 * _0xdb4bx1d - 0.9 * _0xdb4bx1c,
                        y: roundit(this['coors']['yp'] + 0.65 * this['coors']['s']),
                        w: roundit(_0xdb4bx1d + 1.8 * _0xdb4bx1c),
                        h: roundit(1.8 * _0xdb4bx1c),
                        r: _0xdb4bx1c
                    }
                };
                if (this['total_score'] > 0) {
                    var _0xdb4bx1e = roundit(_0xdb4bx1a + 2.45 * _0xdb4bx3),
                        _0xdb4bx1f = roundit(0.2 * _0xdb4bx3);
                    this['coors']['score'] = {
                        x: [],
                        y: _0xdb4bx1e,
                        r: _0xdb4bx1f,
                        l: 1
                    }, _0xdb4bx1f < 6 && (this['coors']['score']['l'] = 0);
                    var _0xdb4bx20 = roundit(0.5 * _0xdb4bx1f),
                        _0xdb4bx21 = roundit(this['total_score'] * _0xdb4bx1f * 2 + (this['total_score'] - 1) * _0xdb4bx20);
                    for (i = 0; i < this['total_score']; i++) {
                        var _0xdb4bx22 = this['coors']['xp'] - _0xdb4bx21 / 2 + i * _0xdb4bx20 + i * _0xdb4bx1f * 2;
                        this['coors']['score']['x']['push'](roundit(_0xdb4bx22 + _0xdb4bx1f))
                    };
                    this['coors']['score']['text_x'] = roundit(this['coors']['score']['x'][0] - 2.7 * this['coors']['score']['r'] * 2), 
					this['coors']['score']['text_y'] = roundit(this['coors']['score']['y'] + 0.7 * this['coors']['score']['r']),
					this['coors']['score']['text_fs'] = roundit(this['coors']['c']['fs']), this['coors']['score']['text_xp'] = roundit(this['coors']['score']['x'][0] - 2.7 * this['coors']['score']['r'] * 2),
					this['coors']['score']['text_yp'] = roundit(this['coors']['score']['y']), this['coors']['score']['text_r'] = roundit(1.2 * this['coors']['score']['r']), 
					this['coors']['score']['text_x2'] = roundit(this['coors']['score']['x'][0] - 2.7 * this['coors']['score']['r']),
					this['coors']['score']['text_xp2'] = roundit(this['coors']['score']['x'][0] - 2.7 * this['coors']['score']['r'])
                }
            };
            if (_0xdb4bx2['beginPath'](), this['turn'] ? (_0xdb4bx2['arc'](this['coors']['xp'], this['coors']['yp'], this['coors']['r'], 1.5 * Math['PI'], controls['turnTime']() * Math['PI'], !0), _0xdb4bx2['strokeStyle'] = 'green') : (_0xdb4bx2['arc'](this['coors']['xp'], this['coors']['yp'], this['coors']['r'], 0 * Math['PI'], 2 * Math['PI'], !0), _0xdb4bx2['strokeStyle'] = '#141926'), _0xdb4bx2['lineWidth'] = this['coors']['l'], _0xdb4bx2['stroke'](), _0xdb4bx2['closePath'](), this['photo'] ? _0xdb4bx2['drawImage'](this['pimg'], this['coors']['x'], this['coors']['y'], this['coors']['s'], this['coors']['s']) : _0xdb4bx2['drawImage'](assets['get']('placeholder'), this['coors']['x'], this['coors']['y'], this['coors']['s'], this['coors']['s']), null != this['name'] && (_0xdb4bx2['beginPath'](), _0xdb4bx2['moveTo'](this['coors']['c']['x'] + this['coors']['c']['r'], this['coors']['c']['y']), _0xdb4bx2['lineTo'](this['coors']['c']['x'] + this['coors']['c']['w'] - this['coors']['c']['r'], this['coors']['c']['y']), _0xdb4bx2['quadraticCurveTo'](this['coors']['c']['x'] + this['coors']['c']['w'], this['coors']['c']['y'], this['coors']['c']['x'] + this['coors']['c']['w'], this['coors']['c']['y'] + this['coors']['c']['r']), _0xdb4bx2['lineTo'](this['coors']['c']['x'] + this['coors']['c']['w'], this['coors']['c']['y'] + this['coors']['c']['h'] - this['coors']['c']['r']), _0xdb4bx2['quadraticCurveTo'](this['coors']['c']['x'] + this['coors']['c']['w'], this['coors']['c']['y'] + this['coors']['c']['h'], this['coors']['c']['x'] + this['coors']['c']['w'] - this['coors']['c']['r'], this['coors']['c']['y'] + this['coors']['c']['h']), _0xdb4bx2['lineTo'](this['coors']['c']['x'] + this['coors']['c']['r'], this['coors']['c']['y'] + this['coors']['c']['h']), _0xdb4bx2['quadraticCurveTo'](this['coors']['c']['x'], this['coors']['c']['y'] + this['coors']['c']['h'], this['coors']['c']['x'], this['coors']['c']['y'] + this['coors']['c']['h'] - this['coors']['c']['r']), _0xdb4bx2['lineTo'](this['coors']['c']['x'], this['coors']['c']['y'] + this['coors']['c']['r']), _0xdb4bx2['quadraticCurveTo'](this['coors']['c']['x'], this['coors']['c']['y'], this['coors']['c']['x'] + this['coors']['c']['r'], this['coors']['c']['y']), _0xdb4bx2['closePath'](), _0xdb4bx2['fillStyle'] = '#141926', _0xdb4bx2['fill'](), _0xdb4bx2['font'] = this['coors']['c']['fs'] + 'px IRANSans', _0xdb4bx2['fillStyle'] = 'white', _0xdb4bx2['textAlign'] = 'center', _0xdb4bx2['fillText'](this['name'], this['coors']['c']['fx'], this['coors']['c']['fy'])), this['total_score'] > 0) {
                for (_0xdb4bx2['beginPath'](), _0xdb4bx2['arc'](this['coors']['score']['text_xp'], this['coors']['score']['text_yp'], this['coors']['score']['text_r'], 0, 2 * Math['PI'], !0), _0xdb4bx2['fillStyle'] = '#141926', _0xdb4bx2['fill'](), _0xdb4bx2['closePath'](), _0xdb4bx2['fillStyle'] = 'yellow', _0xdb4bx2['font'] = this['coors']['score']['text_fs'] + 'px IRANSans', _0xdb4bx2['fillText'](this['total_score'], this['coors']['score']['text_x'], this['coors']['score']['text_y']), this['score'] >= 0 && (_0xdb4bx2['beginPath'](), _0xdb4bx2['arc'](this['coors']['score']['text_xp2'], this['coors']['score']['text_yp'], this['coors']['score']['text_r'], 0, 2 * Math['PI'], !0), _0xdb4bx2['fillStyle'] = '#141926', _0xdb4bx2['fill'](), _0xdb4bx2['closePath'](), _0xdb4bx2['fillStyle'] = 'white', _0xdb4bx2['font'] = this['coors']['score']['text_fs'] + 'px IRANSans', _0xdb4bx2['fillText'](this['score'], this['coors']['score']['text_x2'], this['coors']['score']['text_y'])), i = 0; i < this['total_score']; i++) {
                    _0xdb4bx2['beginPath'](), _0xdb4bx2['arc'](this['coors']['score']['x'][i], this['coors']['score']['y'], this['coors']['score']['r'], 0, 2 * Math['PI'], !0), i < this['score'] ? _0xdb4bx2['fillStyle'] = 'green' : _0xdb4bx2['fillStyle'] = '#444', _0xdb4bx2['fill'](), this['coors']['score']['l'] > 0 && (_0xdb4bx2['lineWidth'] = this['coors']['score']['l'], _0xdb4bx2['strokeStyle'] = '#141926', _0xdb4bx2['stroke']()), _0xdb4bx2['closePath']()
                }
            }
        }
    },
    card_element = function(_0xdb4bx2, _0xdb4bx3) {
		console.log(_0xdb4bx2);
		console.log(_0xdb4bx3);
        this['prop'] = null != _0xdb4bx2 ? _0xdb4bx2 : null, this['position'] = null != _0xdb4bx3 ? _0xdb4bx3 : {
            x: 0,
            y: 0,
            width: 962,
            height: 529
        }, this['image'] = null != this['prop']['image'] ? assets['get'](this['prop']['image']) : null, this['card_id'] = null != this['prop'] && null != this['prop']['id'] ? this['prop']['id'] : 0, this['card_no'] = null != this['prop'] && null != this['prop']['no'] ? this['prop']['no'] : 0, this['x'] = null != this['position']['x'] ? this['position']['x'] : 0, this['y'] = null != this['position']['y'] ? this['position']['y'] : 0, this['width'] = 0, this['height'] = 0, this['origin_width'] = 79, this['origin_height'] = 127, this['animating'] = !1, this['stepX'] = 0, this['stepY'] = 0, this['stepLeft'] = 0, this['toX'] = 0, this['toY'] = 0, this['open'] = -1, this['hidden'] = !1, this['removeAfterAnimation'] = !1, this['resize'] = function() {
            this['width'] = roundit(0.1 * table['width']), this['height'] = roundit(0.1 * table['width'] * this['origin_height'] / this['origin_width']), this['x'] = roundit(this['x']), this['y'] = roundit(this['y']), this['width'] = roundit(this['width']), this['height'] = roundit(this['height']), this['finish']()
        }, this['animate'] = function(_0xdb4bx2, _0xdb4bx3, _0xdb4bx18, _0xdb4bx19) {
            var _0xdb4bx1a = null == _0xdb4bx18 || 0 == _0xdb4bx18 ? controls['effect_time'] : _0xdb4bx18;
            _0xdb4bx1a = controls['effect_time'], this['finish'](), this['animating'] = !0, this['toX'] = _0xdb4bx2, this['toY'] = _0xdb4bx3, this['stepLeft'] = _0xdb4bx1a, this['stepX'] = (this['toX'] - this['x']) / this['stepLeft'], this['stepY'] = (this['toY'] - this['y']) / this['stepLeft'], this['open'] = null == _0xdb4bx19 ? -1 : _0xdb4bx19
        }, this['finish'] = function() {
            this['animating'] && (this['x'] = this['toX'], this['y'] = this['toY'], -1 != this['open'] && 52 != this['open'] ? (this['card_no'] = this['open'], this['open'] = -1) : (52 == this['open'] || this['removeAfterAnimation']) && (this['hidden'] = !0), this['animating'] = !1)
        }, this['move'] = function() {
            this['x'] += roundit(this['stepX']), this['y'] += roundit(this['stepY']), this['stepLeft'] -= 1, this['stepLeft'] <= 0 && this['finish']()
        }, this['draw'] = function(_0xdb4bx2) {
            if (this['hidden']) {
                return !1
            };
            this['animating'] && this['move'](), _0xdb4bx2['drawImage'](assets['get']('card' + this['card_no']), this['x'], this['y'], this['width'], this['height'])
        }, this['resize']()
    },
    hand_element = function() {
        this['x'] = 0, this['y'] = 0, this['width'] = 0, this['height'] = 0, this['origin_width'] = 79, this['origin_height'] = 127, this['card_space'] = 0.83, this['card_space_big'] = 0.95, this['card_space_small'] = 0.83, this['cards'] = [], this['mouse_toggle_card'] = null, this['mouse_toggle_time'] = 0, this['mouse_toggle_x'] = 0, this['mouse_toggle_y'] = 0, this['mouse_toggle_xd'] = 0, this['mouse_toggle_yd'] = 0, this['mousedown'] = function(_0xdb4bx2) {
            if (0 == this['cards']['length']) {
                return !1
            };
            for (null != this['mouse_toggle_card'] && (this['mouse_toggle_card'] = null, controls['hand']['arrange']()), i = this['cards']['length'] - 1; i >= 0; i--) {
                var _0xdb4bx3 = this['cards'][i];
                if (_0xdb4bx2['clientX'] >= _0xdb4bx3['x'] && _0xdb4bx2['clientX'] <= _0xdb4bx3['x'] + _0xdb4bx3['width'] && _0xdb4bx2['clientY'] >= _0xdb4bx3['y'] && _0xdb4bx2['clientY'] <= _0xdb4bx3['y'] + _0xdb4bx3['height']) {
                    for (j in controls['posibilities']) {
                        if (_0xdb4bx3['card_no'] == controls['posibilities'][j]) {
                            this['mouse_toggle_card'] = _0xdb4bx3, this['mouse_toggle_x'] = _0xdb4bx3['x'], this['mouse_toggle_y'] = _0xdb4bx3['y'], this['mouse_toggle_xd'] = this['mouse_toggle_x'] - _0xdb4bx2['clientX'], this['mouse_toggle_yd'] = this['mouse_toggle_y'] - _0xdb4bx2['clientY'], this['mouse_toggle_time'] = (new Date)['getTime']();
                            break
                        }
                    };
                    return !0
                }
            };
            return !1
        }, this['mouseup'] = function(_0xdb4bx2) {
            return null != this['mouse_toggle_card'] && ((new Date)['getTime']() - this['mouse_toggle_time'] < 250 && 'mobile' != DEVICE_TYPE ? (socket_send({
                command: 'play',
                card: this['mouse_toggle_card']['card_no']
            }), this['mouse_toggle_card'] = null, !0) : this['mouse_toggle_card']['y'] <= roundit(this['mouse_toggle_y'] - 0.5 * this['mouse_toggle_card']['height']) && null != controls['profile1'] && controls['profile1']['turn'] ? (socket_send({
                command: 'play',
                card: this['mouse_toggle_card']['card_no']
            }), this['mouse_toggle_card'] = null, setTimeout(function() {
                controls['hand']['arrange']()
            }, 1500), !0) : (controls['hand']['arrange'](), this['mouse_toggle_card'] = null, !0))
        }, this['mousemove'] = function(_0xdb4bx2) {
            return null != this['mouse_toggle_card'] && (this['mouse_toggle_card']['y'] = _0xdb4bx2['clientY'] + this['mouse_toggle_yd'], this['mouse_toggle_card']['y'] > this['mouse_toggle_y'] && (this['mouse_toggle_card']['y'] = this['mouse_toggle_y']), this['mouse_toggle_card']['y'] <= roundit(this['mouse_toggle_y'] - 0.5 * this['mouse_toggle_card']['height']) && (this['mouse_toggle_card']['y'] = roundit(this['mouse_toggle_y'] - 0.55 * this['mouse_toggle_card']['height'])), !0)
        }, this['add'] = function(_0xdb4bx2) {
            this['cards']['push'](_0xdb4bx2)
        }, this['position'] = function() {
            this['card_space'] = null != this['cards'] && this['cards']['length'] > 11 ? this['card_space_small'] : this['card_space_big'];
            var _0xdb4bx2 = roundit(0.1 * table['width']),
                _0xdb4bx3 = roundit(0.1 * table['width'] * this['origin_height'] / this['origin_width']);
            this['width'] = 0 == this['cards']['length'] ? _0xdb4bx2 : _0xdb4bx2 + (this['cards']['length'] - 1) * (_0xdb4bx2 * this['card_space']), this['height'] = _0xdb4bx3, this['x'] = roundit(table['x'] + table['width'] / 2 - this['width'] / 2), this['y'] = roundit(table['y'] + 0.91 * table['height']);
            var _0xdb4bx18 = 0,
                _0xdb4bx1a = 0;
            for (i = 0; i < this['cards']['length']; i++) {
                this['cards'][i];
                _0xdb4bx18 = this['x'] + roundit(i * (_0xdb4bx2 * this['card_space'])), _0xdb4bx1a = this['y']
            };
            return {
                x: _0xdb4bx18,
                y: _0xdb4bx1a
            }
        }, this['arrange'] = function() {
            this['card_space'] = null != this['cards'] && this['cards']['length'] > 11 ? this['card_space_small'] : this['card_space_big'];
            for (i in this['cards']) {
                this['cards'][i]['card_no'] >= 13 && this['cards'][i]['card_no'] <= 25 ? this['cards'][i]['sort_number'] = this['cards'][i]['card_no'] + 52 : this['cards'][i]['card_no'] >= 39 && this['cards'][i]['card_no'] <= 51 ? this['cards'][i]['sort_number'] = this['cards'][i]['card_no'] + 104 : this['cards'][i]['sort_number'] = this['cards'][i]['card_no']
            };
            this['cards']['sort'](function(_0xdb4bx2, _0xdb4bx3) {
                return _0xdb4bx2['sort_number'] - _0xdb4bx3['sort_number']
            });
            var _0xdb4bx2 = roundit(0.1 * table['width']);
            for (i = 0; i < this['cards']['length']; i++) {
                var _0xdb4bx3 = this['cards'][i],
                    _0xdb4bx18 = this['x'] + roundit(i * (_0xdb4bx2 * this['card_space'])),
                    _0xdb4bx1a = this['y'];
                _0xdb4bx3['animate'](_0xdb4bx18, _0xdb4bx1a, 10)
            }
        }, this['resize'] = function() {
            this['card_space'] = null != this['cards'] && this['cards']['length'] > 11 ? this['card_space_small'] : this['card_space_big'];
            var _0xdb4bx2 = roundit(0.1 * table['width']),
                _0xdb4bx3 = roundit(0.1 * table['width'] * this['origin_height'] / this['origin_width']);
            for (this['width'] = 0 == this['cards']['length'] ? _0xdb4bx2 : _0xdb4bx2 + (this['cards']['length'] - 1) * (_0xdb4bx2 * this['card_space']), this['height'] = _0xdb4bx3, this['x'] = roundit(table['x'] + table['width'] / 2 - this['width'] / 2), this['y'] = roundit(table['y'] + 0.91 * table['height']), i = 0; i < this['cards']['length']; i++) {
                var _0xdb4bx18 = this['cards'][i];
                _0xdb4bx18['x'] = this['x'] + roundit(i * (_0xdb4bx2 * this['card_space'])), _0xdb4bx18['y'] = this['y'], _0xdb4bx18['resize']()
            }
        }, this['draw'] = function(_0xdb4bx2) {
            for (i in this['cards']) {
                this['cards'][i]['draw'](_0xdb4bx2)
            }
        }, this['resize']()
    },
    deck_element = function() {
        this['x'] = 0, this['y'] = 0, this['width'] = 0, this['height'] = 0, this['cards'] = [], this['willDeal'] = [], this['dealing'] = !1, this['dealtime'] = 0, this['dealToHand'] = !1, this['profile1'] = [], this['profile2'] = [], this['profile3'] = [], this['profile4'] = [], this['deal'] = function(_0xdb4bx2, _0xdb4bx3) {
            this['dealToHand'] = _0xdb4bx2, this['dealing'] = !0, this['dealtime'] = 0, this['willDeal'] = _0xdb4bx3
        }, this['createcards'] = function(_0xdb4bx2) {
            var _0xdb4bx3 = 52;
            null != _0xdb4bx2 && (_0xdb4bx3 = _0xdb4bx2);
            var _0xdb4bx18 = roundit(table['x'] + 0.46 * table['width']),
                _0xdb4bx1a = roundit(table['y'] + 0.33 * table['height']);
            for (this['cards'] = [], this['profile1'] = this['profile2'] = this['profile3'] = this['profile4'] = [], i = 0; i < _0xdb4bx3; i++) {
                var _0xdb4bx2 = new card_element({
                    id: 1e3 + i,
                    no: 52
                }, {
                    x: _0xdb4bx18 + i / 3,
                    y: _0xdb4bx1a + i / 3
                });
                this['cards']['push'](_0xdb4bx2)
            }
        }, this['dealWork'] = function() {
            if (this['dealtime'] += 1, this['dealtime'] % 8 != 0) {
                return !1
            };
            if (0 == this['cards']['length'] || 0 == this['willDeal']['length']) {
                return controls['hand']['arrange'](), this['dealing'] = !1, !1
            };
            var _0xdb4bx2 = this['cards']['pop'](),
                _0xdb4bx3 = this['willDeal']['shift'](),
                _0xdb4bx18 = 0,
                _0xdb4bx19 = 0;
            if (1 == _0xdb4bx3['to']) {
                if (this['dealToHand']) {
                    _0xdb4bx3['no'], controls['hand']['add'](_0xdb4bx2);
                    var _0xdb4bx1a = controls['hand']['position']();
                    _0xdb4bx18 = _0xdb4bx1a['x'], _0xdb4bx19 = _0xdb4bx1a['y']
                } else {
                    _0xdb4bx18 = controls['profile1']['coors']['xp'], _0xdb4bx19 = controls['profile1']['coors']['yp'], this['profile1']['push'](_0xdb4bx2)
                }
            } else {
                2 == _0xdb4bx3['to'] ? (_0xdb4bx18 = controls['profile2']['coors']['xp'], _0xdb4bx19 = controls['profile2']['coors']['yp'], this['profile2']['push'](_0xdb4bx2)) : 3 == _0xdb4bx3['to'] ? (_0xdb4bx18 = controls['profile3']['coors']['xp'], _0xdb4bx19 = controls['profile3']['coors']['yp'], this['profile3']['push'](_0xdb4bx2)) : 4 == _0xdb4bx3['to'] && (_0xdb4bx18 = controls['profile4']['coors']['xp'], _0xdb4bx19 = controls['profile4']['coors']['yp'], this['profile4']['push'](_0xdb4bx2))
            };
            _0xdb4bx2['animate'](_0xdb4bx18, _0xdb4bx19, 30, _0xdb4bx3['no']), play_audio('card')
        }, this['resize'] = function() {
            var _0xdb4bx2 = roundit(table['x'] + 0.46 * table['width']),
                _0xdb4bx3 = roundit(table['y'] + 0.33 * table['height']);
            for (i = 0; i < this['cards']['length']; i++) {
                var _0xdb4bx18 = this['cards'][i];
                _0xdb4bx18['x'] = _0xdb4bx2 + i / 3, _0xdb4bx18['y'] = _0xdb4bx3 + i / 3, _0xdb4bx18['resize']()
            };
            this['profile1'] = this['profile2'] = this['profile3'] = this['profile4'] = []
        }, this['animating'] = function() {
            if (this['dealing']) {
                return !0
            };
            for (i in this['cards']) {
                if (this['cards'][i]['animating']) {
                    return !0
                }
            };
            for (i in this['profile1']) {
                if (this['profile1'][i]['animating']) {
                    return !0
                }
            };
            for (i in this['profile2']) {
                if (this['profile2'][i]['animating']) {
                    return !0
                }
            };
            for (i in this['profile3']) {
                if (this['profile3'][i]['animating']) {
                    return !0
                }
            };
            for (i in this['profile4']) {
                if (this['profile4'][i]['animating']) {
                    return !0
                }
            };
            return !1
        }, this['draw'] = function(_0xdb4bx2) {
            this['dealing'] && this['dealWork']();
            for (i in this['cards']) {
                this['cards'][i]['draw'](_0xdb4bx2)
            };
            for (i in this['profile1']) {
                this['profile1'][i]['draw'](_0xdb4bx2)
            };
            for (i in this['profile2']) {
                this['profile2'][i]['draw'](_0xdb4bx2)
            };
            for (i in this['profile3']) {
                this['profile3'][i]['draw'](_0xdb4bx2)
            };
            for (i in this['profile4']) {
                this['profile4'][i]['draw'](_0xdb4bx2)
            }
        }, this['resize']()
    },
    middle_element = function() {
        this['x'] = 0, this['y'] = 0, this['width'] = 0, this['height'] = 0, this['origin_width'] = 79, this['origin_height'] = 127, this['cards'] = [], this['card1'] = null, this['card2'] = null, this['card3'] = null, this['card4'] = null, this['add'] = function(_0xdb4bx2, _0xdb4bx3) {
            if (1 == _0xdb4bx2) {
                for (i in controls['hand']['cards']) {
                    if (controls['hand']['cards'][i]['card_no'] == _0xdb4bx3) {
                        _0xdb4bx1a = this['position'](_0xdb4bx2);
                        return this['card' + _0xdb4bx2] = controls['hand']['cards']['splice'](i, 1)[0], this['card' + _0xdb4bx2]['animate'](_0xdb4bx1a['x'], _0xdb4bx1a['y'], 0, -1), controls['hand']['resize'](), !1
                    }
                }
            } else {
                var _0xdb4bx18 = this['where'](_0xdb4bx2),
                    _0xdb4bx1a = this['position'](_0xdb4bx2);
                this['card' + _0xdb4bx2] = new card_element({
                    id: 2e3,
                    no: 52
                }, {
                    x: _0xdb4bx18['x'],
                    y: _0xdb4bx18['y']
                }), this['card' + _0xdb4bx2]['animate'](_0xdb4bx1a['x'], _0xdb4bx1a['y'], 0, _0xdb4bx3)
            }
        }, this['send'] = function(_0xdb4bx2) {
            this['cards'] = [], null != this['card1'] && this['cards']['push'](this['card1']), null != this['card2'] && this['cards']['push'](this['card2']), null != this['card3'] && this['cards']['push'](this['card3']), null != this['card4'] && this['cards']['push'](this['card4']), this['card1'] = this['card2'] = this['card3'] = this['card4'] = null;
            var _0xdb4bx3 = this['where'](_0xdb4bx2);
            for (i in this['cards']) {
                this['cards'][i]['removeAfterAnimation'] = !0, this['cards'][i]['animate'](_0xdb4bx3['x'], _0xdb4bx3['y'], 0, -1)
            }
        }, this['position'] = function(_0xdb4bx2) {
            var _0xdb4bx3 = roundit(0.1 * table['width']),
                _0xdb4bx18 = roundit(0.1 * table['width'] * this['origin_height'] / this['origin_width']),
                _0xdb4bx19 = 0,
                _0xdb4bx1a = 0;
            return 1 == _0xdb4bx2 ? (_0xdb4bx19 = roundit(table['x'] + table['width'] / 2 - _0xdb4bx3 / 2), _0xdb4bx1a = roundit(table['y'] + 0.54 * table['height'] - _0xdb4bx18 / 2)) : 2 == _0xdb4bx2 ? (_0xdb4bx19 = roundit(table['x'] + 0.63 * table['width'] - _0xdb4bx3 / 2), _0xdb4bx1a = roundit(table['y'] + 0.44 * table['height'] - _0xdb4bx18 / 2)) : 3 == _0xdb4bx2 ? (_0xdb4bx19 = roundit(table['x'] + table['width'] / 2 - _0xdb4bx3 / 2), _0xdb4bx1a = roundit(table['y'] + 0.34 * table['height'] - _0xdb4bx18 / 2)) : 4 == _0xdb4bx2 && (_0xdb4bx19 = roundit(table['x'] + 0.37 * table['width'] - _0xdb4bx3 / 2), _0xdb4bx1a = roundit(table['y'] + 0.44 * table['height'] - _0xdb4bx18 / 2)), {
                x: _0xdb4bx19,
                y: _0xdb4bx1a
            }
        }, this['where'] = function(_0xdb4bx2) {
            var _0xdb4bx3 = 0,
                _0xdb4bx18 = 0;
            return 1 == _0xdb4bx2 && null != controls['profile1'] && null != controls['profile1']['coors'] ? (_0xdb4bx3 = controls['profile1']['coors']['xp'], _0xdb4bx18 = controls['profile1']['coors']['yp']) : 2 == _0xdb4bx2 && null != controls['profile2'] && null != controls['profile2']['coors'] ? (_0xdb4bx3 = controls['profile2']['coors']['xp'], _0xdb4bx18 = controls['profile2']['coors']['yp']) : 3 == _0xdb4bx2 && null != controls['profile3'] && null != controls['profile3']['coors'] ? (_0xdb4bx3 = controls['profile3']['coors']['xp'], _0xdb4bx18 = controls['profile3']['coors']['yp']) : 4 == _0xdb4bx2 && null != controls['profile4'] && null != controls['profile4']['coors'] && (_0xdb4bx3 = controls['profile4']['coors']['xp'], _0xdb4bx18 = controls['profile4']['coors']['yp']), {
                x: _0xdb4bx3,
                y: _0xdb4bx18
            }
        }, this['resize'] = function() {
            if (this['cards'] = [], null != this['card1']) {
                this['card1']['resize']();
                _0xdb4bx2 = this['position'](1);
                this['card1']['x'] = _0xdb4bx2['x'], this['card1']['y'] = _0xdb4bx2['y']
            };
            if (null != this['card2']) {
                this['card2']['resize']();
                _0xdb4bx2 = this['position'](2);
                this['card2']['x'] = _0xdb4bx2['x'], this['card2']['y'] = _0xdb4bx2['y']
            };
            if (null != this['card3']) {
                this['card3']['resize']();
                _0xdb4bx2 = this['position'](3);
                this['card3']['x'] = _0xdb4bx2['x'], this['card3']['y'] = _0xdb4bx2['y']
            };
            if (null != this['card4']) {
                this['card4']['resize']();
                var _0xdb4bx2 = this['position'](4);
                this['card4']['x'] = _0xdb4bx2['x'], this['card4']['y'] = _0xdb4bx2['y']
            }
        }, this['draw'] = function(_0xdb4bx2) {
            null != this['card1'] && this['card1']['draw'](_0xdb4bx2), null != this['card2'] && this['card2']['draw'](_0xdb4bx2), null != this['card3'] && this['card3']['draw'](_0xdb4bx2), null != this['card4'] && this['card4']['draw'](_0xdb4bx2);
            for (i in this['cards']) {
                this['cards'][i]['draw'](_0xdb4bx2)
            }
        }, this['resize']()
    },
    canvas = null,
    context = null,
    assets = null,
    canvas_size = new Object({
        width: 1200,
        height: 600
    }),
    canvas_group = [],
    canvas_timer = null,
    window_timer = !1,
    cards = [],
    table = null,
    controls = null,
    CANVAS_FPS = 60,
    canvas_resized = !1,
    click_listeners = {
        user1Clicked: null,
        user2Clicked: null,
        chatClicked: null,
        exitClicked: null
    };
Math['radians'] = function(_0xdb4bx2) {
    return fxn(_0xdb4bx2 * Math['PI'] / 180)
}, Math['degrees'] = function(_0xdb4bx2) {
    return fxn(180 * _0xdb4bx2 / Math['PI'])
}, Math['fixed'] = function(_0xdb4bx2) {
    return Math['floor'](1e5 * _0xdb4bx2) / 1e5
}, roundit = function(_0xdb4bx2) {
    return null == _0xdb4bx2 ? _0xdb4bx2 : 0.5 + _0xdb4bx2 | 0
}, init_canvas_functions = function() {
    canvas_size['width'] = $(window)['width'](), canvas_size['height'] = $(window)['height'](), 0 == canvas_size['height'] && (canvas_size['height'] = $(document)['height']()), canvas = document['getElementById']('area'), context = canvas['getContext']('2d'), canvas['addEventListener']('mousedown', function(_0xdb4bx2) {
        if (_0xdb4bx2['preventDefault'](), null != controls && controls['mousedown'](_0xdb4bx2)) {
            return !1
        }
    }, !1), canvas['addEventListener']('mouseup', function(_0xdb4bx2) {
        if (_0xdb4bx2['preventDefault'](), null != controls && controls['mouseup'](_0xdb4bx2)) {
            return !1
        }
    }, !1), canvas['addEventListener']('mouseleave', function(_0xdb4bx2) {
        if (_0xdb4bx2['preventDefault'](), null != controls && controls['mouseup'](_0xdb4bx2)) {
            return !1
        }
    }, !1), canvas['addEventListener']('mousemove', function(_0xdb4bx2) {
        if (_0xdb4bx2['preventDefault'](), null != controls && controls['mousemove'](_0xdb4bx2)) {
            return !1
        }
    }, !1), canvas['addEventListener']('touchstart', function(_0xdb4bx2) {
        if (_0xdb4bx2['preventDefault'](), _0xdb4bx2['clientX'] = null != _0xdb4bx2['touches'][0]['screenX'] ? _0xdb4bx2['touches'][0]['screenX'] : _0xdb4bx2['touches'][0]['clientX'], _0xdb4bx2['clientY'] = null != _0xdb4bx2['touches'][0]['screenY'] ? _0xdb4bx2['touches'][0]['screenY'] : _0xdb4bx2['touches'][0]['clientY'], _0xdb4bx2['clientX'] = null != _0xdb4bx2['touches'][0]['pageX'] ? _0xdb4bx2['touches'][0]['pageX'] : _0xdb4bx2['clientX'], _0xdb4bx2['clientY'] = null != _0xdb4bx2['touches'][0]['pageY'] ? _0xdb4bx2['touches'][0]['pageY'] : _0xdb4bx2['clientY'], null != controls && controls['mousedown'](_0xdb4bx2)) {
            return !1
        }
    }, !1), canvas['addEventListener']('touchend', function(_0xdb4bx2) {
        if (_0xdb4bx2['preventDefault'](), 0 == _0xdb4bx2['touches']['length'] ? (_0xdb4bx2['clientX'] = 0, _0xdb4bx2['clientY'] = 0) : (_0xdb4bx2['clientX'] = null != _0xdb4bx2['touches'][0]['screenX'] ? _0xdb4bx2['touches'][0]['screenX'] : _0xdb4bx2['touches'][0]['clientX'], _0xdb4bx2['clientY'] = null != _0xdb4bx2['touches'][0]['screenY'] ? _0xdb4bx2['touches'][0]['screenY'] : _0xdb4bx2['touches'][0]['clientY'], _0xdb4bx2['clientX'] = null != _0xdb4bx2['touches'][0]['pageX'] ? _0xdb4bx2['touches'][0]['pageX'] : _0xdb4bx2['clientX'], _0xdb4bx2['clientY'] = null != _0xdb4bx2['touches'][0]['pageY'] ? _0xdb4bx2['touches'][0]['pageY'] : _0xdb4bx2['clientY']), null != controls && controls['mouseup'](_0xdb4bx2)) {
            return !1
        }
    }, !1), canvas['addEventListener']('touchmove', function(_0xdb4bx2) {
        if (_0xdb4bx2['preventDefault'](), _0xdb4bx2['clientX'] = null != _0xdb4bx2['touches'][0]['screenX'] ? _0xdb4bx2['touches'][0]['screenX'] : _0xdb4bx2['touches'][0]['clientX'], _0xdb4bx2['clientY'] = null != _0xdb4bx2['touches'][0]['screenY'] ? _0xdb4bx2['touches'][0]['screenY'] : _0xdb4bx2['touches'][0]['clientY'], _0xdb4bx2['clientX'] = null != _0xdb4bx2['touches'][0]['pageX'] ? _0xdb4bx2['touches'][0]['pageX'] : _0xdb4bx2['clientX'], _0xdb4bx2['clientY'] = null != _0xdb4bx2['touches'][0]['pageY'] ? _0xdb4bx2['touches'][0]['pageY'] : _0xdb4bx2['clientY'], null != controls && controls['mousemove'](_0xdb4bx2)) {
            return !1
        }
    }, !1)
}, $(document)['ready'](function() {
    init_canvas_functions()
}), resize_canvas = function() {
    canvas_size['width'] = $(window)['width'](), canvas_size['height'] = $(window)['height'](), 0 == canvas_size['height'] && (canvas_size['height'] = $(document)['height']());
    var _0xdb4bx2 = roundit(0.25 * canvas_size['width']),
        _0xdb4bx3 = roundit(_0xdb4bx2 / 3.8),
        _0xdb4bx18 = roundit(0.2 * _0xdb4bx3),
        _0xdb4bx1a = roundit(_0xdb4bx3 + 2 * _0xdb4bx18);
    $('.chat_area')['attr']({
        style: 'height: calc(100% - ' + _0xdb4bx1a + 'px); top: ' + _0xdb4bx1a + 'px !important;'
    }), $('.chat_text_container')['height'](roundit(canvas_size['height'] - _0xdb4bx1a - 70)), $('#area')['height'](canvas_size['height']), $('#area')['width'](canvas_size['width']), canvas['width'] = canvas_size['width'], canvas['height'] = canvas_size['height'];
    var _0xdb4bx1b = (window['devicePixelRatio'] || 1) / (context['webkitBackingStorePixelRatio'] || context['mozBackingStorePixelRatio'] || context['msBackingStorePixelRatio'] || context['oBackingStorePixelRatio'] || context['backingStorePixelRatio'] || 1);
    if (canvas['width'] = canvas_size['width'] * _0xdb4bx1b, canvas['height'] = canvas_size['height'] * _0xdb4bx1b, canvas['style']['width'] = canvas_size['width'] + 'px', canvas['style']['height'] = canvas_size['height'] + 'px', context['scale'](_0xdb4bx1b, _0xdb4bx1b), 0.75 * canvas_size['width'] > canvas_size['height']) {
        _0xdb4bx1c = roundit(0.98 * canvas_size['height']);
        table['position']['x'] = roundit((0.75 * canvas_size['width'] - _0xdb4bx1c) / 2), table['position']['y'] = roundit((canvas_size['height'] - _0xdb4bx1c) / 2), table['position']['width'] = _0xdb4bx1c, table['position']['height'] = _0xdb4bx1c
    } else {
        var _0xdb4bx1c = roundit(0.75 * canvas_size['width'] * 0.98);
        table['position']['x'] = roundit((0.75 * canvas_size['width'] - _0xdb4bx1c) / 2), table['position']['y'] = roundit((canvas_size['height'] - _0xdb4bx1c) / 2), table['position']['width'] = _0xdb4bx1c, table['position']['height'] = _0xdb4bx1c
    };
    for (i in canvas_group) {
        canvas_group[i]['resize']()
    }
}, close_canvas = function() {
    null != canvas_timer && clearInterval(canvas_timer), canvas_group = [], canvas_timer = null, window_timer = !1, cards = [], table = null, controls = null, click_listeners = {
        user1Clicked: null,
        user2Clicked: null,
        chatClicked: null,
        exitClicked: null
    }
}, next_user = function(_0xdb4bx2) {
    var _0xdb4bx3 = game_data['me'] + _0xdb4bx2;
    return _0xdb4bx3 > 4 && (_0xdb4bx3 -= 4), _0xdb4bx3
}, start_canvas = function() {
    close_canvas(), (table = new table_element({
        image: 'table'
    }, {
        x: 0,
        y: 0,
        width: 962,
        height: 529
    }))['resize'](), canvas_group['push'](table), (controls = new controls_element)['init'](), canvas_group['push'](controls), canvas_timer = setInterval(function() {
        render_canvas()
    }, parseInt(Math['round'](1e3 / CANVAS_FPS))), canvas_resized || (canvas_resized = !0, $(window)['resize'](function() {
        resize_canvas()
    })), resize_canvas()
}, render_canvas = function() {
    context['clearRect'](0, 0, canvas_size['width'], canvas_size['height']);
    for (ijx in canvas_group) {
        canvas_group[ijx]['draw'](context)
    }
}, change_screen = function(_0xdb4bx2) {
    active_screen = _0xdb4bx2, $('.screen')['hide'](), $('#' + _0xdb4bx2)['show'](), 'lobby_screen' == _0xdb4bx2 && refresh_games_list()
}, fadein_screen = function(_0xdb4bx2) {
    active_screen = _0xdb4bx2, $('.screen')['hide'](), $('#' + _0xdb4bx2)['fadeIn'](), 'lobby_screen' == _0xdb4bx2 && refresh_games_list()
}, start_game = function(_0xdb4bx2) {
    setTimeout(function() {
        change_screen('loading_screen'), language = (new lang)['load'](function() {
            language['set_game'](), _0xdb4bx2()
        })
    }, 1e3)
}, createCookie = function(_0xdb4bx2, _0xdb4bx3) {
    var _0xdb4bx18 = new Date;
    _0xdb4bx18['setTime'](_0xdb4bx18['getTime']() + 2592e6);
    var _0xdb4bx19 = '; expires=' + _0xdb4bx18['toGMTString']();
    document['cookie'] = _0xdb4bx2 + '=' + _0xdb4bx3 + _0xdb4bx19 + '; path=/'
}, readCookie = function(_0xdb4bx2) {
    for (var _0xdb4bx3 = _0xdb4bx2 + '=', _0xdb4bx18 = document['cookie']['split'](';'), _0xdb4bx19 = 0; _0xdb4bx19 < _0xdb4bx18['length']; _0xdb4bx19++) {
        for (var _0xdb4bx1a = _0xdb4bx18[_0xdb4bx19];
            ' ' == _0xdb4bx1a['charAt'](0);) {
            _0xdb4bx1a = _0xdb4bx1a['substring'](1, _0xdb4bx1a['length'])
        };
        if (0 == _0xdb4bx1a['indexOf'](_0xdb4bx3)) {
            return _0xdb4bx1a['substring'](_0xdb4bx3['length'], _0xdb4bx1a['length'])
        }
    };
    return null
}, eraseCookie = function(_0xdb4bx2) {
    createCookie(_0xdb4bx2, '', -1)
}, apiRequest = function(_0xdb4bx2, _0xdb4bx3, _0xdb4bx18) {
    var _0xdb4bx19 = readCookie('language');
    null != _0xdb4bx19 && null == _0xdb4bx3['language'] && (_0xdb4bx3['language'] = _0xdb4bx19), _0xdb4bx3['lang'] = userLang, _0xdb4bx3['device'] = DEVICE_TYPE, _0xdb4bx3['game'] = 'hokm', $['post'](API_URL + _0xdb4bx2, _0xdb4bx3)['done'](function(_0xdb4bx2) {
        if (null != _0xdb4bx18) {
            var _0xdb4bx3 = 'object' == typeof _0xdb4bx2 ? _0xdb4bx2 : JSON['parse'](_0xdb4bx2),
                _0xdb4bx19 = null != _0xdb4bx3['result'] ? _0xdb4bx3['result'] : 'null';
            _0xdb4bx18(_0xdb4bx19, _0xdb4bx3)
        }
    })['fail'](function(_0xdb4bx2, _0xdb4bx3, _0xdb4bx18) {
        top['location']['reload']()
    })
}, message = function(_0xdb4bx2) {
    var _0xdb4bx3 = null != language && null != language['data'] && null != language['data']['okey'] ? language['data']['okey'] : 'OK';
    swal({
        title: '',
        text: '<font style=\'font-size:20px;\'>' + _0xdb4bx2 + '</font>',
        confirmButtonText: _0xdb4bx3,
        html: !0
    })
};
var lang = function() {
    this['load'] = function(_0xdb4bx2) {
        var _0xdb4bx3 = new Object;
        _0xdb4bx3['lang'] = userLang;
        var _0xdb4bx18 = readCookie('language');
        return null != _0xdb4bx18 && (_0xdb4bx3['language'] = _0xdb4bx18), apiRequest('user/casino/language', _0xdb4bx3, function(_0xdb4bx3, _0xdb4bx18) {
            null != _0xdb4bx18['data'] && (language['data'] = _0xdb4bx18['data']), null != _0xdb4bx2 && _0xdb4bx2()
        }), this
    }, this['set_game'] = function() {
        $('.lang_31')['html'](this['data']['main_disconnect']), $('.lang_32')['html'](this['data']['main_connect_again']), $('.lang_46')['html'](this['data']['landscape']), $('.lang_47')['html'](this['data']['pasoor_searching']), $('.lang_48')['html'](this['data']['please_wait']), $('.lang_49')['html'](this['data']['cancel']), $('.lang_50')['html'](this['data']['zoomout']), $('.lang_56')['html'](this['data']['chat_send']), $('.lang_70')['html'](this['data']['friends_list']), null != this['data']['javascript'] && eval(this['data']['javascript'])
    }
};
full_chip_format = function(_0xdb4bx2) {
    return (_0xdb4bx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
}, short_chip_format = function(_0xdb4bx2) {
    return (_0xdb4bx2 / 100)['formatMoney'](0, MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
}, chip_format_no_symbol = function(_0xdb4bx2) {
    return (_0xdb4bx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2])
}, Number['prototype']['formatMoney'] = function(_0xdb4bx2, _0xdb4bx3, _0xdb4bx18) {
    var _0xdb4bx19 = this,
        _0xdb4bx2 = isNaN(_0xdb4bx2 = Math['abs'](_0xdb4bx2)) ? 2 : _0xdb4bx2,
        _0xdb4bx3 = void(0) == _0xdb4bx3 ? '.' : _0xdb4bx3,
        _0xdb4bx18 = void(0) == _0xdb4bx18 ? ',' : _0xdb4bx18,
        _0xdb4bx1a = _0xdb4bx19 < 0 ? '-' : '',
        _0xdb4bx1b = parseInt(_0xdb4bx19 = Math['abs'](+_0xdb4bx19 || 0)['toFixed'](_0xdb4bx2)) + '',
        _0xdb4bx1c = (_0xdb4bx1c = _0xdb4bx1b['length']) > 3 ? _0xdb4bx1c % 3 : 0;
    return _0xdb4bx1a + (_0xdb4bx1c ? _0xdb4bx1b['substr'](0, _0xdb4bx1c) + _0xdb4bx18 : '') + _0xdb4bx1b['substr'](_0xdb4bx1c)['replace'](/(\d{3})(?=\d)/g, '$1' + _0xdb4bx18) + (_0xdb4bx2 ? _0xdb4bx3 + Math['abs'](_0xdb4bx19 - _0xdb4bx1b)['toFixed'](_0xdb4bx2)['slice'](2) : '')
};
var bet_selector_model = function() {
    this['prepare'] = function() {
        this['bets'] = null != user_data['bets'] ? user_data['bets'] : [], null == this['percent'] && (this['percent'] = Math['round'](this['bets']['length'] / 2)), this['setValue'](), this['setBar']()
    }, this['plus'] = function() {
        this['percent'] += 1, this['percent'] > this['bets']['length'] && (this['percent'] = this['bets']['length']), this['setValue'](), this['setBar']()
    }, this['minus'] = function() {
        this['percent'] -= 1, this['percent'] < 1 && (this['percent'] = 1), this['setValue'](), this['setBar']()
    }, this['drag'] = function(_0xdb4bx2, _0xdb4bx3) {
        this['percent'] = Math['round'](this['bets']['length'] * _0xdb4bx2 / 100), this['percent'] < 1 && (this['percent'] = 1), this['setValue'](), $('.bet_holder_bg_in')['css']({
            width: _0xdb4bx3
        })
    }, this['setValue'] = function() {
        var _0xdb4bx2 = short_chip_format(this['bets'][this['percent'] - 1]);
        $('#play_button')['html'](language['data']['pasoor_play']['replace']('{amount}', _0xdb4bx2))
    }, this['setBar'] = function() {
        var _0xdb4bx2 = 80 * (this['percent'] - 1) / (this['bets']['length'] - 1);
        _0xdb4bx2 = 'lobby_screen' != active_screen ? _0xdb4bx2 / 100 * (0.7 * ($(window)['width']() > $(window)['height']() ? $(window)['width']() : $(window)['height']()) - 100) : $('.bet_holder')['width']() * (_0xdb4bx2 / 100), $('.bet_indicator')['css']({
            left: _0xdb4bx2
        });
        var _0xdb4bx3 = 95 * (this['percent'] - 1) / (this['bets']['length'] - 1);
        $('.bet_holder_bg_in')['css']({
            width: _0xdb4bx3 + '%'
        })
    }, this['getValue'] = function() {
        return this['bets'][this['percent'] - 1]
    }
};
clear_chat_panel = function() {
    $('#chat_button')['css']({
        color: '#fff'
    }), $('.chat_area')['hide']();
    var _0xdb4bx2 = '';
    for (i = 0; i < 40; i++) {
        _0xdb4bx2 += '<br />'
    };
    $('.chat_text_container')['html'](_0xdb4bx2)
}, add_to_chat_panel = function(_0xdb4bx2, _0xdb4bx3) {
    var _0xdb4bx18 = $('.chat_text_container')['html']();
    _0xdb4bx18 += '<span>' + _0xdb4bx2 + ':</span> ' + _0xdb4bx3 + '<br />', null != _0xdb4bx2 && '' != _0xdb4bx2 || (_0xdb4bx18 = $('.chat_text_container')['html']() + _0xdb4bx3 + '<br />'), $('.chat_text_container')['html'](_0xdb4bx18), setTimeout(function() {
        $('.chat_text_container')['prop']('scrollTop', $('.chat_text_container')['prop']('scrollHeight'))
    }, 100)
}, open_chat_panel = function() {
    var _0xdb4bx2 = $(window)['height']();
    0 == _0xdb4bx2 && (_0xdb4bx2 = $(document)['height']());
    var _0xdb4bx3 = 0.95 * (_0xdb4bx2 - 60);
    $('.chat_text_container')['height'](_0xdb4bx3), $('.chat_area')['fadeIn'](), $('.chat_text_container')['prop']('scrollTop', $('.chat_text_container')['prop']('scrollHeight'))
}, show_message = function(_0xdb4bx2) {
    $('.message_alert')['html'](_0xdb4bx2), $('.message_alert')['fadeIn'](), setTimeout(function() {
        $('.message_alert')['fadeOut']()
    }, 1500)
}, socket_connect = function(_0xdb4bx2, _0xdb4bx3) {
    null != socket_connection && 1 == socket_connection['readyState'] && (socket_connection['close'](), socket_connection = null), (socket_connection = new WebSocket(_0xdb4bx2, 'onopen'))['onopen'] = function(_0xdb4bx2) {
        null != _0xdb4bx3 && _0xdb4bx3(!0), _0xdb4bx3 = null
    }, socket_connection['onmessage'] = function(_0xdb4bx2) {
        var _0xdb4bx3 = JSON['parse'](_0xdb4bx2['data']);
        data_from_socket(_0xdb4bx3)
    }, socket_connection['onclose'] = function(_0xdb4bx2) {
        fadein_screen('disconnect_screen')
    }, socket_connection['onerror'] = function(_0xdb4bx2) {
        null != _0xdb4bx3 && _0xdb4bx3(!1), fadein_screen('disconnect_screen')
    }
}, socket_disconnect = function() {
    if (null == socket_connection || 1 != socket_connection['readyState']) {
        return !1
    };
    socket_connection['close']()
}, socket_send = function(_0xdb4bx2) {
    return null != socket_connection && 1 == socket_connection['readyState'] && (socket_connection['send'](JSON['stringify'](_0xdb4bx2)), !0)
}, connect_to_server = function(_0xdb4bx2) {
    socket_connect(_0xdb4bx2, function(_0xdb4bx2) {
        1 == _0xdb4bx2 ? socket_send({
            command: 'auth',
            uid: user_data['uid'],
            token: user_data['token'],
            game_id: user_data['game_id'],
        }) : fadein_screen('disconnect_screen')
    })
}, find_level_from_xp = function(_0xdb4bx2) {
    for (var _0xdb4bx3 = 1; _0xdb4bx3 <= 100; _0xdb4bx3++) {
        if (_0xdb4bx2 <= 5 * _0xdb4bx3 * _0xdb4bx3) {
            return _0xdb4bx3
        }
    };
    return 100
}, open_user_profile = function(_0xdb4bx2) {
    if (null == _0xdb4bx2['uid'] || _0xdb4bx2['uid'] == user_data['uid']) {
        return !1
    };
    var _0xdb4bx3 = '' != _0xdb4bx2['photo'] ? _0xdb4bx2['photo'] : GAME_FOLDER + 'assets/placeholder.png',
        _0xdb4bx18 = is_my_friend(_0xdb4bx2['uid']) ? language['data']['profile_remove_friend'] : language['data']['profile_add_friend'],
        _0xdb4bx19 = (language['data']['profile_chips']['replace']('{amount}', full_chip_format(_0xdb4bx2['shown'])), language['data']['profile_level']['replace']('{level}', find_level_from_xp(_0xdb4bx2['level']))),
        _0xdb4bx1a = is_my_friend(_0xdb4bx2['uid']) ? '#AF0505' : '#1DA52E';
    swal({
        title: _0xdb4bx2['name'],
        imageUrl: _0xdb4bx3,
        text: '<font style=\'font-size:20px;\'>' + _0xdb4bx19 + '</font>',
        confirmButtonColor: _0xdb4bx1a,
        confirmButtonText: _0xdb4bx18,
        cancelButtonText: language['data']['profile_close'],
        showCancelButton: !0,
        closeOnConfirm: !0,
        closeOnCancel: !0,
        allowOutsideClick: !0,
        html: !0
    }, function(_0xdb4bx3) {
        _0xdb4bx3 && friendship_proccess(_0xdb4bx2['uid'])
    })
}, friendship_proccess = function(_0xdb4bx2) {
    if (is_my_friend(_0xdb4bx2)) {
        for (key in user_data['friends']) {
            if (user_data['friends'][key]['uid'] == _0xdb4bx2) {
                user_data['friends']['splice'](key, 1);
                break
            }
        };
        socket_send({
            command: 'friends',
            type: 'remove',
            uid: _0xdb4bx2
        })
    } else {
        user_data['friends']['push']({
            uid: _0xdb4bx2,
            name: ''
        }), socket_send({
            command: 'friends',
            type: 'add',
            uid: _0xdb4bx2
        })
    }
}, is_my_friend = function(_0xdb4bx2) {
    if (null == user_data['friends']) {
        return !1
    };
    for (key in user_data['friends']) {
        if (user_data['friends'][key]['uid'] == _0xdb4bx2) {
            return !0
        }
    };
    return !1
}, open_friends_screen = function() {
    change_screen('loading_screen'), socket_send({
        command: 'friends',
        type: 'list'
    })
}, show_friends_screen = function(_0xdb4bx2) {
    _0xdb4bx2['friends'] = _0xdb4bx2['friends']['sort'](function(_0xdb4bx2, _0xdb4bx3) {
        return _0xdb4bx3['code'] - _0xdb4bx2['code']
    });
    var _0xdb4bx3 = '<table class="support_table">';
    for (key in _0xdb4bx2['friends']) {
        var _0xdb4bx18 = '';
        '1' == _0xdb4bx2['friends'][key]['code'] && (_0xdb4bx18 = '<font color="#A91717">(' + language['data']['friends_offline'] + ')</font>'), '2' == _0xdb4bx2['friends'][key]['code'] && (_0xdb4bx18 = '<font color="#30DAE3">(' + language['data']['friends_online'] + ')</font>'), '3' == _0xdb4bx2['friends'][key]['code'] && (_0xdb4bx18 = '<font color="#3FFF28">(' + language['data']['friends_playing'] + ')</font>');
        var _0xdb4bx19 = '';
        '2' == _0xdb4bx2['friends'][key]['code'] && (_0xdb4bx19 = '<a href="javascript:;" class="clickable invite_button myButton" data="' + _0xdb4bx2['friends'][key]['uid'] + '">' + $('#play_button')['html']() + '</a>'), _0xdb4bx19 = '', _0xdb4bx3 = _0xdb4bx3 + '<tr class="black_back">	<td valign="center" style="vertical-aligment: center !important;">		<div class="left margin_5">' + _0xdb4bx2['friends'][key]['name'] + ' &nbsp; ' + _0xdb4bx18 + '</div>		<div class="right margin_5">' + _0xdb4bx19 + '</div>		<div class="clear"></div>	</td></tr>'
    };
    _0xdb4bx3 += '</table>', 0 == _0xdb4bx2['friends']['length'] && (_0xdb4bx3 = '<table class="support_table">	<tr class="black_back">		<td><div class="margin_5">' + language['data']['has_no_friends'] + '</div></td>	</tr></table>'), $('#friends_list')['html'](_0xdb4bx3), change_screen('friends_screen'), $('.invite_button')['unbind']('click'), $('.invite_button')['click'](function(_0xdb4bx2) {
        _0xdb4bx2['preventDefault']();
        var _0xdb4bx3 = $(this)['attr']('data');
        change_screen('searching_screen'), socket_send({
            command: 'enter_game',
            invite: _0xdb4bx3,
            amount: bet_selector['getValue'](),
            double: double_game
        })
    })
}, friend_invited = function(_0xdb4bx2) {
    var _0xdb4bx3 = '' != _0xdb4bx2['photo'] ? _0xdb4bx2['photo'] : GAME_FOLDER + 'assets/placeholder.png',
        _0xdb4bx18 = language['data']['invite_text']['replace']('{amount}', full_chip_format(_0xdb4bx2['amount']));
    null != _0xdb4bx2['double'] && 1 == _0xdb4bx2['double'] && (_0xdb4bx18 = language['data']['double_invite_text']['replace']('{amount}', full_chip_format(_0xdb4bx2['amount']))), _0xdb4bx18 = _0xdb4bx18['replace']('{name}', _0xdb4bx2['name']), swal({
        title: '',
        imageUrl: _0xdb4bx3,
        text: '<font style=\'font-size:20px;\'>' + _0xdb4bx18 + '</font>',
        confirmButtonColor: '#1DA52E',
        confirmButtonText: language['data']['invite_accept'],
        cancelButtonText: language['data']['invite_decline'],
        cancelButtonColor: '#AF0505',
        showCancelButton: !0,
        closeOnConfirm: !0,
        closeOnCancel: !0,
        allowOutsideClick: !0,
        html: !0
    }, function(_0xdb4bx3) {
        _0xdb4bx3 && (change_screen('searching_screen'), socket_send({
            command: 'enter_game',
            invited: _0xdb4bx2['uid'],
            amount: _0xdb4bx2['amount'],
            double: _0xdb4bx2['double']
        }))
    })
};
var userLang = navigator['language'] || navigator['userLanguage'],
    language, user_data = new Object,
    game_data = new Object,
    socket_connection, bet_selector, active_screen = '',
    double_game = !1;
if (void(0) === debug_level) {
    var debug_level = 0
};
game_win = function(_0xdb4bx2) {
    if ($('.chat_area')['addClass']('chat_passive'), user_data['uid'] == _0xdb4bx2['uid_1'] && (user_data['chips'] = _0xdb4bx2['chips_1']), user_data['uid'] == _0xdb4bx2['uid_2'] && (user_data['chips'] = _0xdb4bx2['chips_2']), user_data['uid'] == _0xdb4bx2['uid_3'] && (user_data['chips'] = _0xdb4bx2['chips_3']), user_data['uid'] == _0xdb4bx2['uid_4'] && (user_data['chips'] = _0xdb4bx2['chips_4']), $('.top_left_chips')['html'](full_chip_format(user_data['chips'])), user_data['uid'] == _0xdb4bx2['winner_uid'] || user_data['uid'] == _0xdb4bx2['winner_uid2']) {
        var _0xdb4bx3 = language['data']['pool_winner']['replace']('{amount}', full_chip_format(_0xdb4bx2['amount']));
        controls['showAlert'](_0xdb4bx3, 0, function() {
            close_canvas(), change_screen('lobby_screen')
        })
    } else {
        controls['showAlert'](language['data']['pasoor_loser'], 0, function() {
            close_canvas(), change_screen('lobby_screen')
        })
    }
}, game_chat = function(_0xdb4bx2) {
    add_to_chat_panel(_0xdb4bx2['name'], _0xdb4bx2['text'])
}, game_error = function(_0xdb4bx2) {
    'searching_screen' == active_screen && fadein_screen('lobby_screen');
    var _0xdb4bx3 = _0xdb4bx2['message'];
    null != language['data'][_0xdb4bx3] && message(language['data'][_0xdb4bx3]), 'loading_screen' == active_screen && 1 == $('#store_list')['length'] && '0' == $('#store_list')['attr']('data') && socket_send({
        command: 'cue_list'
    })
}, game_broadcast = function(_0xdb4bx2) {
    if ('chat' == _0xdb4bx2['type']) {
        var _0xdb4bx3 = $('.chat_text_container')['html']();
        _0xdb4bx3 += '<font color=\'yellow\' style=\'font-size: 18px; font-weight: bold;\'>' + _0xdb4bx2['message'] + '</font><br />', $('.chat_text_container')['html'](_0xdb4bx3), setTimeout(function() {
            $('.chat_text_container')['prop']('scrollTop', $('.chat_text_container')['prop']('scrollHeight'))
        }, 100)
    } else {
        message(_0xdb4bx2['message'])
    }
}, data_from_socket = function(_0xdb4bx2) {
    var _0xdb4bx3 = null != _0xdb4bx2['command'] ? _0xdb4bx2['command'] : '';
	
    	'auth' == _0xdb4bx3 && game_auth(_0xdb4bx2),
		'not_found' == _0xdb4bx3 && game_not_found(_0xdb4bx2),
		'start_error' == _0xdb4bx3 && game_start_error(_0xdb4bx2),
		'game_started' == _0xdb4bx3 && game_game_started(_0xdb4bx2),
		'game_status' == _0xdb4bx3 && game_game_status(_0xdb4bx2),
		'turn_card' == _0xdb4bx3 && game_turn_card(_0xdb4bx2),
		'win' == _0xdb4bx3 && game_win(_0xdb4bx2), 
		'chat' == _0xdb4bx3 && game_chat(_0xdb4bx2),
		'error' == _0xdb4bx3 && game_error(_0xdb4bx2),
		'broadcast' == _0xdb4bx3 && game_broadcast(_0xdb4bx2),
		'friends' == _0xdb4bx3 && show_friends_screen(_0xdb4bx2), 
		'invite' == _0xdb4bx3 && friend_invited(_0xdb4bx2),
		'games_list' == _0xdb4bx3 && games_list(_0xdb4bx2),
		'cancelled' == _0xdb4bx3 && cancelled_game(_0xdb4bx2),
		'searching' == _0xdb4bx3 && game_searching(_0xdb4bx2),
		'finded' == _0xdb4bx3 && game_finded(_0xdb4bx2),
		'played' == _0xdb4bx3 && game_played(_0xdb4bx2),
		'game_deal_5' == _0xdb4bx3 && game_deal_5(_0xdb4bx2),
		'game_deal_8' == _0xdb4bx3 && game_deal_8(_0xdb4bx2),
		'hokm' == _0xdb4bx3 && game_hokm(_0xdb4bx2)
	
}, 
	game_searching = function(_0xdb4bx2) {
    $('.finded_players')['html']('1 / 4')
},
	game_finded = function(_0xdb4bx2) {
    null != _0xdb4bx2['users'] && $('.finded_players')['html'](_0xdb4bx2['users']['length'] + ' / 4')
}, 
	games_list = function(_0xdb4bx2) {
    _0xdb4bx2['games']['sort'](function(_0xdb4bx2, _0xdb4bx3) {
        return _0xdb4bx3['amount'] - _0xdb4bx2['amount']
    });
    var _0xdb4bx3 = '',
        _0xdb4bx18 = 0;
    for (i in _0xdb4bx2['games']) {
        var _0xdb4bx1a = language['data']['game_hokm_waiting'];
        if (_0xdb4bx3 = _0xdb4bx3 + (_0xdb4bx1a = (_0xdb4bx1a = _0xdb4bx1a['replace']('{amount}', '<span class=\'games-waiting-amount\'>' + full_chip_format(_0xdb4bx2['games'][i]['amount']) + '</span>'))['replace']('{count}', '<span class=\'games-waiting-name\'>' + _0xdb4bx2['games'][i]['players'] + '</span>')) + (' <a href=\'javascript:;\' class=\'clickable joinButton\' data=\'' + _0xdb4bx2['games'][i]['amount'] + '\' data-double=\'normal\'>' + language['data']['join'] + '</a>') + '<br>', (_0xdb4bx18 += 1) >= 5) {
            break
        }
    };
    $('#waiting_players')['html'](_0xdb4bx3), $('.joinButton')['unbind']('click'), $('.joinButton')['click'](function() {
        var _0xdb4bx2 = $(this)['attr']('data'),
            _0xdb4bx3 = $(this)['attr']('data-double');
        _0xdb4bx3 = 'double' == _0xdb4bx3, change_screen('searching_screen'), socket_send({
            command: 'enter_game',
            amount: _0xdb4bx2,
            double: _0xdb4bx3
        })
    })
}, 
	refresh_games_list = function() {
    $('#waiting_players')['html'](''), socket_send({
        command: 'games_list'
    })
}, 
	cancelled_game = function() {
    change_screen('lobby_screen')
},
	game_auth = function(_0xdb4bx2) {
    user_data['uid'] = _0xdb4bx2['uid'], user_data['name'] = _0xdb4bx2['name'], user_data['photo'] = _0xdb4bx2['photo'], user_data['chips'] = _0xdb4bx2['chips'], user_data['currency'] = _0xdb4bx2['currency'], user_data['bets'] = _0xdb4bx2['bets'], user_data['level'] = _0xdb4bx2['level'], user_data['friends'] = _0xdb4bx2['friends'], '' != user_data['photo'] && (user_data['photo_image'] = new Image, user_data['photo_image']['onload'] = function() {
        $('#profile_photo')['attr']('src', user_data['photo'])
    }, user_data['photo_image']['onerror'] = function() {}, user_data['photo_image']['src'] = user_data['photo']);
    var _0xdb4bx3 = '(' + find_level_from_xp(user_data['level']) + ') ' + user_data['name'];
    $('.top_left_name')['html'](_0xdb4bx3), $('.top_left_chips')['html'](full_chip_format(user_data['chips'])), bet_selector['prepare'](), change_screen('lobby_screen')
},
	game_not_found = function(_0xdb4bx2) {
    change_screen('lobby_screen'), message(language['data']['pasoor_not_found'])
},
	game_start_error = function(_0xdb4bx2) {
    change_screen('lobby_screen'), message(language['data']['error'])
},
	game_game_started = function(_0xdb4bx2) {
    start_canvas(), controls['sounds'] = controls['sound_status'](), controls['sounds_img'] = controls['sounds'] ? assets['get']('soundo') : assets['get']('soundc'), controls['turn_time_total'] = _0xdb4bx2['time_total'], game_data['me'] = 0, _0xdb4bx2['uid_1'] == user_data['uid'] && (game_data['me'] = 1), _0xdb4bx2['uid_2'] == user_data['uid'] && (game_data['me'] = 2), _0xdb4bx2['uid_3'] == user_data['uid'] && (game_data['me'] = 3), _0xdb4bx2['uid_4'] == user_data['uid'] && (game_data['me'] = 4), controls['profile1']['setPlayer'](_0xdb4bx2['name_' + next_user(0)], _0xdb4bx2['photo_' + next_user(0)], _0xdb4bx2['uid_' + next_user(0)], _0xdb4bx2['chips_' + next_user(0)], _0xdb4bx2['level_' + next_user(0)]), controls['profile2']['setPlayer'](_0xdb4bx2['name_' + next_user(1)], _0xdb4bx2['photo_' + next_user(1)], _0xdb4bx2['uid_' + next_user(1)], _0xdb4bx2['chips_' + next_user(1)], _0xdb4bx2['level_' + next_user(1)]), controls['profile3']['setPlayer'](_0xdb4bx2['name_' + next_user(2)], _0xdb4bx2['photo_' + next_user(2)], _0xdb4bx2['uid_' + next_user(2)], _0xdb4bx2['chips_' + next_user(2)], _0xdb4bx2['level_' + next_user(2)]), controls['profile4']['setPlayer'](_0xdb4bx2['name_' + next_user(3)], _0xdb4bx2['photo_' + next_user(3)], _0xdb4bx2['uid_' + next_user(3)], _0xdb4bx2['chips_' + next_user(3)], _0xdb4bx2['level_' + next_user(3)]), $('.chat_area')['removeClass']('chat_passive'), clear_chat_panel(), add_to_chat_panel('', '<span style=\'color: yellow;\'>' + language['data']['hokm_rule'] + '</span><br>'), controls['setTurn'](0, 0), change_screen('game_screen')
}, 
	game_game_status = function(_0xdb4bx2) {
    if (game_game_started(_0xdb4bx2), null != _0xdb4bx2['hand']) {
        for (i in _0xdb4bx2['hand']) {
            controls['hand']['cards']['push'](new card_element({
                id: 0,
                no: _0xdb4bx2['hand'][i]
            }, {
                x: 0,
                y: 0
            })), controls['hand']['resize']()
        };
        for (i in controls['hand']['cards']) {
            controls['hand']['cards'][i]['resize']()
        };
        controls['hand']['arrange'](), controls['hand']['resize']()
    };
    null != _0xdb4bx2['floor_' + next_user(0)] && (controls['middle']['card1'] = new card_element({
        id: 0,
        no: _0xdb4bx2['floor_' + next_user(0)]
    }, {
        x: 0,
        y: 0
    })), null != _0xdb4bx2['floor_' + next_user(1)] && (controls['middle']['card2'] = new card_element({
        id: 0,
        no: _0xdb4bx2['floor_' + next_user(1)]
    }, {
        x: 0,
        y: 0
    })), null != _0xdb4bx2['floor_' + next_user(2)] && (controls['middle']['card3'] = new card_element({
        id: 0,
        no: _0xdb4bx2['floor_' + next_user(2)]
    }, {
        x: 0,
        y: 0
    })), null != _0xdb4bx2['floor_' + next_user(3)] && (controls['middle']['card4'] = new card_element({
        id: 0,
        no: _0xdb4bx2['floor_' + next_user(3)]
    }, {
        x: 0,
        y: 0
    })), controls['middle']['resize'](), null != _0xdb4bx2['hokm'] && (controls['hokm'] = _0xdb4bx2['hokm']);
    var _0xdb4bx3 = _0xdb4bx2['score_' + next_user(0)] + _0xdb4bx2['score_' + next_user(2)],
        _0xdb4bx18 = _0xdb4bx2['score_' + next_user(1)] + _0xdb4bx2['score_' + next_user(3)];
    if (controls['profile1']['setScore'](_0xdb4bx2['score_' + next_user(0)], _0xdb4bx3), controls['profile2']['setScore'](_0xdb4bx2['score_' + next_user(1)], _0xdb4bx18), controls['profile3']['setScore'](_0xdb4bx2['score_' + next_user(2)], _0xdb4bx3), controls['profile4']['setScore'](_0xdb4bx2['score_' + next_user(3)], _0xdb4bx18), null != _0xdb4bx2['turn']) {
        var _0xdb4bx1a = 0;
        _0xdb4bx2['turn'] == next_user(0) && (_0xdb4bx1a = 1), _0xdb4bx2['turn'] == next_user(1) && (_0xdb4bx1a = 2), _0xdb4bx2['turn'] == next_user(2) && (_0xdb4bx1a = 3), _0xdb4bx2['turn'] == next_user(3) && (_0xdb4bx1a = 4), controls['setTurn'](_0xdb4bx1a, _0xdb4bx2['time_left']), null != _0xdb4bx2['status'] && 4 == _0xdb4bx2['status'] && 1 == _0xdb4bx1a && controls['selectHokm']()
    };
    if (controls['posibilities'] = [], null != _0xdb4bx2['posibilities']) {
        for (j in _0xdb4bx2['posibilities']) {
            controls['posibilities']['push'](_0xdb4bx2['posibilities'][j])
        }
    }
}, 
	game_played = function(_0xdb4bx2) {
    controls['setTurn'](0, 0), controls['deck'] = null, null != controls['hand'] && (controls['hand']['mouse_toggle_card'] = null);
    var _0xdb4bx3 = 0;
    if (_0xdb4bx2['player'] == next_user(0) && (_0xdb4bx3 = 1), _0xdb4bx2['player'] == next_user(1) && (_0xdb4bx3 = 2), _0xdb4bx2['player'] == next_user(2) && (_0xdb4bx3 = 3), _0xdb4bx2['player'] == next_user(3) && (_0xdb4bx3 = 4), controls['middle']['add'](_0xdb4bx3, _0xdb4bx2['card']), play_audio('card'), controls['posibilities'] = [], null != _0xdb4bx2['posibilities']) {
        for (j in _0xdb4bx2['posibilities']) {
            controls['posibilities']['push'](_0xdb4bx2['posibilities'][j])
        }
    };
    if (_0xdb4bx2['finished']) {
        var _0xdb4bx18 = 0;
        _0xdb4bx2['winner'] == next_user(0) && (_0xdb4bx18 = 1), _0xdb4bx2['winner'] == next_user(1) && (_0xdb4bx18 = 2), _0xdb4bx2['winner'] == next_user(2) && (_0xdb4bx18 = 3), _0xdb4bx2['winner'] == next_user(3) && (_0xdb4bx18 = 4);
        var _0xdb4bx19 = _0xdb4bx2['score_' + next_user(0)] + _0xdb4bx2['score_' + next_user(2)],
            _0xdb4bx1a = _0xdb4bx2['score_' + next_user(1)] + _0xdb4bx2['score_' + next_user(3)];
        setTimeout(function() {
            if (controls['middle']['send'](_0xdb4bx18), play_audio('fold'), controls['profile1']['setScore'](_0xdb4bx2['score_' + next_user(0)], _0xdb4bx19), controls['profile2']['setScore'](_0xdb4bx2['score_' + next_user(1)], _0xdb4bx1a), controls['profile3']['setScore'](_0xdb4bx2['score_' + next_user(2)], _0xdb4bx19), controls['profile4']['setScore'](_0xdb4bx2['score_' + next_user(3)], _0xdb4bx1a), null != _0xdb4bx2['turn']) {
                var _0xdb4bx3 = 0;
                _0xdb4bx2['turn'] == next_user(0) && (_0xdb4bx3 = 1), _0xdb4bx2['turn'] == next_user(1) && (_0xdb4bx3 = 2), _0xdb4bx2['turn'] == next_user(2) && (_0xdb4bx3 = 3), _0xdb4bx2['turn'] == next_user(3) && (_0xdb4bx3 = 4), controls['setTurn'](_0xdb4bx3, _0xdb4bx2['time_left'])
            }
        }, 1e3)
    } else {
        if (null != _0xdb4bx2['turn']) {
            var _0xdb4bx1b = 0;
            _0xdb4bx2['turn'] == next_user(0) && (_0xdb4bx1b = 1), _0xdb4bx2['turn'] == next_user(1) && (_0xdb4bx1b = 2), _0xdb4bx2['turn'] == next_user(2) && (_0xdb4bx1b = 3), _0xdb4bx2['turn'] == next_user(3) && (_0xdb4bx1b = 4), controls['setTurn'](_0xdb4bx1b, _0xdb4bx2['time_left'])
        }
    }
}, 
	game_turn_card = function(_0xdb4bx2) {
    var _0xdb4bx3 = 0;
    1 == next_user(0) && (_0xdb4bx3 = 0), 1 == next_user(1) && (_0xdb4bx3 = 1), 1 == next_user(2) && (_0xdb4bx3 = 2), 1 == next_user(3) && (_0xdb4bx3 = 3);
    var _0xdb4bx18 = [];
    for (i = 0; i < 52 && null != _0xdb4bx2['cards']['c' + i]; i++) {
        _0xdb4bx18['push']({
            to: _0xdb4bx3 % 4 + 1,
            no: _0xdb4bx2['cards']['c' + i]
        }), _0xdb4bx3 += 1
    };
    controls['deck'] = new deck_element, controls['deck']['createcards'](), controls['deck']['deal'](!1, _0xdb4bx18)
}, 
	game_deal_5 = function(_0xdb4bx2) {
    controls['setTurn'](0, 0);
    _0xdb4bx1a = 0;
    _0xdb4bx2['turn'] == next_user(0) && (_0xdb4bx1a = 1), _0xdb4bx2['turn'] == next_user(1) && (_0xdb4bx1a = 2), _0xdb4bx2['turn'] == next_user(2) && (_0xdb4bx1a = 3), _0xdb4bx2['turn'] == next_user(3) && (_0xdb4bx1a = 4);
    var _0xdb4bx3 = [];
    for (i = 0; i < 5; i++) {
        var _0xdb4bx18 = 1 == _0xdb4bx1a ? _0xdb4bx2['cards'][i] : 52;
        _0xdb4bx3['push']({
            to: _0xdb4bx1a,
            no: _0xdb4bx18
        })
    };
    if (controls['deck'] = new deck_element, controls['deck']['createcards'](), controls['deck']['deal'](!0, _0xdb4bx3), 1 == _0xdb4bx1a && setTimeout(function() {
            controls['selectHokm']()
        }, 1e3), null != _0xdb4bx2['turn']) {
        var _0xdb4bx1a = 0;
        _0xdb4bx2['turn'] == next_user(0) && (_0xdb4bx1a = 1), _0xdb4bx2['turn'] == next_user(1) && (_0xdb4bx1a = 2), _0xdb4bx2['turn'] == next_user(2) && (_0xdb4bx1a = 3), _0xdb4bx2['turn'] == next_user(3) && (_0xdb4bx1a = 4), controls['setTurn'](_0xdb4bx1a, _0xdb4bx2['time_left'])
    }
};

	var game_deal_8_timer = null;
	game_deal_8 = function(_0xdb4bx2) {
    controls['setTurn'](0, 0);
    var _0xdb4bx3 = 0;
    _0xdb4bx2['turn'] == next_user(0) && (_0xdb4bx3 = 1), _0xdb4bx2['turn'] == next_user(1) && (_0xdb4bx3 = 2), _0xdb4bx2['turn'] == next_user(2) && (_0xdb4bx3 = 3), _0xdb4bx2['turn'] == next_user(3) && (_0xdb4bx3 = 4);
    var _0xdb4bx18 = _0xdb4bx3,
        _0xdb4bx1a = [];
    for (j = 0; j < 3; j++) {
        for (_0xdb4bx3 = 4 == _0xdb4bx3 ? 1 : _0xdb4bx3 + 1, i = 0; i < 5; i++) {
            _0xdb4bx1b = 1 == _0xdb4bx3 ? _0xdb4bx2['cards'][i] : 52;
            if (null == _0xdb4bx2['cards'][i]) {
                break
            };
            _0xdb4bx1a['push']({
                to: _0xdb4bx3,
                no: _0xdb4bx1b
            })
        }
    };
    for (j = 0; j < 4; j++) {
        for (_0xdb4bx3 = 4 == _0xdb4bx3 ? 1 : _0xdb4bx3 + 1, i = 0; i < 8; i++) {
            var _0xdb4bx1b = 52;
            1 == _0xdb4bx3 && (_0xdb4bx1b = 1 == _0xdb4bx18 ? _0xdb4bx2['cards'][i] : _0xdb4bx2['cards'][i + 5]), _0xdb4bx1a['push']({
                to: _0xdb4bx3,
                no: _0xdb4bx1b
            })
        }
    };
    if (controls['deck'] = new deck_element, controls['deck']['createcards'](47), controls['deck']['deal'](!0, _0xdb4bx1a), controls['posibilities'] = [], null != _0xdb4bx2['posibilities']) {
        for (j in _0xdb4bx2['posibilities']) {
            controls['posibilities']['push'](_0xdb4bx2['posibilities'][j])
        }
    };
    game_deal_8_timer = setInterval(function() {
        for (i in controls['hand']['cards']) {
            if (controls['hand']['cards'][i]['animating']) {
                return !1
            }
        };
        if (null != controls['deck'] && controls['deck']['animating']()) {
            return !1
        };
        if (clearInterval(game_deal_8_timer), game_deal_8_timer = null, controls['hand']['arrange'](), null != _0xdb4bx2['turn']) {
            var _0xdb4bx3 = 0;
            _0xdb4bx2['turn'] == next_user(0) && (_0xdb4bx3 = 1), _0xdb4bx2['turn'] == next_user(1) && (_0xdb4bx3 = 2), _0xdb4bx2['turn'] == next_user(2) && (_0xdb4bx3 = 3), _0xdb4bx2['turn'] == next_user(3) && (_0xdb4bx3 = 4), controls['setTurn'](_0xdb4bx3, _0xdb4bx2['time_left'])
        };
        controls['deck'] = null
    }, 250)
},
	game_hokm = function(_0xdb4bx2) {
    if (controls['hokm'] = _0xdb4bx2['hokm'], controls['hokmSelected'](), null != _0xdb4bx2['turn']) {
        var _0xdb4bx3 = 0;
        _0xdb4bx2['turn'] == next_user(0) && (_0xdb4bx3 = 1), _0xdb4bx2['turn'] == next_user(1) && (_0xdb4bx3 = 2), _0xdb4bx2['turn'] == next_user(2) && (_0xdb4bx3 = 3), _0xdb4bx2['turn'] == next_user(3) && (_0xdb4bx3 = 4), controls['setTurn'](_0xdb4bx3, _0xdb4bx2['time_left'])
    }
}, 
	init_buttons = function() {
    $('.back_to_lobby')['click'](function() {
        fadein_screen('lobby_screen')
    }), $('.chat_area_overlay')['click'](function() {
        $('.chat_area')['hide']()
    }), $('#chat_message_send')['click'](function() {
        var _0xdb4bx2 = $('#chat_message_text')['val']();
        if ('' == _0xdb4bx2) {
            return !1
        };
        $('#chat_message_text')['val'](''), socket_send({
            command: 'chat',
            text: _0xdb4bx2
        })
    }), $('.home_button')['click'](function() {
        top['location'] = HOME_URL
    }), $('.refresh_button')['click'](function() {
        top['location'] = MAIN_URL
    }), $('#play_button')['click'](function() {
        change_screen('searching_screen'), socket_send({
            command: 'enter_game',
            amount: bet_selector['getValue'](),
            double: double_game
        })
    }), $('#cancel_button')['click'](function() {
        socket_send({
            command: 'cancel_game'
        })
    }), $('.friends_button')['click'](function() {
        open_friends_screen()
    }), bet_selector = new bet_selector_model, $('.bet_selector_plus')['click'](function() {
        bet_selector['plus']()
    }), $('.bet_selector_minus')['click'](function() {
        bet_selector['minus']()
    }), $('.bet_indicator')['draggable']({
        axis: 'x',
        containment: '.bet_holder',
        scroll: !1,
        drag: function(_0xdb4bx2, _0xdb4bx3) {
            var _0xdb4bx18 = $('.bet_holder')['width']() - $('.bet_indicator')['width'](),
                _0xdb4bx19 = Math['round'](100 * _0xdb4bx3['position']['left'] / _0xdb4bx18);
            bet_selector['drag'](_0xdb4bx19, _0xdb4bx3['position']['left'] + 10)
        }
    }), $(window)['resize'](function() {
        'lobby_screen' == active_screen && fadein_screen('lobby_screen')
    })
},
	leave_game = function() {
    swal({
        title: '',
        text: '<font style=\'font-size:20px;\'>' + language['data']['pasoor_exit_confirm'] + '</font>',
        type: 'warning',
        showCancelButton: !0,
        confirmButtonColor: '#DD6B55',
        confirmButtonText: language['data']['pasoor_exit_yes'],
        cancelButtonText: language['data']['pasoor_exit_no'],
        closeOnConfirm: !0,
        html: !0,
        allowOutsideClick: !1,
        allowEscapeKey: !1,
        allowEnterKey: !1
    }, function() {
        top['location'] = HOME_URL
    })
}, 
	init_game_conf = function() {
    init_buttons();
    var _0xdb4bx2f = [{
        name: 'back',
        file: 'assets/back.png',
        type: 'image'
    }, {
        name: 'button_blue',
        file: 'assets/button_blue.png',
        type: 'image'
    }, {
        name: 'button_red',
        file: 'assets/button_red.png',
        type: 'image'
    }, {
        name: 'close',
        file: 'assets/close.png',
        type: 'image'
    }, {
        name: 'friends',
        file: 'assets/friends.png',
        type: 'image'
    }, {
        name: 'home',
        file: 'assets/home.png',
        type: 'image'
    }, {
        name: 'landscape',
        file: 'assets/landscape.png',
        type: 'image'
    }, {
        name: 'minus',
        file: 'assets/minus.png',
        type: 'image'
    }, {
        name: 'placeholder',
        file: 'assets/placeholder.png',
        type: 'image'
    }, {
        name: 'plus',
        file: 'assets/plus.png',
        type: 'image'
    }, {
        name: 'soundc',
        file: 'assets/soundc.png',
        type: 'image'
    }, {
        name: 'soundo',
        file: 'assets/soundo.png',
        type: 'image'
    }, {
        name: 'symbol0',
        file: 'assets/symbol0.png',
        type: 'image'
    }, {
        name: 'symbol1',
        file: 'assets/symbol1.png',
        type: 'image'
    }, {
        name: 'symbol2',
        file: 'assets/symbol2.png',
        type: 'image'
    }, {
        name: 'symbol3',
        file: 'assets/symbol3.png',
        type: 'image'
    }, {
        name: 'table',
        file: 'assets/table.png?0',
        type: 'image'
    }, {
        name: 'zoomout',
        file: 'assets/zoomout.png',
        type: 'image'
    }];
    for (i = 0; i <= 52; i++) {
        _0xdb4bx2f['push']({
            name: 'card' + i,
            file: 'assets/cards/' + i + '.png?0',
            type: 'image'
        })
    };
    for (i in _0xdb4bx2f) {
        _0xdb4bx2f[i]['file'] = GAME_FOLDER + _0xdb4bx2f[i]['file']
    };
    if ('undefined' != typeof ADDITIONAL_FILES) {
        for (ikl in ADDITIONAL_FILES) {
            var _0xdb4bx30 = ADDITIONAL_FILES[ikl],
                _0xdb4bx31 = !1;
            for (i in _0xdb4bx2f) {
                if (_0xdb4bx2f[i]['name'] == _0xdb4bx30['name']) {
                    _0xdb4bx2f[i]['file'] = _0xdb4bx30['file'], _0xdb4bx2f[i]['type'] = _0xdb4bx30['type'], _0xdb4bx31 = !0;
                    break
                }
            };
            _0xdb4bx31 || _0xdb4bx2f['push']({
                name: _0xdb4bx30['name'],
                file: _0xdb4bx30['file'],
                type: _0xdb4bx30['type']
            })
        }
    };
    start_game(function() {
		var code = getCookie('code');
		var game_id = getCookie('game');
		
        (assets = new assets_element)['load'](_0xdb4bx2f, function(_0xdb4bx32, _0xdb4bx33) {
            $('.loading_bar')['show'](), $('#loading_indicator')['width'](1.5 * _0xdb4bx33), _0xdb4bx32 && apiRequest('user/casino/auth', {'code': code, 'game_id': game_id}, function(_0xdb4bx34, _0xdb4bx35) {
                'ok' == _0xdb4bx34 ? (user_data['uid'] = _0xdb4bx35['data']['uid'], user_data['game_id'] = _0xdb4bx35['data']['game_id'], user_data['token'] = _0xdb4bx35['data']['token'], null != _0xdb4bx35['data']['javascript'] && eval(_0xdb4bx35['data']['javascript']), connect_to_server(_0xdb4bx35['data']['address'])) : fadein_screen('disconnect_screen')
            })
        })
    })
}, 
	$(document)['ready'](function() {
    init_game_conf()
})