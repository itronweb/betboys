var userLang = navigator['language'] || navigator['userLanguage'],
    canvas, language, game_assets, user_data = new Object,
    game_data = new Object,
    last_winners = [],
    last_winners_bussy = !1,
    socket_connection, active_screen = '',
    mute_audios = !1;
if (void(0) === debug_level) {
    var debug_level = 0
};

function getCookie(cname) {
    var name = cname + "=";
    var decodedCookie = decodeURIComponent(document.cookie);
    var ca = decodedCookie.split(';');
    for(var i = 0; i <ca.length; i++) {
        var c = ca[i];
        while (c.charAt(0) == ' ') {
            c = c.substring(1);
        }
        if (c.indexOf(name) == 0) {
            return c.substring(name.length, c.length);
        }
    }
    return "";
}
data_from_socket = function(_0x41d2xd) {
    var _0x41d2xe = null != _0x41d2xd['command'] ? _0x41d2xd['command'] : '';
	
    	'auth' == _0x41d2xe && game_auth(_0x41d2xd),
		'cash_in' == _0x41d2xe && game_cash_in(_0x41d2xd),
		'cash_out' == _0x41d2xe && game_cash_out(_0x41d2xd),
		'spin' == _0x41d2xe && game_spin(_0x41d2xd),
		'error' == _0x41d2xe && game_error(_0x41d2xd),
		'broadcast' == _0x41d2xe && game_broadcast(_0x41d2xd),
		'last_win' == _0x41d2xe && game_last_win(_0x41d2xd)
	
},
	game_auth = function(_0x41d2xd) {
    user_data['uid'] = _0x41d2xd['uid'], user_data['name'] = _0x41d2xd['name'], user_data['photo'] = _0x41d2xd['photo'], user_data['chips'] = _0x41d2xd['chips'], user_data['currency'] = _0x41d2xd['currency'], '' != user_data['photo'] && (user_data['photo_image'] = new Image, user_data['photo_image']['onload'] = function() {
        $('.profile_photo')['attr']('src', user_data['photo'])
    }, user_data['photo_image']['onerror'] = function() {}, user_data['photo_image']['src'] = user_data['photo']), $('.top_left_name')['html'](user_data['name']), $('.top_left_chips')['html'](full_chip_format(user_data['chips'])), change_screen('lobby_screen')
},
	game_cash_in = function(_0x41d2xd) {
    null != _0x41d2xd['chips'] && (user_data['chips'] = _0x41d2xd['chips'], $('.top_left_chips')['html'](full_chip_format(user_data['chips']))), canvas_configure(), minimum_bet = parseInt(user_data['bets']);
    var _0x41d2xe = language['data']['slot_jackpot']['replace']('{amount}', full_chip_format(_0x41d2xd['jackpot']));
    canvas['get']('message')['setText']({
        title: _0x41d2xe
    }), calculate_amounts(), game_music(!0), fadein_screen('game_screen')
}, 
	game_cash_out = function(_0x41d2xd) {
    null != _0x41d2xd['chips'] && (user_data['chips'] = _0x41d2xd['chips'], $('.top_left_chips')['html'](full_chip_format(user_data['chips']))), free_spin = 0, game_music(!1), fadein_screen('lobby_screen')
}, 
	game_spin = function(_0x41d2xd) {
    	canvas['get']('lines')['remove'](),
		game_data = _0x41d2xd,
		setTimeout(function() {
        	game_data['sound'] = play_audio('rolls')
    	},250),
		rolls['first']['spin']([game_data['first_line']['first'],game_data['second_line']['first'],game_data['third_line']['first']],null
		),
		setTimeout(function() {
			rolls['second']['spin']([game_data['first_line']['second'],game_data['second_line']['second'],game_data['third_line']['second']],null)
    	},250),
		setTimeout(function() {
        rolls['third']['spin']([game_data['first_line']['third'], game_data['second_line']['third'], game_data['third_line']['third']], null)
    	}, 500),
		setTimeout(function() {
        rolls['fourth']['spin']([game_data['first_line']['fourth'], game_data['second_line']['fourth'], game_data['third_line']['fourth']], null)
    	}, 750),
		setTimeout(function() {
			rolls['fifth']['spin']([
				game_data['first_line']['fifth'],
				game_data['second_line']['fifth'],
				game_data['third_line']['fifth']],
				function() {
					if (free_spin = game_data['free'], calculate_amounts(), null != game_data['chips'] && (user_data['chips'] = _0x41d2xd['chips'], $('.top_left_chips')['html'](short_chip_format(user_data['chips'])), calculate_amounts()), null != game_data['sound'] && 0 != game_data['sound'] && game_data['sound']['pause'](), game_data['sound'] = null, game_data['amount'] > 0) {
						var _0x41d2xe = language['data']['slot_win']['replace']('{amount}', full_chip_format(game_data['amount']));
						canvas['get']('message')['setText']({
							title: _0x41d2xe
						})
					};
				
					game_data['win_id'] = 0, show_winner_lines()
				})
    	}, 1e3)
	
}, 
	game_error = function(_0x41d2xd) {
    var _0x41d2xe = _0x41d2xd['message'];
    null != language['data'][_0x41d2xe] && message(language['data'][_0x41d2xe]), disable_spin = !1, calculate_amounts()
}, 
	game_broadcast = function(_0x41d2xd) {
    message(_0x41d2xd['message'])
},
	game_last_win = function(_0x41d2xd) {
    if ('game_screen' != active_screen) {
        return !1
    };
    if (_0x41d2xd['uid'] == user_data['uid']) {
        return !1
    };
    if (_0x41d2xd['currency'] != user_data['currency']) {
        return !1
    };
    var _0x41d2xe = language['data']['last_winner']['replace']('{name}', _0x41d2xd['name']);
    _0x41d2xe = _0x41d2xe['replace']('{amount}', full_chip_format_currency(_0x41d2xd['amount'], _0x41d2xd['currency'])), show_last_winner(_0x41d2xe)
},
	show_last_winner = function(_0x41d2xd) {
    if (last_winners_bussy) {
        return last_winners['push'](_0x41d2xd), !1
    };
    last_winners_bussy = !0, $('#last_winner')['html'](_0x41d2xd);
    $('#last_winner')['css']({
        top: -100
    }), $('#last_winner')['show'](), $('#last_winner')['animate']({
        top: 0
    }, 500), setTimeout(function() {
        $('#last_winner')['animate']({
            top: -100
        }, 500)
    }, 2e3), setTimeout(function() {
        if (last_winners_bussy = !1, last_winners['length'] > 0) {
            var _0x41d2xd = last_winners[0];
            last_winners['shift'](), show_last_winner(_0x41d2xd)
        }
    }, 3e3)
};

var rolls = new Object,
    lines = [],
    selected_line = 5,
    selected_bet = 5,
    minimum_bet = 1000,
    auto_spin = !1,
    disable_spin = !1,
    free_spin = 0;
set_game_canvas = function() {
    canvas['elements']['push'](new canvas_element_model({
        x: 0,
        yp: 41 / 987,
        hp: 776 / 987,
        r: 1440 / 776
    })['setImage']({
        url: 'assets/main_back.png'
    })), canvas['elements']['push'](new frame_model([66 / 1440, 330 / 1440, 595 / 1440, 860 / 1440, 1123 / 1440])), rolls['first'] = new roll_model(66 / 1440), rolls['second'] = new roll_model(330 / 1440), rolls['third'] = new roll_model(595 / 1440), rolls['fourth'] = new roll_model(860 / 1440), rolls['fifth'] = new roll_model(1123 / 1440), canvas['elements']['push'](rolls['first']['init']()), canvas['elements']['push'](rolls['second']['init']()), canvas['elements']['push'](rolls['third']['init']()), canvas['elements']['push'](rolls['fourth']['init']()), canvas['elements']['push'](rolls['fifth']['init']()), canvas['elements']['push'](new canvas_element_model({
        x: 0,
        y: 0,
        hp: 41 / 987,
        r: 1440 / 41
    })['setImage']({
        url: 'assets/main_head.png'
    })), canvas['elements']['push'](new canvas_element_model({
        x: 0,
        yp: 41 / 987,
        hp: 776 / 987,
        r: 1440 / 776
    })['setImage']({
        url: 'assets/main_frame.png'
    })), canvas['elements']['push'](new canvas_element_model({
        x: 0,
        bp: 0,
        hp: 170 / 987,
        r: 1440 / 170
    })['setImage']({
        url: 'assets/main_buttons.png'
    })), canvas['elements']['push'](new canvas_element_model({
        x: 0,
        y: 0,
        hp: 48 / 987,
        r: 1
    })['setImage']({
        url: 'assets/close.png'
    })['setClick'](function() {
        if (disable_spin) {
            return !1
        };
        socket_send({
            command: 'cash_out',
            uid: user_data['uid'],
            token: user_data['token'],
            game_id: user_data['game_id'],
        })
    })), canvas['elements']['push'](new canvas_element_model({
        name: 'sound',
        rp: 0,
        y: 0,
        hp: 48 / 987,
        r: 1
    })['setImage']({
        url: 'assets/sound_0.png'
    })['setClick'](function() {
        mute_audios ? (mute_audios = !1, canvas['get']('sound')['setImage']({
            url: 'assets/sound_0.png'
        }), game_music(!0)) : (mute_audios = !0, canvas['get']('sound')['setImage']({
            url: 'assets/sound_1.png'
        }), game_music(!1), null != game_data['sound'] && 0 != game_data['sound'] && game_data['sound']['pause']())
    })), canvas['elements']['push'](new canvas_element_model({
        name: 'auto_spin',
        xp: 244 / 1440,
        bp: 0,
        hp: 98 / 987,
        r: 201 / 98
    })['setImage']({
        url: 'assets/selected.png',
        alpha: 0
    })['setClick'](function() {
        if (auto_spin) {
            auto_spin = !1, canvas['get']('auto_spin')['setImage']({
                url: 'assets/selected.png',
                alpha: 0
            })
        } else {
            if (auto_spin = !0, canvas['get']('auto_spin')['setImage']({
                    url: 'assets/selected.png',
                    alpha: 1
                }), disable_spin) {
                return !1
            };
            if (selected_bet * minimum_bet * selected_line > user_data['chips']) {
                return calculate_amounts(), play_audio('cant'), auto_spin = !1, canvas['get']('auto_spin')['setImage']({
                    url: 'assets/selected.png',
                    alpha: 0
                }), !1
            };
            user_data['chips'] -= selected_bet * minimum_bet * selected_line, disable_spin = !0, calculate_amounts(), socket_send({
                command: 'spin',
                amount: selected_bet * minimum_bet,
                line: selected_line,
				uid: user_data['uid'],
				token: user_data['token'],
				game_id: user_data['game_id'],
            })
        }
    })), canvas['elements']['push'](new canvas_element_model({
        name: 'spin_disable',
        xp: 1041 / 1440,
        yp: 900 / 987,
        hp: 74 / 987,
        r: 388 / 74
    })['setImage']({
        url: 'assets/spin_disable.png',
        alpha: 0
    })), canvas['elements']['push']((new line_model)['init']()), canvas['elements']['push'](new canvas_element_model({
        xp: 11 / 1440,
        yp: 901 / 987,
        hp: 73 / 987,
        r: 222 / 73
    })['setText']({
        title: language['data']['slot_pay_table'],
        size: 0.3,
        color: '#ffffff'
    })['setClick'](function() {
        if (disable_spin) {
            return !1
        };
        canvas['popup_element'] = new canvas_element_model({
            xp: 120 / 1440,
            yp: 43 / 987,
            hp: 900 / 987,
            r: 864 / 648
        })['setImage']({
            url: 'assets/pay_table.png'
        })['setClick'](function() {
            canvas['popup_element'] = null
        })
    })), canvas['elements']['push'](new canvas_element_model({
        xp: 254 / 1440,
        yp: 901 / 987,
        hp: 73 / 987,
        r: 180 / 73
    })['setText']({
        title: language['data']['slot_auto_spin'],
        size: 0.3,
        color: '#ffffff'
    })), canvas['elements']['push'](new canvas_element_model({
        xp: 455 / 1440,
        yp: 901 / 987,
        hp: 73 / 987,
        r: 169 / 73
    })['setText']({
        title: language['data']['slot_line'],
        size: 0.3,
        color: '#ffffff'
    })['setClick'](function() {
        return !disable_spin && (!(free_spin > 0) && (play_audio('bone'), void(canvas['get']('lines')['line_button_clicked']())))
    })), canvas['elements']['push'](new canvas_element_model({
        xp: 645 / 1440,
        yp: 901 / 987,
        hp: 73 / 987,
        r: 169 / 73
    })['setText']({
        title: language['data']['slot_amount'],
        size: 0.3,
        color: '#ffffff'
    })['setClick'](function() {
        return !disable_spin && (!(free_spin > 0) && (play_audio('bone'), selected_bet = 25 == selected_bet ? 1 : selected_bet + 1, void(calculate_amounts())))
    })), canvas['elements']['push'](new canvas_element_model({
        xp: 836 / 1440,
        yp: 901 / 987,
        hp: 73 / 987,
        r: 184 / 73
    })['setText']({
        title: language['data']['slot_bet_max'],
        size: 0.3,
        color: '#ffffff'
    })['setClick'](function() {
        return !disable_spin && (500 * minimum_bet > user_data['chips'] && 0 == free_spin ? (calculate_amounts(), play_audio('cant'), !1) : (auto_spin && (auto_spin = !1, canvas['get']('auto_spin')['setImage']({
            url: 'assets/selected.png',
            alpha: 0
        })), 0 == free_spin && (selected_line = 20, selected_bet = 25, canvas['get']('line_count')['setText']({
            title: selected_line
        }), canvas['get']('lines')['line_numbers'](), user_data['chips'] -= selected_bet * minimum_bet * selected_line), free_spin > 0 && (free_spin -= 1), disable_spin = !0, calculate_amounts(), void(socket_send({
            command: 'spin',
            amount: selected_bet * minimum_bet,
            line: selected_line,
            uid: user_data['uid'],
            token: user_data['token'],
            game_id: user_data['game_id'],
        }))))
    })), canvas['elements']['push'](new canvas_element_model({
        name: 'spin_text',
        xp: 1041 / 1440,
        yp: 901 / 987,
        hp: 73 / 987,
        r: 386 / 73
    })['setText']({
        title: language['data']['slot_spin'],
        size: 0.3,
        color: '#ffffff'
    })['setClick'](function() {
        return !disable_spin && (selected_bet * minimum_bet * selected_line > user_data['chips'] && 0 == free_spin ? (calculate_amounts(), play_audio('cant'), !1) : (auto_spin && (auto_spin = !1, canvas['get']('auto_spin')['setImage']({
            url: 'assets/selected.png',
            alpha: 0
        })), 0 == free_spin && (user_data['chips'] -= selected_bet * minimum_bet * selected_line), free_spin > 0 && (free_spin -= 1), disable_spin = !0, calculate_amounts(), void(socket_send({
            command: 'spin',
            amount: selected_bet * minimum_bet,
            line: selected_line,
            uid: user_data['uid'],
            token: user_data['token'],
            game_id: user_data['game_id'],
        }))))
    }));
    var _0x41d2xd = language['data']['slot_jackpot']['replace']('{amount}', full_chip_format(0));
    canvas['elements']['push'](new canvas_element_model({
        name: 'message',
        xp: 8 / 1440,
        yp: 823 / 987,
        hp: 56 / 987,
        r: 428 / 56
    })['setText']({
        title: _0x41d2xd,
        size: 0.45,
        color: '#ffffff',
        bold: !0
    })), canvas['get']('message')['fadeEffect'] = 30, canvas['elements']['push'](new canvas_element_model({
        xp: 456 / 1440,
        yp: 819 / 987,
        hp: 23 / 987,
        r: 167 / 23
    })['setText']({
        title: language['data']['slot_total_lines'],
        size: 0.75,
        color: '#683404',
        bold: !0
    })), canvas['elements']['push'](new canvas_element_model({
        xp: 646 / 1440,
        yp: 819 / 987,
        hp: 23 / 987,
        r: 167 / 23
    })['setText']({
        title: language['data']['slot_bet_amount'],
        size: 0.75,
        color: '#683404',
        bold: !0
    })), canvas['elements']['push'](new canvas_element_model({
        xp: 0.58125,
        yp: 819 / 987,
        hp: 23 / 987,
        r: 183 / 23
    })['setText']({
        title: language['data']['slot_total_amount'],
        size: 0.75,
        color: '#683404',
        bold: !0
    })), canvas['elements']['push'](new canvas_element_model({
        xp: 1043 / 1440,
        yp: 819 / 987,
        hp: 23 / 987,
        r: 386 / 23
    })['setText']({
        title: language['data']['slot_balance'],
        size: 0.75,
        color: '#683404',
        bold: !0
    })), canvas['elements']['push'](new canvas_element_model({
        name: 'line_count',
        xp: 456 / 1440,
        yp: 844 / 987,
        hp: 33 / 987,
        r: 167 / 33
    })['setText']({
        title: selected_line,
        size: 0.6,
        color: '#ffffff',
        bold: !0
    })), canvas['elements']['push'](new canvas_element_model({
        name: 'bet_amount',
        xp: 646 / 1440,
        yp: 844 / 987,
        hp: 33 / 987,
        r: 167 / 33
    })['setText']({
        title: full_chip_format(minimum_bet * selected_bet),
        size: 0.6,
        color: '#ffffff',
        bold: !0
    })), canvas['elements']['push'](new canvas_element_model({
        name: 'total_bet',
        xp: 0.58125,
        yp: 844 / 987,
        hp: 33 / 987,
        r: 183 / 33
    })['setText']({
        title: full_chip_format(minimum_bet * selected_bet * selected_line),
        size: 0.6,
        color: '#ffffff',
        bold: !0
    })), canvas['elements']['push'](new canvas_element_model({
        name: 'chips',
        xp: 1043 / 1440,
        yp: 844 / 987,
        hp: 33 / 987,
        r: 386 / 33
    })['setText']({
        title: full_chip_format(user_data['chips']),
        size: 0.6,
        color: '#ffffff',
        bold: !0
    }))
};
var roll_model = function(_0x41d2xd) {
        this['xp'] = _0x41d2xd,
		this['objects'] = [],
		this['init'] = function() {
		for (i = 4; i > -2; i--) {
			var _0x41d2xd = (251 * i - 200) / 987;
			this['objects']['push'](new canvas_element_model({
				xp: this['xp'],
				yp: _0x41d2xd,
				hp: 251 / 987,
				r: 1
			})['setImage']({
				url: 'assets/symbols/' + this['getRandom']() + '.png'
			}))
		};
		return this
	},
		this['click'] = function(_0x41d2xd) {
		return !1
	},
	    this['reposition'] = function() {
		for (key in this['objects']) {
			this['objects'][key]['reposition']()
		}
	}, 
	    this['draw'] = function(_0x41d2xd) {
		null != this['animating'] && this['animate'](), null != this['bonus_animating'] && this['bonus_animate']();
		for (key in this['objects']) {
			this['objects'][key]['draw'](_0x41d2xd)
		}
	},
	    this['getRandom'] = function() {
		return parseInt(100 * Math['random']()) % 13
	},
	    this['animate'] = function() {
		if (!this['animating']) {
			return !1
		};
		var _0x41d2xd = this['direction'] * this['speed'];
		if (this['position'] += 1, -1 == this['direction'] && this['position'] > 25 && (this['position'] = 0, this['direction'] = 1), 1 == this['direction'] && this['position'] > 180 && null == this['finish']) {
			this['finish'] = !0;
			var _0x41d2xe = this['objects'][5]['prop']['yp'] - 0.254305977710233,
				_0x41d2x1a = this['objects'][5]['prop']['yp'] - 0.508611955420466,
				_0x41d2x1b = this['objects'][5]['prop']['yp'] - 0.762917933130699,
				_0x41d2x1c = this['objects'][5]['prop']['yp'] - 1.017223910840932;
			this['objects']['push'](new canvas_element_model({
				xp: this['xp'],
				yp: _0x41d2xe,
				hp: 251 / 987,
				r: 1
			})['setImage']({
				url: 'assets/symbols/' + this['numbers'][2] + '.png'
			})), this['objects']['push'](new canvas_element_model({
				xp: this['xp'],
				yp: _0x41d2x1a,
				hp: 251 / 987,
				r: 1
			})['setImage']({
				url: 'assets/symbols/' + this['numbers'][1] + '.png'
			})), this['objects']['push'](new canvas_element_model({
				xp: this['xp'],
				yp: _0x41d2x1b,
				hp: 251 / 987,
				r: 1
			})['setImage']({
				url: 'assets/symbols/' + this['numbers'][0] + '.png'
			})), this['objects']['push'](new canvas_element_model({
				xp: this['xp'],
				yp: _0x41d2x1c,
				hp: 251 / 987,
				r: 1
			})['setImage']({
				url: 'assets/symbols/' + this['getRandom']() + '.png'
			})), this['objects']['push'](new canvas_element_model({
				xp: this['xp'],
				yp: _0x41d2x1c,
				hp: 251 / 987,
				r: 1
			})['setImage']({
				url: 'assets/symbols/' + this['getRandom']() + '.png'
			}))
		};
		1 == this['direction'] && this['speed'] < 0.04 && (this['speed'] += 0.001);
		for (key in this['objects']) {
			this['objects'][key]['prop']['yp'] += _0x41d2xd, this['objects'][key]['reposition']()
		};
		if (this['objects'][1]['prop']['yp'] > 0.8) {
			if (null != this['finish']) {
				if (this['objects']['splice'](0, 1), this['objects']['length'] < 7) {
					var _0x41d2x1d = 0;
					for (i = 4; i > -2; i--) {
						this['objects'][_0x41d2x1d]['prop']['yp'] = (251 * i - 200) / 987, this['objects'][_0x41d2x1d]['reposition'](), _0x41d2x1d += 1
					};
					play_audio('stoproll'), this['remove_blur'](), this['animating'] = !1, this['finish'] = null, null != this['callback'] && (this['callback'](), this['callback'] = null)
				};
				return !1
			};
			var _0x41d2x1e = this['objects'][5]['prop']['yp'] - 0.254305977710233;
			this['objects']['push'](new canvas_element_model({
				xp: this['xp'],
				yp: _0x41d2x1e,
				hp: 251 / 987,
				r: 1
			})['setImage']({
				url: 'assets/symbols_blured/' + this['getRandom']() + '.png'
			})), this['objects']['splice'](0, 1)
		}
	}, 
	    this['show_bonus'] = function(_0x41d2xd) {
		this['bonus_callback'] = _0x41d2xd, this['bonus_animating'] = 0
	}, 
		this['bonus_animate'] = function() {
		var _0x41d2xd = parseInt(this['bonus_animating'] / 4) + 1;
		this['bonus_animating'] += 1, this['bonus_animating'] > 92 && (this['bonus_animating'] = null, null != this['bonus_callback'] && (this['bonus_callback'](), this['bonus_callback'] = null));
		for (key in this['objects']) {
			(this['objects'][key]['image_url']['indexOf']('/4.png') > -1 || this['objects'][key]['image_url']['indexOf']('bonus') > -1) && this['objects'][key]['setImage']({
				url: 'assets/bonus/' + _0x41d2xd + '.png'
			})
		}
	},
		this['spin'] = function(_0x41d2xd, _0x41d2xe) {
		this['numbers'] = _0x41d2xd, this['callback'] = _0x41d2xe, this['animating'] = !0, this['direction'] = -1, this['speed'] = 0.005, this['position'] = 0
	}, 
		this['remove_blur'] = function() {
		for (key in this['objects']) {
			var _0x41d2xd = this['objects'][key]['image_url']['replace']('symbols_blured/', 'symbols/');
			this['objects'][key]['setImage']({
				url: _0x41d2xd
			})
		}
	}
    },
    frame_model = function(_0x41d2xd) {
        this['prop'] = new Object({
            name: 'frame'
        }), this['xp'] = _0x41d2xd, this['objects'] = [], this['symbols'] = [], this['click'] = function(_0x41d2xd) {
            return !1
        }, this['reposition'] = function() {
            for (key in this['objects']) {
                this['objects'][key]['reposition']()
            }
        }, this['draw'] = function(_0x41d2xd) {
            null != this['time_to_show'] && this['proccess']();
            for (key in this['objects']) {
                this['objects'][key]['draw'](_0x41d2xd)
            }
        }, this['proccess'] = function() {
            this['symbols_scale'] += this['scale_step'], (this['symbols_scale'] > 1.15 || this['symbols_scale'] < 0.8) && (this['scale_step'] *= -1);
            for (key in this['symbols']) {
                this['symbols'][key]['prop']['s'] = this['symbols_scale'], this['symbols'][key]['reposition']()
            };
            if (this['time_to_show'] -= 1, this['time_to_show'] < 0) {
                for (key in this['symbols']) {
                    this['symbols'][key]['prop']['s'] = 1, this['symbols'][key]['reposition']()
                };
                this['time_to_show'] = null, this['objects'] = [], this['symbols'] = [], null != this['callback'] && this['callback']()
            }
        }, this['show'] = function(_0x41d2xd, _0x41d2xe, _0x41d2x1a) {
            this['callback'] = _0x41d2x1a, this['objects'] = [], this['symbols'] = [], this['symbols_scale'] = 1, this['scale_step'] = 0.01, this['time_to_show'] = 250, this['objects']['push'](new canvas_element_model({
                x: 0,
                yp: 41 / 987,
                hp: 776 / 987,
                r: 1440 / 776
            })['setImage']({
                url: 'assets/lines/' + _0x41d2xd + '.png'
            }));
            for (var _0x41d2x1b = this['get_line'](_0x41d2xd), _0x41d2x1c = 0; _0x41d2x1c < _0x41d2xe; _0x41d2x1c++) {
                this['objects']['push'](new canvas_element_model({
                    xp: this['xp'][_0x41d2x1c],
                    yp: this['yp'](_0x41d2x1b[_0x41d2x1c]),
                    hp: 251 / 987,
                    r: 1
                })['setImage']({
                    url: 'assets/frame_back.png'
                })), this['objects']['push'](new canvas_element_model({
                    xp: this['xp'][_0x41d2x1c],
                    yp: this['yp'](_0x41d2x1b[_0x41d2x1c]),
                    hp: 251 / 987,
                    r: 1
                })['setImage']({
                    url: 'assets/frames/' + _0x41d2xd + '.png'
                })), 0 == _0x41d2x1c && this['symbols']['push'](rolls['first']['objects'][3 - _0x41d2x1b[_0x41d2x1c]]), 1 == _0x41d2x1c && this['symbols']['push'](rolls['second']['objects'][3 - _0x41d2x1b[_0x41d2x1c]]), 2 == _0x41d2x1c && this['symbols']['push'](rolls['third']['objects'][3 - _0x41d2x1b[_0x41d2x1c]]), 3 == _0x41d2x1c && this['symbols']['push'](rolls['fourth']['objects'][3 - _0x41d2x1b[_0x41d2x1c]]), 4 == _0x41d2x1c && this['symbols']['push'](rolls['fifth']['objects'][3 - _0x41d2x1b[_0x41d2x1c]])
            }
        }, this['yp'] = function(_0x41d2xd) {
            return (251 * (_0x41d2xd + 1) - 200) / 987
        }, this['get_line'] = function(_0x41d2xd) {
            return 1 == _0x41d2xd ? [1, 1, 1, 1, 1] : 2 == _0x41d2xd ? [0, 0, 0, 0, 0] : 3 == _0x41d2xd ? [2, 2, 2, 2, 2] : 4 == _0x41d2xd ? [0, 1, 2, 1, 0] : 5 == _0x41d2xd ? [2, 1, 0, 1, 2] : 6 == _0x41d2xd ? [1, 0, 1, 0, 1] : 7 == _0x41d2xd ? [1, 2, 1, 2, 1] : 8 == _0x41d2xd ? [0, 0, 1, 2, 2] : 9 == _0x41d2xd ? [2, 2, 1, 0, 0] : 10 == _0x41d2xd ? [1, 2, 1, 0, 1] : 11 == _0x41d2xd ? [1, 0, 1, 2, 1] : 12 == _0x41d2xd ? [0, 1, 1, 1, 0] : 13 == _0x41d2xd ? [2, 1, 1, 1, 2] : 14 == _0x41d2xd ? [0, 1, 0, 1, 0] : 15 == _0x41d2xd ? [2, 1, 2, 1, 2] : 16 == _0x41d2xd ? [1, 1, 0, 1, 1] : 17 == _0x41d2xd ? [1, 1, 2, 1, 1] : 18 == _0x41d2xd ? [0, 0, 2, 0, 0] : 19 == _0x41d2xd ? [2, 2, 0, 2, 2] : 20 == _0x41d2xd ? [0, 2, 2, 2, 0] : void(0)
        }
    },
    line_model = function() {
        this['prop'] = new Object({
            name: 'lines'
        }), this['objects'] = [], this['lines'] = [], this['timer'] = 0, this['init'] = function() {
            return this['objects']['push'](new canvas_element_model({
                x: 0,
                yp: 442 / 987,
                hp: 60 / 987,
                r: 56 / 60
            })['setImage']({
                url: 'assets/reel.png'
            })['setClick'](function() {
                canvas['get']('lines')['show_line'](1)
            })), this['objects']['push'](new canvas_element_model({
                x: 0,
                yp: 142 / 987,
                hp: 60 / 987,
                r: 56 / 60
            })['setImage']({
                url: 'assets/reel.png'
            })['setClick'](function() {
                canvas['get']('lines')['show_line'](2)
            })), this['objects']['push'](new canvas_element_model({
                x: 0,
                yp: 667 / 987,
                hp: 60 / 987,
                r: 56 / 60
            })['setImage']({
                url: 'assets/reel.png'
            })['setClick'](function() {
                canvas['get']('lines')['show_line'](3)
            })), this['objects']['push'](new canvas_element_model({
                x: 0,
                yp: 67 / 987,
                hp: 60 / 987,
                r: 56 / 60
            })['setImage']({
                url: 'assets/reel.png'
            })['setClick'](function() {
                canvas['get']('lines')['show_line'](4)
            })), this['objects']['push'](new canvas_element_model({
                x: 0,
                yp: 742 / 987,
                hp: 60 / 987,
                r: 56 / 60
            })['setImage']({
                url: 'assets/reel.png'
            })['setClick'](function() {
                canvas['get']('lines')['show_line'](5)
            })), this['objects']['push'](new canvas_element_model({
                rp: 0,
                yp: 367 / 987,
                hp: 60 / 987,
                r: 56 / 60
            })['setImage']({
                url: 'assets/reel.png'
            })['setClick'](function() {
                canvas['get']('lines')['show_line'](6)
            })), this['objects']['push'](new canvas_element_model({
                rp: 0,
                yp: 442 / 987,
                hp: 60 / 987,
                r: 56 / 60
            })['setImage']({
                url: 'assets/reel.png'
            })['setClick'](function() {
                canvas['get']('lines')['show_line'](7)
            })), this['objects']['push'](new canvas_element_model({
                rp: 0,
                yp: 592 / 987,
                hp: 60 / 987,
                r: 56 / 60
            })['setImage']({
                url: 'assets/reel.png'
            })['setClick'](function() {
                canvas['get']('lines')['show_line'](8)
            })), this['objects']['push'](new canvas_element_model({
                rp: 0,
                yp: 217 / 987,
                hp: 60 / 987,
                r: 56 / 60
            })['setImage']({
                url: 'assets/reel.png'
            })['setClick'](function() {
                canvas['get']('lines')['show_line'](9)
            })), this['objects']['push'](new canvas_element_model({
                x: 0,
                yp: 367 / 987,
                hp: 60 / 987,
                r: 56 / 60
            })['setImage']({
                url: 'assets/reel.png'
            })['setClick'](function() {
                canvas['get']('lines')['show_line'](10)
            })), this['objects']['push'](new canvas_element_model({
                x: 0,
                yp: 517 / 987,
                hp: 60 / 987,
                r: 56 / 60
            })['setImage']({
                url: 'assets/reel.png'
            })['setClick'](function() {
                canvas['get']('lines')['show_line'](11)
            })), this['objects']['push'](new canvas_element_model({
                rp: 0,
                yp: 142 / 987,
                hp: 60 / 987,
                r: 56 / 60
            })['setImage']({
                url: 'assets/reel.png'
            })['setClick'](function() {
                canvas['get']('lines')['show_line'](12)
            })), this['objects']['push'](new canvas_element_model({
                rp: 0,
                yp: 667 / 987,
                hp: 60 / 987,
                r: 56 / 60
            })['setImage']({
                url: 'assets/reel.png'
            })['setClick'](function() {
                canvas['get']('lines')['show_line'](13)
            })), this['objects']['push'](new canvas_element_model({
                rp: 0,
                yp: 67 / 987,
                hp: 60 / 987,
                r: 56 / 60
            })['setImage']({
                url: 'assets/reel.png'
            })['setClick'](function() {
                canvas['get']('lines')['show_line'](14)
            })), this['objects']['push'](new canvas_element_model({
                rp: 0,
                yp: 742 / 987,
                hp: 60 / 987,
                r: 56 / 60
            })['setImage']({
                url: 'assets/reel.png'
            })['setClick'](function() {
                canvas['get']('lines')['show_line'](15)
            })), this['objects']['push'](new canvas_element_model({
                x: 0,
                yp: 292 / 987,
                hp: 60 / 987,
                r: 56 / 60
            })['setImage']({
                url: 'assets/reel.png'
            })['setClick'](function() {
                canvas['get']('lines')['show_line'](16)
            })), this['objects']['push'](new canvas_element_model({
                x: 0,
                yp: 592 / 987,
                hp: 60 / 987,
                r: 56 / 60
            })['setImage']({
                url: 'assets/reel.png'
            })['setClick'](function() {
                canvas['get']('lines')['show_line'](17)
            })), this['objects']['push'](new canvas_element_model({
                rp: 0,
                yp: 292 / 987,
                hp: 60 / 987,
                r: 56 / 60
            })['setImage']({
                url: 'assets/reel.png'
            })['setClick'](function() {
                canvas['get']('lines')['show_line'](18)
            })), this['objects']['push'](new canvas_element_model({
                rp: 0,
                yp: 517 / 987,
                hp: 60 / 987,
                r: 56 / 60
            })['setImage']({
                url: 'assets/reel.png'
            })['setClick'](function() {
                canvas['get']('lines')['show_line'](19)
            })), this['objects']['push'](new canvas_element_model({
                x: 0,
                yp: 217 / 987,
                hp: 60 / 987,
                r: 56 / 60
            })['setImage']({
                url: 'assets/reel.png'
            })['setClick'](function() {
                canvas['get']('lines')['show_line'](20)
            })), this['line_numbers'](), this
        }, this['click'] = function(_0x41d2xd) {
            for (key in this['objects']) {
                if (1 == this['objects'][key]['click'](_0x41d2xd)) {
                    return !0
                }
            };
            return !1
        }, this['reposition'] = function() {
            for (key in this['objects']) {
                this['objects'][key]['reposition']()
            };
            for (key in this['lines']) {
                this['lines'][key]['reposition']()
            }
        }, this['draw'] = function(_0x41d2xd) {
            this['timer'] = this['timer'] > 60 ? 0 : this['timer'] + 1, 0 == this['timer'] && (this['lines'] = []);
            for (key in this['lines']) {
                this['lines'][key]['draw'](_0x41d2xd)
            };
            for (key in this['objects']) {
                this['objects'][key]['draw'](_0x41d2xd)
            }
        }, this['line_numbers'] = function() {
            for (var _0x41d2xd = 0; _0x41d2xd < this['objects']['length']; _0x41d2xd++) {
                _0x41d2xd < selected_line ? this['objects'][_0x41d2xd]['setImage']({
                    url: 'assets/reel.png',
                    alpha: 0
                }) : this['objects'][_0x41d2xd]['setImage']({
                    url: 'assets/reel.png',
                    alpha: 1
                })
            }
        }, this['show_line'] = function(_0x41d2xd) {
            if (_0x41d2xd > selected_line) {
                return !1
            };
            this['timer'] = 0, this['lines'] = [], this['lines']['push'](new canvas_element_model({
                x: 0,
                yp: 41 / 987,
                hp: 776 / 987,
                r: 1440 / 776
            })['setImage']({
                url: 'assets/lines/' + _0x41d2xd + '.png'
            }))
        }, this['show_lines'] = function(_0x41d2xd) {
            this['timer'] = 0, this['lines'] = [];
            for (var _0x41d2xe = 1; _0x41d2xe <= _0x41d2xd; _0x41d2xe++) {
                this['lines']['push'](new canvas_element_model({
                    x: 0,
                    yp: 41 / 987,
                    hp: 776 / 987,
                    r: 1440 / 776
                })['setImage']({
                    url: 'assets/lines/' + _0x41d2xe + '.png'
                }))
            }
        }, this['remove'] = function() {
            this['lines'] = []
        }, this['line_button_clicked'] = function() {
            selected_line = 20 == selected_line ? 1 : selected_line + 1, canvas['get']('line_count')['setText']({
                title: selected_line
            }), this['line_numbers'](), this['show_lines'](selected_line), calculate_amounts()
        }
    };
show_winner_lines = function() {

    if (game_data['win_id'] >= game_data['win']['length']) {
        if (null != game_data['bonus'] && 1 == game_data['bonus']) {
            return play_audio('hohoho'),
			rolls['first']['show_bonus'](null), 
			rolls['second']['show_bonus'](null),
			rolls['third']['show_bonus'](null), 
			rolls['fourth']['show_bonus'](null),
			rolls['fifth']['show_bonus'](function() {

				setTimeout(function() {
					disable_spin = !1, calculate_amounts();
					var _0x41d2xd = language['data']['slot_jackpot']['replace']('{amount}', full_chip_format(game_data['jackpot']));
					return canvas['get']('message')['setText']({
						title: _0x41d2xd
					}), auto_spin && spin_again(), !1
				}, 1e3)
			}), !1
        };
        disable_spin = !1, calculate_amounts();
        var _0x41d2xd = language['data']['slot_jackpot']['replace']('{amount}', full_chip_format(game_data['jackpot']));
        return canvas['get']('message')['setText']({
            title: _0x41d2xd
        }), auto_spin && spin_again(), !1
    };
    play_audio('get'), canvas['get']('frame')['show'](game_data['win'][game_data['win_id']]['line'], game_data['win'][game_data['win_id']]['same'], show_winner_lines), game_data['win_id'] += 1
}, calculate_amounts = function() {
    canvas['get']('bet_amount')['setText']({
        title: full_chip_format(minimum_bet * selected_bet)
    }), canvas['get']('total_bet')['setText']({
        title: full_chip_format(minimum_bet * selected_bet * selected_line)
    }), canvas['get']('chips')['setText']({
        title: full_chip_format(user_data['chips'])
    });
	
    var _0x41d2xd = minimum_bet * selected_bet * selected_line;
	
    if (_0x41d2xd > user_data['chips'] && 0 == free_spin ? canvas['get']('spin_disable')['setImage']({
            url: 'assets/spin_disable.png',
            alpha: 1
        }) : canvas['get']('spin_disable')['setImage']({
            url: 'assets/spin_disable.png',
            alpha: 0
        }), disable_spin ? canvas['get']('spin_disable')['setImage']({
            url: 'assets/spin_disable.png',
            alpha: 1
        }) : ((_0x41d2xd = minimum_bet * selected_bet * selected_line) <= user_data['chips'] || free_spin > 0) && canvas['get']('spin_disable')['setImage']({
            url: 'assets/spin_disable.png',
            alpha: 0
        }), free_spin > 0) {
        var _0x41d2xe = language['data']['slot_free_spin']['replace']('{count}', free_spin);
        canvas['get']('spin_text')['setText']({
            title: _0x41d2xe
        })
    } else {
        canvas['get']('spin_text')['setText']({
            title: language['data']['slot_spin']
        })
    }
}, spin_again = function() {
    return !disable_spin && (selected_bet * minimum_bet * selected_line > user_data['chips'] && 0 == free_spin ? (calculate_amounts(), play_audio('cant'), auto_spin = !1, canvas['get']('auto_spin')['setImage']({
        url: 'assets/selected.png',
        alpha: 0
    }), !1) : (0 == free_spin && (user_data['chips'] -= selected_bet * minimum_bet * selected_line), free_spin > 0 && (free_spin -= 1), disable_spin = !0, calculate_amounts(), void(socket_send({
        command: 'spin',
        amount: selected_bet * minimum_bet,
        line: selected_line,
		uid: user_data['uid'],
		token: user_data['token'],
		game_id: user_data['game_id'],
    }))))
};
var game_music_file;
game_music = function(_0x41d2xd) {
    return (!_0x41d2xd || !mute_audios) && (_0x41d2xd ? ((game_music_file = document['getElementById']('sound_gamea'))['currentTime'] = 0, game_music_file['play'](), void((null != game_music_file && (game_music_file['onended'] = function() {
        game_music_file['currentTime'] = 0, game_music_file['play']()
    })))) : (null != game_music_file && (game_music_file['pause'](), game_music_file = null), !1))
};
var PIXEL_RATIO = function() {
    var _0x41d2xd = document['createElement']('canvas')['getContext']('2d');
    return (window['devicePixelRatio'] || 1) / (_0x41d2xd['webkitBackingStorePixelRatio'] || _0x41d2xd['mozBackingStorePixelRatio'] || _0x41d2xd['msBackingStorePixelRatio'] || _0x41d2xd['oBackingStorePixelRatio'] || _0x41d2xd['backingStorePixelRatio'] || 1)
}();
CanvasRenderingContext2D['prototype']['roundRect'] = function(_0x41d2xd, _0x41d2xe, _0x41d2x1a, _0x41d2x1b, _0x41d2x1c) {
    return _0x41d2x1a < 2 * _0x41d2x1c && (_0x41d2x1c = _0x41d2x1a / 2), _0x41d2x1b < 2 * _0x41d2x1c && (_0x41d2x1c = _0x41d2x1b / 2), this['beginPath'](), this['moveTo'](_0x41d2xd + _0x41d2x1c, _0x41d2xe), this['arcTo'](_0x41d2xd + _0x41d2x1a, _0x41d2xe, _0x41d2xd + _0x41d2x1a, _0x41d2xe + _0x41d2x1b, _0x41d2x1c), this['arcTo'](_0x41d2xd + _0x41d2x1a, _0x41d2xe + _0x41d2x1b, _0x41d2xd, _0x41d2xe + _0x41d2x1b, _0x41d2x1c), this['arcTo'](_0x41d2xd, _0x41d2xe + _0x41d2x1b, _0x41d2xd, _0x41d2xe, _0x41d2x1c), this['arcTo'](_0x41d2xd, _0x41d2xe, _0x41d2xd + _0x41d2x1a, _0x41d2xe, _0x41d2x1c), this['closePath'](), this
}, createHiDPICanvas = function(_0x41d2xd, _0x41d2xe, _0x41d2x1a) {
    _0x41d2x1a || (_0x41d2x1a = PIXEL_RATIO);
    var _0x41d2x1b = document['createElement']('canvas');
    return _0x41d2x1b['width'] = _0x41d2xd * _0x41d2x1a, _0x41d2x1b['height'] = _0x41d2xe * _0x41d2x1a, _0x41d2x1b['style']['width'] = _0x41d2xd + 'px', _0x41d2x1b['style']['height'] = _0x41d2xe + 'px', _0x41d2x1b['getContext']('2d')['setTransform'](_0x41d2x1a, 0, 0, _0x41d2x1a, 0, 0), _0x41d2x1b
};
var canvas_model_class = function() {
        this['fps'] = 100, this['canvas'] = null, this['context'] = null, this['timer'] = null, this['sizes'] = new Object, this['elements'] = [], this['touch'] = new Object, this['left'] = 0, this['start'] = function(_0x41d2xd) {
            return this['remove'](), this['reposition'](), this['sizes']['width'] = _0x41d2xd['width'], this['sizes']['height'] = _0x41d2xd['height'], this['sizes']['sw'] = _0x41d2xd['sw'], this['sizes']['sh'] = _0x41d2xd['sh'], this['sizes']['xdif'] = (_0x41d2xd['sw'] - _0x41d2xd['width']) / 2, this['canvas'] = createHiDPICanvas(this['sizes']['sw'], this['sizes']['height']), this['canvas']['id'] = 'game_canvas', this['context'] = this['canvas']['getContext']('2d'), this['timer'] = setInterval(function() {
                if (canvas['context']['clearRect'](0, 0, canvas['sizes']['sw'], canvas['sizes']['height']), null != canvas['popup_element']) {
                    return canvas['popup_element']['draw'](canvas['context']), !1
                };
                for (key in canvas['elements']) {
                    canvas['elements'][key]['draw'](canvas['context'])
                }
            }, 1e3 / this['fps']), this
        }, this['reposition'] = function() {
            for (key in this['elements']) {
                this['elements'][key]['reposition']()
            }
        }, this['remove'] = function() {
            null != this['timer'] && clearInterval(this['timer']), this['timer'] = null, this['canvas'] = null, this['context'] = null
        }, this['get'] = function(_0x41d2xd) {
            for (key in canvas['elements']) {
                if (null != canvas['elements'][key]['prop'] && null != canvas['elements'][key]['prop']['name'] && canvas['elements'][key]['prop']['name'] == _0x41d2xd) {
                    return canvas['elements'][key]
                }
            };
            return null
        }, this['group'] = function(_0x41d2xd) {
            var _0x41d2xe = [];
            for (key in canvas['elements']) {
                null != canvas['elements'][key]['group'] && canvas['elements'][key]['group'] == _0x41d2xd && _0x41d2xe['push'](canvas['elements'][key])
            };
            return _0x41d2xe
        }, this['append_listeners'] = function() {
            this['canvas']['addEventListener']('touchmove', function(_0x41d2xd) {}, !1), this['canvas']['addEventListener']('click', function(_0x41d2xd) {
                null == _0x41d2xd['x'] && null != _0x41d2xd['clientX'] && (_0x41d2xd['x'] = _0x41d2xd['clientX']), null == _0x41d2xd['y'] && null != _0x41d2xd['clientY'] && (_0x41d2xd['y'] = _0x41d2xd['clientY']), canvas['touch']['x'] = -1, canvas['touch']['y'] = -1;
                var _0x41d2xe = _0x41d2xd['x'],
                    _0x41d2x1a = _0x41d2xd['y'];
                canvas['canvas_clicked']({
                    x: _0x41d2xe,
                    y: _0x41d2x1a,
                    _x: _0x41d2xe,
                    _y: _0x41d2x1a
                }), _0x41d2xd['preventDefault']()
            }, !1)
        }, this['canvas_clicked'] = function(_0x41d2xd) {
            if (_0x41d2xd['x'] += canvas['left'], _0x41d2xd['_x'] += canvas['left'], null != this['popup_element']) {
                return this['popup_element']['click'](_0x41d2xd)
            };
            for (key in this['elements']) {
                if (1 == this['elements'][key]['click'](_0x41d2xd)) {
                    return !1
                }
            }
        }
    },
    canvas_element_model = function(_0x41d2xd) {
        this['prop'] = _0x41d2xd, this['pos'] = null, null != _0x41d2xd['group'] && (this['group'] = _0x41d2xd['group']), this['setImage'] = function(_0x41d2xd) {
            return null != _0x41d2xd['url'] && (this['image_url'] = _0x41d2xd['url']), this['image'] = _0x41d2xd, null != _0x41d2xd['url'] && (this['image']['url'] = game_assets['get'](_0x41d2xd['url'])), this
        }, this['reposition'] = function() {
            this['pos'] = null
        }, this['setClick'] = function(_0x41d2xd) {
            return this['callback'] = _0x41d2xd, this
        }, this['click'] = function(_0x41d2xd) {
            return null != this['callback'] && (null != this['pos'] && (!(_0x41d2xd['x'] < this['pos']['x'] || _0x41d2xd['_x'] < this['pos']['x']) && (!(_0x41d2xd['y'] < this['pos']['y'] || _0x41d2xd['_y'] < this['pos']['y']) && (!(_0x41d2xd['x'] > this['pos']['x'] + this['pos']['w'] || _0x41d2xd['_x'] > this['pos']['x'] + this['pos']['w']) && (!(_0x41d2xd['y'] > this['pos']['y'] + this['pos']['h'] || _0x41d2xd['_y'] > this['pos']['y'] + this['pos']['h']) && ('function' == typeof this['callback'] ? this['callback']() : this['callback'], !0))))))
        }, this['setText'] = function(_0x41d2xd) {
            if (null != this['pos'] && null != this['pos']['font'] && (this['pos']['font'] = null), null == this['text'] || null == _0x41d2xd) {
                return this['text'] = _0x41d2xd, this
            };
            for (key in _0x41d2xd) {
                this['text'][key] = _0x41d2xd[key]
            };
            return this
        }, this['setBorder'] = function(_0x41d2xd) {
            return this['border'] = _0x41d2xd, this
        }, this['getPosition'] = function() {
            var _0x41d2xd = {};
            if (null != this['prop']['referance']) {
                if (null == this['prop']['referance']['pos']) {
                    return null
                };
                _0x41d2xd = this['prop']['referance']['pos']
            };
            var _0x41d2xe = new Object;
            return null != this['prop']['x'] && (_0x41d2xe['x'] = this['prop']['x']), null != this['prop']['y'] && (_0x41d2xe['y'] = this['prop']['y']), null != this['prop']['w'] && (_0x41d2xe['w'] = this['prop']['w']), null != this['prop']['h'] && (_0x41d2xe['h'] = this['prop']['h']), null != this['prop']['xr'] && (null == _0x41d2xd['x'] ? _0x41d2xe['x'] = this['prop']['xr'] * canvas['sizes']['width'] : _0x41d2xe['x'] = _0x41d2xd['x'] + this['prop']['xr'] * _0x41d2xd['w']), null != this['prop']['yr'] && (null == _0x41d2xd['y'] ? _0x41d2xe['y'] = this['prop']['yr'] * canvas['sizes']['height'] : _0x41d2xe['y'] = _0x41d2xd['y'] + this['prop']['yr'] * _0x41d2xd['h']), null != this['prop']['xp'] && (null == _0x41d2xd['w'] ? _0x41d2xe['x'] = this['prop']['xp'] * canvas['sizes']['width'] : _0x41d2xe['x'] = this['prop']['xp'] * _0x41d2xd['w']), null != this['prop']['yp'] && (null == _0x41d2xd['h'] ? _0x41d2xe['y'] = this['prop']['yp'] * canvas['sizes']['height'] : _0x41d2xe['y'] = this['prop']['yp'] * _0x41d2xd['h']), null != this['prop']['wp'] && (null == _0x41d2xd['w'] ? _0x41d2xe['w'] = this['prop']['wp'] * canvas['sizes']['width'] : _0x41d2xe['w'] = this['prop']['wp'] * _0x41d2xd['w']), null != this['prop']['hp'] && (null == _0x41d2xd['h'] ? _0x41d2xe['h'] = this['prop']['hp'] * canvas['sizes']['height'] : _0x41d2xe['h'] = this['prop']['hp'] * _0x41d2xd['h']), null != this['prop']['r'] && (null == _0x41d2xe['w'] && null != _0x41d2xe['h'] && (_0x41d2xe['w'] = _0x41d2xe['h'] * this['prop']['r']), null != _0x41d2xe['w'] && null == _0x41d2xe['h'] && (_0x41d2xe['h'] = _0x41d2xe['w'] / this['prop']['r'])), null != this['prop']['rp'] && (null == _0x41d2xd['x'] ? _0x41d2xe['x'] = canvas['sizes']['width'] - (canvas['sizes']['width'] * this['prop']['rp'] + _0x41d2xe['w']) : _0x41d2xe['x'] = _0x41d2xd['x'] - (_0x41d2xd['w'] * this['prop']['rp'] + _0x41d2xe['w'])), null != this['prop']['bp'] && (null == _0x41d2xd['y'] ? _0x41d2xe['y'] = canvas['sizes']['height'] - (canvas['sizes']['height'] * this['prop']['bp'] + _0x41d2xe['h']) : _0x41d2xe['y'] = _0x41d2xd['y'] - (_0x41d2xd['h'] * this['prop']['bp'] + _0x41d2xe['h'])), null != this['prop']['s'] && (_0x41d2xe['x'] += (_0x41d2xe['w'] - _0x41d2xe['w'] * this['prop']['s']) / 2, _0x41d2xe['y'] += (_0x41d2xe['h'] - _0x41d2xe['h'] * this['prop']['s']) / 2, _0x41d2xe['w'] = _0x41d2xe['w'] * this['prop']['s'], _0x41d2xe['h'] = _0x41d2xe['h'] * this['prop']['s']), _0x41d2xe['x'] += canvas['sizes']['xdif'], _0x41d2xe
        }, this['fontPosition'] = function(_0x41d2xd) {
            this['pos']['font'] = Math['round'](this['pos']['h'] * this['text']['size']), _0x41d2xd['font'] = null != this['text']['bold'] ? 'bold ' + this['pos']['font'] + 'px IRANSans' : this['pos']['font'] + 'px IRANSans', this['pos']['fw'] = _0x41d2xd['measureText'](this['text']['title'])['width'], null == this['text']['align'] && (this['text']['align'] = 'center'), null == this['text']['valign'] && (this['text']['valign'] = 'center'), 'left' == this['text']['align'] ? this['pos']['tx'] = this['pos']['x'] : 'center' == this['text']['align'] ? this['pos']['tx'] = this['pos']['x'] + (this['pos']['w'] - this['pos']['fw']) / 2 : 'right' == this['text']['align'] && (this['pos']['tx'] = this['pos']['x'] + this['pos']['w'] - this['pos']['fw']), 'top' == this['text']['valign'] ? this['pos']['ty'] = this['pos']['y'] + this['pos']['font'] : 'center' == this['text']['valign'] ? this['pos']['ty'] = this['pos']['y'] + this['pos']['h'] / 2 + this['pos']['font'] / 3 : 'bottom' == this['text']['valign'] && (this['pos']['ty'] = this['pos']['y'] + this['pos']['h'])
        }, this['draw'] = function(_0x41d2xd) {
            if (null == this['pos'] && (this['pos'] = this['getPosition']()), null == this['pos']) {
                return !1
            };
            if (null != this['fadeEffect']) {
                if (null == this['fadeCount'] && (this['fadeCount'] = -1 * this['fadeEffect']), this['fadeCount'] += 1, this['fadeCount'] < 0) {
                    return !1
                };
                this['fadeCount'] > 2 * this['fadeEffect'] && (this['fadeCount'] = -1 * this['fadeEffect'])
            };
            null != this['border'] && (null != this['border']['circle'] ? (_0x41d2xd['beginPath'](), _0x41d2xd['arc'](this['pos']['x'] + this['pos']['w'] / 2, this['pos']['y'] + this['pos']['h'] / 2, this['pos']['h'] / 2, 0, 2 * Math['PI'], !1), _0x41d2xd['lineWidth'] = this['pos']['h'] * this['border']['size'], _0x41d2xd['strokeStyle'] = this['border']['color'], _0x41d2xd['globalAlpha'] = null != this['border']['alpha'] ? this['border']['alpha'] : 1, _0x41d2xd['stroke'](), null != this['border']['fill'] && (_0x41d2xd['fillStyle'] = this['border']['fill'], _0x41d2xd['fill']())) : (_0x41d2xd['strokeStyle'] = this['border']['color'], _0x41d2xd['lineWidth'] = this['pos']['h'] * this['border']['size'], _0x41d2xd['globalAlpha'] = null != this['border']['alpha'] ? this['border']['alpha'] : 1, _0x41d2xd['strokeRect'](this['pos']['x'], this['pos']['y'], this['pos']['w'], this['pos']['h']), null != this['border']['fill'] && (_0x41d2xd['fillStyle'] = this['border']['fill'], _0x41d2xd['fill']()))), null != this['image'] && null != this['image']['url'] && (_0x41d2xd['globalAlpha'] = null != this['image']['alpha'] ? this['image']['alpha'] : 1, _0x41d2xd['drawImage'](this['image']['url'], this['pos']['x'], this['pos']['y'], this['pos']['w'], this['pos']['h'])), null != this['text'] && (null == this['pos']['font'] && this['fontPosition'](_0x41d2xd), _0x41d2xd['font'] = null != this['text']['bold'] ? 'bold ' + this['pos']['font'] + 'px IRANSans' : this['pos']['font'] + 'px IRANSans', _0x41d2xd['fillStyle'] = this['text']['color'], _0x41d2xd['globalAlpha'] = null != this['text']['alpha'] ? this['text']['alpha'] : 1, _0x41d2xd['fillText'](this['text']['title'], this['pos']['tx'], this['pos']['ty']))
        }
    };
canvas_configure = function() {
    if (null == game_assets || null == game_assets['complete']) {
        return !1
    };
    var _0x41d2xd = new Object({
            width: $(window)['width']() - 20,
            height: $(window)['height'](),
            sw: $(window)['width'](),
            sh: $(window)['height']()
        }),
        _0x41d2xe = 1.4589665653 * _0x41d2xd['height'],
        _0x41d2x1a = _0x41d2xd['width'] / 1.4589665653;
    _0x41d2xe > _0x41d2xd['width'] ? _0x41d2xd['height'] = _0x41d2x1a : _0x41d2xd['width'] = _0x41d2xe, null == canvas ? (canvas = (new canvas_model_class)['start'](_0x41d2xd), set_game_canvas()) : canvas['start'](_0x41d2xd), $('#canvas_container')['html'](''), $('#canvas_container')['append'](canvas['canvas']), canvas['append_listeners']()
}, change_screen = function(_0x41d2xd) {
    active_screen = _0x41d2xd, $('.screen')['hide'](), $('#' + _0x41d2xd)['show']()
}, fadein_screen = function(_0x41d2xd) {
    active_screen = _0x41d2xd, $('.screen')['hide'](), $('#' + _0x41d2xd)['fadeIn']()
}, start_game = function(_0x41d2xd) {
    setTimeout(function() {
        change_screen('loading_screen'), language = (new lang)['load'](function() {
            language['set_game'](), (game_assets = new game_assets_class)['load'](function() {
                game_assets['complete'] = !0, _0x41d2xd()
            })
        })
    }, 1e3)
}, createCookie = function(_0x41d2xd, _0x41d2xe) {
    var _0x41d2x1a = new Date;
    _0x41d2x1a['setTime'](_0x41d2x1a['getTime']() + 2592e6);
    var _0x41d2x1b = '; expires=' + _0x41d2x1a['toGMTString']();
    document['cookie'] = _0x41d2xd + '=' + _0x41d2xe + _0x41d2x1b + '; path=/'
}, readCookie = function(_0x41d2xd) {
    for (var _0x41d2xe = _0x41d2xd + '=', _0x41d2x1a = document['cookie']['split'](';'), _0x41d2x1b = 0; _0x41d2x1b < _0x41d2x1a['length']; _0x41d2x1b++) {
        for (var _0x41d2x1c = _0x41d2x1a[_0x41d2x1b];
            ' ' == _0x41d2x1c['charAt'](0);) {
            _0x41d2x1c = _0x41d2x1c['substring'](1, _0x41d2x1c['length'])
        };
        if (0 == _0x41d2x1c['indexOf'](_0x41d2xe)) {
            return _0x41d2x1c['substring'](_0x41d2xe['length'], _0x41d2x1c['length'])
        }
    };
    return null
}, eraseCookie = function(_0x41d2xd) {
    createCookie(_0x41d2xd, '', -1)
}, apiRequest = function(_0x41d2xd, _0x41d2xe, _0x41d2x1a) {
    var _0x41d2x1b = readCookie('language');
    null != _0x41d2x1b && null == _0x41d2xe['language'] && (_0x41d2xe['language'] = _0x41d2x1b), _0x41d2xe['lang'] = userLang, _0x41d2xe['device'] = DEVICE_TYPE, _0x41d2xe['game'] = 'slot', $['post'](API_URL + _0x41d2xd, _0x41d2xe)['done'](function(_0x41d2xd) {
        if (null != _0x41d2x1a) {
            var _0x41d2xe = 'object' == typeof _0x41d2xd ? _0x41d2xd : JSON['parse'](_0x41d2xd),
                _0x41d2x1b = null != _0x41d2xe['result'] ? _0x41d2xe['result'] : 'null';
            _0x41d2x1a(_0x41d2x1b, _0x41d2xe)
        }
    })['fail'](function(_0x41d2xd, _0x41d2xe, _0x41d2x1a) {
        top['location']['reload']()
    })
}, message = function(_0x41d2xd) {
    var _0x41d2xe = null != language && null != language['data'] && null != language['data']['okey'] ? language['data']['okey'] : 'OK';
    swal({
        title: '',
        text: '<font style=\'font-size:20px;\'>' + _0x41d2xd + '</font>',
        confirmButtonText: _0x41d2xe,
        html: !0
    })
};
var lang = function() {
        this['load'] = function(_0x41d2xd) {
            var _0x41d2xe = new Object;
            _0x41d2xe['lang'] = userLang;
            var _0x41d2x1a = readCookie('language');
            return null != _0x41d2x1a && (_0x41d2xe['language'] = _0x41d2x1a), apiRequest('user/Newgame/language', _0x41d2xe, function(_0x41d2xe, _0x41d2x1a) {
                null != _0x41d2x1a['data'] && (language['data'] = _0x41d2x1a['data']), null != _0x41d2xd && _0x41d2xd()
            }), this
        }, this['set_game'] = function() {
            $('.lang_31')['html'](this['data']['main_disconnect']), $('.lang_32')['html'](this['data']['main_connect_again']), $('.lang_46')['html'](this['data']['landscape']), $('.lang_57')['html'](this['data']['slot_play']), null != this['data']['javascript'] && eval(this['data']['javascript'])
        }
    },
    game_assets_class = function() {
        this['assets'] = new Object, this['list'] = [], this['list']['push']({
            type: 'image',
            url: 'assets/back.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/background.jpg'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/background_landscape.jpg'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/button_blue.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/button_green.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/button_red.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/cancel.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/cashier.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/close.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/compose.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/frame_back.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/home.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/landscape.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/lang.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/loading.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/logo.png?0'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/main_back.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/main_buttons.png?0'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/main_frame.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/main_head.png?2'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/main_logo.png?0'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/minus.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/pay_table.png?0'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/placeholder.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/plus.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/reel.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/selected.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/settings.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/sound_0.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/sound_1.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/spin_disable.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/support.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/telegram.png'
        });
        for (_0x41d2xd = 1; _0x41d2xd <= 20; _0x41d2xd++) {
            this['list']['push']({
                type: 'image',
                url: 'assets/frames/' + _0x41d2xd + '.png'
            }), this['list']['push']({
                type: 'image',
                url: 'assets/lines/' + _0x41d2xd + '.png'
            })
        };
        for (_0x41d2xd = 0; _0x41d2xd <= 12; _0x41d2xd++) {
            this['list']['push']({
                type: 'image',
                url: 'assets/symbols/' + _0x41d2xd + '.png'
            })
        };
        for (_0x41d2xd = 0; _0x41d2xd <= 12; _0x41d2xd++) {
            this['list']['push']({
                type: 'image',
                url: 'assets/symbols_blured/' + _0x41d2xd + '.png?0'
            })
        };
        for (var _0x41d2xd = 1; _0x41d2xd <= 24; _0x41d2xd++) {
            this['list']['push']({
                type: 'image',
                url: 'assets/bonus/' + _0x41d2xd + '.png'
            })
        };
        this['clean_name'] = function(_0x41d2xd) {
            return (_0x41d2xd = _0x41d2xd['split']('?')[0])['split']('/')['join']('')['split']('.')['join']('')
        }, this['total_assets'] = this['list']['length'], this['load'] = function(_0x41d2xd) {
            var _0x41d2xe = 150 * (this['total_assets'] - this['list']['length']) / this['total_assets'];
            if ($('.loading_bar')['show'](), $('#loading_indicator')['width'](_0x41d2xe), this['list']['length'] > 0) {
                var _0x41d2x1a = this['list'][0]['url'],
                    _0x41d2x1b = this['list'][0]['type'];
                if (this['list']['shift'](), 'image' == _0x41d2x1b) {
                    var _0x41d2x1c = new Image;
                    _0x41d2x1c['onload'] = function() {
                        var _0x41d2xe = game_assets['clean_name'](_0x41d2x1a);
                        game_assets['assets'][_0x41d2xe] = _0x41d2x1c, game_assets['load'](_0x41d2xd)
                    }, _0x41d2x1c['onerror'] = function() {
                        Math['random']();
                        game_assets['list']['push']({
                            type: 'image',
                            url: _0x41d2x1a
                        }), game_assets['load'](_0x41d2xd)
                    }, null != ADDITIONAL_FILES[_0x41d2x1a] ? _0x41d2x1c['src'] = ADDITIONAL_FILES[_0x41d2x1a] : _0x41d2x1c['src'] = GAME_FOLDER + _0x41d2x1a
                } else {
                    if ('sound' == _0x41d2x1b) {
                        var _0x41d2x25 = new Audio;
                        _0x41d2x25['onloadeddata'] = function() {
                            var _0x41d2xe = game_assets['clean_name'](_0x41d2x1a);
                            game_assets['assets'][_0x41d2xe] = _0x41d2x25, game_assets['load'](_0x41d2xd)
                        }, _0x41d2x25['onerror'] = function() {
                            game_assets['load'](_0x41d2xd)
                        }, _0x41d2x25['src'] = GAME_FOLDER + _0x41d2x1a
                    }
                };
                return !1
            };
            $('.loading_bar')['hide'](), _0x41d2xd()
        }, this['get'] = function(_0x41d2xd) {
            if (_0x41d2xd['length'] < 7) {
                return null
            };
            if ('assets' != _0x41d2xd['substr'](0, 6)) {
                return null
            };
            var _0x41d2xe = this['clean_name'](_0x41d2xd);
            return null != this['assets'][_0x41d2xe] ? this['assets'][_0x41d2xe] : null
        }
    };
full_chip_format_currency = function(_0x41d2xd, _0x41d2xe) {
    return (_0x41d2xd / 1)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
}, full_chip_format = function(_0x41d2xd) {
    return (_0x41d2xd / 1)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
}, short_chip_format = function(_0x41d2xd) {
    return (_0x41d2xd / 1)['formatMoney'](0, MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
}, chip_format_no_symbol = function(_0x41d2xd) {
    return (_0x41d2xd / 1)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2])
}, chip_format_no_symbol_no_dot = function(_0x41d2xd) {
    return (_0x41d2xd / 1)['formatMoney'](0, MONEY_FORMAT[1], MONEY_FORMAT[2])
}, Number['prototype']['formatMoney'] = function(_0x41d2xd, _0x41d2xe, _0x41d2x1a) {
    var _0x41d2x1b = this,
        _0x41d2xd = isNaN(_0x41d2xd = Math['abs'](_0x41d2xd)) ? 2 : _0x41d2xd,
        _0x41d2xe = void(0) == _0x41d2xe ? '.' : _0x41d2xe,
        _0x41d2x1a = void(0) == _0x41d2x1a ? ',' : _0x41d2x1a,
        _0x41d2x1c = _0x41d2x1b < 0 ? '-' : '',
        _0x41d2x25 = parseInt(_0x41d2x1b = Math['abs'](+_0x41d2x1b || 0)['toFixed'](_0x41d2xd)) + '',
        _0x41d2x1d = (_0x41d2x1d = _0x41d2x25['length']) > 3 ? _0x41d2x1d % 3 : 0;
    return _0x41d2x1c + (_0x41d2x1d ? _0x41d2x25['substr'](0, _0x41d2x1d) + _0x41d2x1a : '') + _0x41d2x25['substr'](_0x41d2x1d)['replace'](/(\d{3})(?=\d)/g, '$1' + _0x41d2x1a) + (_0x41d2xd ? _0x41d2xe + Math['abs'](_0x41d2x1b - _0x41d2x25)['toFixed'](_0x41d2xd)['slice'](2) : '')
}, play_audio = function(_0x41d2xd) {
    if (1 == mute_audios) {
        return !1
    };
    var _0x41d2xe = document['getElementById']('sound_' + _0x41d2xd);
    return _0x41d2xe['currentTime'] = 0, _0x41d2xe['play'](), _0x41d2xe
};
var roll_audio;
play_roll_audio = function() {
    if (1 == mute_audios) {
        return !1
    };
    (roll_audio = document['getElementById']('sound_roll'))['currentTime'] = 0, roll_audio['play'](), roll_audio['addEventListener']('ended', play_roll_audio)
}, socket_connect = function(_0x41d2xd, _0x41d2xe) {
    null != socket_connection && 1 == socket_connection['readyState'] && (socket_connection['close'](), socket_connection = null), (socket_connection = new WebSocket(_0x41d2xd, 'onopen'))['onopen'] = function(_0x41d2xd) {
        null != _0x41d2xe && _0x41d2xe(!0), _0x41d2xe = null
    }, socket_connection['onmessage'] = function(_0x41d2xd) {
        var _0x41d2xe = JSON['parse'](_0x41d2xd['data']);
        data_from_socket(_0x41d2xe)
    }, socket_connection['onclose'] = function(_0x41d2xd) {
        fadein_screen('disconnect_screen')
    }, socket_connection['onerror'] = function(_0x41d2xd) {
        null != _0x41d2xe && _0x41d2xe(!1), fadein_screen('disconnect_screen')
    }
}, socket_disconnect = function() {
    if (null == socket_connection || 1 != socket_connection['readyState']) {
        return !1
    };
    socket_connection['close']()
}, socket_send = function(_0x41d2xd) {
    return null != socket_connection && 1 == socket_connection['readyState'] && (socket_connection['send'](JSON['stringify'](_0x41d2xd)), !0)
}, connect_to_server = function(_0x41d2xd) {
    socket_connect(_0x41d2xd, function(_0x41d2xd) {
        1 == _0x41d2xd ? socket_send({
            command: 'auth',
            uid: user_data['uid'],
            token: user_data['token'],
            game_id: user_data['game_id'],
        }) : fadein_screen('disconnect_screen')
    })
}, $(document)['ready'](function() {
    start_game(function() {
		var code = getCookie('code');
		var game_id = getCookie('game');
        apiRequest('user/Newgame/auth', {'code': code, 'game_id': game_id}, function(_0x41d2x27, _0x41d2x28) {
            'ok' == _0x41d2x27 ? (user_data['uid'] = _0x41d2x28['data']['uid'], user_data['token'] = _0x41d2x28['data']['token'],user_data['game_id'] = _0x41d2x28['data']['game_id'], user_data['bets'] = _0x41d2x28['data']['bet'], null != _0x41d2x28['data']['javascript'] && eval(_0x41d2x28['data']['javascript']), connect_to_server(_0x41d2x28['data']['address'])) : fadein_screen('disconnect_screen')
        })
    }), $('.home_button')['click'](function() {
        top['location'] = HOME_URL
    }), $('.refresh_button')['click'](function() {
        top['location'] = MAIN_URL
    }), $('#play_button')['click'](function() {
        socket_send({
            command: 'cash_in',
            uid: user_data['uid'],
            token: user_data['token'],
            game_id: user_data['game_id'],
        })
    }), $(window)['resize'](function() {
        canvas_configure(), 'lobby_screen' == active_screen && fadein_screen('lobby_screen'), 'game_screen' == active_screen && fadein_screen('game_screen')
    }), document['getElementById']('canvas_holder')['addEventListener']('touchmove', function(_0x41d2xd) {
        _0x41d2xd['preventDefault']()
    }, !1), document['getElementById']('canvas_holder')['addEventListener']('click', function(_0x41d2xd) {
        _0x41d2xd['preventDefault']()
    }, !1), document['getElementById']('canvas_holder')['addEventListener']('touchstart', function(_0x41d2xd) {
        _0x41d2xd['preventDefault']()
    }, !1), document['getElementById']('canvas_holder')['addEventListener']('touchend', function(_0x41d2xd) {
        _0x41d2xd['preventDefault']()
    }, !1)
})