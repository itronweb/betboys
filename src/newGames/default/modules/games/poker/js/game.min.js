function createCookie(_0x366dx2, _0x366dx3) {
    var _0x366dx4 = new Date;
    _0x366dx4['setTime'](_0x366dx4['getTime']() + 2592e6);
    var _0x366dx5 = '; expires=' + _0x366dx4['toGMTString']();
    document['cookie'] = _0x366dx2 + '=' + _0x366dx3 + _0x366dx5 + '; path=/'
}

function readCookie(_0x366dx2) {
    for (var _0x366dx3 = _0x366dx2 + '=', _0x366dx4 = document['cookie']['split'](';'), _0x366dx5 = 0; _0x366dx5 < _0x366dx4['length']; _0x366dx5++) {
        for (var _0x366dx7 = _0x366dx4[_0x366dx5];
            ' ' == _0x366dx7['charAt'](0);) {
            _0x366dx7 = _0x366dx7['substring'](1, _0x366dx7['length'])
        };
        if (0 == _0x366dx7['indexOf'](_0x366dx3)) {
            return _0x366dx7['substring'](_0x366dx3['length'], _0x366dx7['length'])
        }
    };
    return null
}

function eraseCookie(_0x366dx2) {
    createCookie(_0x366dx2, '', -1)
}
var userLang = navigator['language'] || navigator['userLanguage'],
    language, tour_timer, tour_time = 0,
    tour_timer_element, tour_playing = !1;
if (void(0) === debug_level) {
    var debug_level = 0
};


function getCookie(cname) {
    var name = cname + "=";
    var decodedCookie = decodeURIComponent(document.cookie);
    var ca = decodedCookie.split(';');
    for(var i = 0; i <ca.length; i++) {
        var c = ca[i];
        while (c.charAt(0) == ' ') {
            c = c.substring(1);
        }
        if (c.indexOf(name) == 0) {
            return c.substring(name.length, c.length);
        }
    }
    return "";
}

alert_message = function(_0x366dx2) {
    var _0x366dx3 = null != language && null != language['data'] && null != language['data']['okey'] ? language['data']['okey'] : 'OK';
    swal({
        title: '',
        text: '<font style=\'font-size:20px;\'>' + _0x366dx2 + '</font>',
        confirmButtonText: _0x366dx3,
        html: !0
    })
}, apiRequest = function(_0x366dx2, _0x366dx3, _0x366dx4) {
    var _0x366dx5 = readCookie('language');
    null != _0x366dx5 && null == _0x366dx3['language'] && (_0x366dx3['language'] = _0x366dx5), _0x366dx3['lang'] = userLang, _0x366dx3['game'] = 'poker', $['post'](api_url + _0x366dx2, _0x366dx3)['done'](function(_0x366dx2) {
        if (null != _0x366dx4) {
            var _0x366dx3 = 'object' == typeof _0x366dx2 ? _0x366dx2 : JSON['parse'](_0x366dx2),
                _0x366dx5 = null != _0x366dx3['result'] ? _0x366dx3['result'] : 'null';
            _0x366dx4(_0x366dx5, _0x366dx3)
        }
    })['fail'](function(_0x366dx2, _0x366dx3, _0x366dx4) {
        top['location']['reload']()
    })
}, chat_screen_resize = function() {
    var _0x366dx2 = 0;
    if ($(window)['height']() > $(window)['width']()) {
        (_0x366dx3 = {
            "\x2D\x77\x65\x62\x6B\x69\x74\x2D\x74\x72\x61\x6E\x73\x66\x6F\x72\x6D": 'rotate(90deg)',
            "\x2D\x6D\x6F\x7A\x2D\x74\x72\x61\x6E\x73\x66\x6F\x72\x6D": 'rotate(90deg)',
            "\x2D\x6F\x2D\x74\x72\x61\x6E\x73\x66\x6F\x72\x6D": 'rotate(90deg)',
            "\x2D\x6D\x73\x2D\x74\x72\x61\x6E\x73\x66\x6F\x72\x6D": 'rotate(90deg)',
            transform: 'rotate(90deg)'
        })['height'] = $(window)['width'](), _0x366dx3['width'] = $(window)['height'](), _0x366dx3['left'] = ($(window)['width']() - $(window)['height']()) / 2, _0x366dx3['top'] = ($(window)['height']() - $(window)['width']()) / 2, $('#chat_screen')['css'](_0x366dx3), _0x366dx2 = _0x366dx3['height']
    } else {
        var _0x366dx3 = {
            "\x2D\x77\x65\x62\x6B\x69\x74\x2D\x74\x72\x61\x6E\x73\x66\x6F\x72\x6D": 'rotate(0deg)',
            "\x2D\x6D\x6F\x7A\x2D\x74\x72\x61\x6E\x73\x66\x6F\x72\x6D": 'rotate(0deg)',
            "\x2D\x6F\x2D\x74\x72\x61\x6E\x73\x66\x6F\x72\x6D": 'rotate(0deg)',
            "\x2D\x6D\x73\x2D\x74\x72\x61\x6E\x73\x66\x6F\x72\x6D": 'rotate(0deg)',
            transform: 'rotate(0deg)'
        };
        _0x366dx3['height'] = $(window)['height'](), _0x366dx3['width'] = $(window)['width'](), _0x366dx3['left'] = 0, _0x366dx3['top'] = 0, $('#chat_screen')['css'](_0x366dx3), _0x366dx2 = _0x366dx3['height']
    };
    MOBILE_DEVICE && (_0x366dx2 = parseInt(_0x366dx2) - $('#chat_table_text')['height'](), _0x366dx2 = 0.95 * parseInt(_0x366dx2), $('#chat_container')['height'](_0x366dx2))
};
var lang = function() {
    this['load'] = function(_0x366dx2) {
        var _0x366dx3 = new Object;
        _0x366dx3['lang'] = userLang;
        var _0x366dx4 = readCookie('language');
        return null != _0x366dx4 && (_0x366dx3['language'] = _0x366dx4), apiRequest('user/casino/language', _0x366dx3, function(_0x366dx3, _0x366dx4) {
            null != _0x366dx4['data'] && (language['data'] = _0x366dx4['data']), null != _0x366dx2 && _0x366dx2()
        }), this
    }, this['set_game'] = function() {
        $('.lang_17')['html'](this['data']['main_disconnect']), $('.lang_18')['val'](this['data']['main_connect_again']), $('.lang_20')['html'](this['data']['ts_bets']), $('.lang_21')['html'](this['data']['ts_min_max']), $('.lang_22')['html'](this['data']['ts_user']), $('.lang_23')['html'](this['data']['st_sit']), $('.lang_24')['html'](this['data']['st_min']), $('.lang_25')['html'](this['data']['st_max']), $('.lang_26')['html'](this['data']['st_total']), $('.lang_27')['val'](this['data']['st_sit']), $('.lang_28')['val'](this['data']['chat_send']), $('.lang_47')['html'](this['data']['chat_send']), $('.lang_70')['html'](this['data']['friends_list']), $('.lang_75')['html'](this['data']['hide_empty'])
    }
};
data_from_socket = function(_0x366dx2) {
    var _0x366dx3 = null != _0x366dx2['command'] ? _0x366dx2['command'] : '';
    parse_game_parameters(_0x366dx2), 'auth' == _0x366dx3 && game_auth(_0x366dx2), 'table_details' == _0x366dx3 && game_table_details(_0x366dx2), 'leave_table' == _0x366dx3 && game_leave_table(_0x366dx2), 'tables' == _0x366dx3 && game_table_list(_0x366dx2), 'cash_out' == _0x366dx3 && game_cash_out(_0x366dx2), 'cash_in' == _0x366dx3 && game_cash_in(_0x366dx2), 'deal' == _0x366dx3 && game_deal(_0x366dx2), 'clean' == _0x366dx3 && game_clean(_0x366dx2), 'flop' == _0x366dx3 && game_flop(_0x366dx2), 'turn' == _0x366dx3 && game_turn(_0x366dx2), 'river' == _0x366dx3 && game_river(_0x366dx2), 'finish' == _0x366dx3 && game_finish(_0x366dx2), 'check' == _0x366dx3 && game_check(_0x366dx2), 'pass' == _0x366dx3 && game_pass(_0x366dx2), 'win' == _0x366dx3 && game_win(_0x366dx2), 'cards' == _0x366dx3 && game_cards(_0x366dx2), 'chat' == _0x366dx3 && game_chat(_0x366dx2), 'enter_table' == _0x366dx3 && game_enter_table(_0x366dx2), 'balance' == _0x366dx3 && game_balance(_0x366dx2), 'error' == _0x366dx3 && game_error(_0x366dx2), 'broadcast' == _0x366dx3 && game_broadcast(_0x366dx2), 'friends' == _0x366dx3 && show_friends_screen(_0x366dx2), 'tournament' == _0x366dx3 && game_tournament(_0x366dx2)
}, game_auth = function(_0x366dx2) {
    $('#loading_screen')['hide'](), user_data['uid'] = _0x366dx2['uid'], user_data['name'] = _0x366dx2['name'], user_data['shown'] = _0x366dx2['shown'], user_data['pending'] = _0x366dx2['pending'], user_data['photo'] = _0x366dx2['photo'], user_data['currency'] = _0x366dx2['currency'], user_data['currency_id'] = _0x366dx2['currency_id'], user_data['level'] = _0x366dx2['level'], user_data['friends'] = _0x366dx2['friends'], start_canvas()
}, game_table_details = function(_0x366dx2) {
    if (table_data = _0x366dx2, set_canvas_for_table(), null != _0x366dx2['type'] && 'tournament' == _0x366dx2['type']) {
        var _0x366dx3 = language['data']['poker_tournament']['replace']('{amount}', full_chip_format(_0x366dx2['tour_award']));
        MOBILE_DEVICE ? alert_message(_0x366dx3) : $('.pc_chat_container')['prepend']('<div class="pctd1text" style="color: #fffc00 !important; font-weight: bold;">' + _0x366dx3 + '</div>')
    }
}, game_leave_table = function(_0x366dx2) {
    _0x366dx2['uid'] == user_data['uid'] && (user_data['iamplaying'] = !1, user_data['myturn'] = !1, set_canvas_for_lobby(), 1 == return_to_table_list && (return_to_table_list = !1, $('.screen')['hide'](), $('#tables_screen')['show']()))
}, game_cash_out = function(_0x366dx2) {
    _0x366dx2['uid'] == user_data['uid'] && (user_data['shown'] = _0x366dx2['shown'], user_data['pending'] = _0x366dx2['pending'], user_data['iamplaying'] = !1, raise_dragger['close'](), socket_send({
        command: 'balance'
    })), table_canvas['getElement']('sit-' + _0x366dx2['position'])['setPlayer']({
        status: -1
    });
    var _0x366dx3 = language['data']['chat_left']['split']('{name}')['join']('<span>' + _0x366dx2['name'] + '</span>');
    _0x366dx3 = '<font color=\'#EF4343\'>' + _0x366dx3 + '</font>', add_to_chat(_0x366dx3)
}, game_cash_in = function(_0x366dx2) {
    _0x366dx2['uid'] == user_data['uid'] && (user_data['iamplaying'] = !0), table_canvas['getElement']('sit-' + _0x366dx2['position'])['setPlayer']({
        status: 0,
        position: _0x366dx2['position'],
        uid: _0x366dx2['uid'],
        chip: _0x366dx2['amount'],
        shown: _0x366dx2['shown'],
        name: _0x366dx2['name'],
        photo: _0x366dx2['photo'],
        level: _0x366dx2['level'],
        pot: 0
    });
    var _0x366dx3 = language['data']['chat_join']['split']('{name}')['join']('<span>' + _0x366dx2['name'] + '</span>');
    _0x366dx3 = '<font color=\'#3EA3EA\'>' + _0x366dx3 + '</font>', add_to_chat(_0x366dx3)
}, game_deal = function(_0x366dx2) {
    play_audio('deal'), tour_playing && null != _0x366dx2['tour_time'] && (tour_time = _0x366dx2['tour_time']);
    for (key in _0x366dx2['players']) {
        var _0x366dx3 = table_canvas['getElement']('sit-' + _0x366dx2['players'][key]['position']),
            _0x366dx4 = _0x366dx2['players'][key]['chip'] + _0x366dx2['players'][key]['pot'],
            _0x366dx5 = _0x366dx2['players'][key]['chip'];
        _0x366dx3['setData']({
            status: _0x366dx2['players'][key]['status'],
            chip: _0x366dx2['players'][key]['chip'],
            pot: _0x366dx2['players'][key]['pot'],
            first_card: _0x366dx2['players'][key]['first_card'],
            second_card: _0x366dx2['players'][key]['second_card']
        }), _0x366dx4 != _0x366dx5 && _0x366dx3['chips']['setTextAnimation']({
            before: _0x366dx4,
            after: _0x366dx5,
            reset_pos: _0x366dx3['chips_back']
        })
    };
    var _0x366dx7 = table_canvas['getGroup']('sit');
    for (key in _0x366dx7) {
        _0x366dx7[key]['dealer_sembol']['visible'] = !1, null != _0x366dx7[key]['player_data']['position'] && _0x366dx7[key]['player_data']['position'] == _0x366dx2['dealer'] && (_0x366dx7[key]['dealer_sembol']['visible'] = !0)
    };
    var _0x366dx11 = null != _0x366dx2['turn'] ? _0x366dx2['turn'] : -1;
    game_change_turn(_0x366dx11)
}, game_clean = function(_0x366dx2) {
    var _0x366dx3 = table_canvas['getGroup']('flop');
    for (key in _0x366dx3) {
        _0x366dx3[key]['visible'] = !1
    };
    var _0x366dx4 = table_canvas['getGroup']('sit');
    for (s_key in _0x366dx4) {
        var _0x366dx5 = -1;
        for (u in _0x366dx2['players']) {
            if (s_key == _0x366dx2['players'][u]['position']) {
                _0x366dx5 = _0x366dx2['players'][u]['chip'];
                break
            }
        };
        _0x366dx5 > -1 && _0x366dx4[s_key]['player_data']['status'] > -1 ? _0x366dx4[s_key]['setData']({
            status: 0,
            chip: _0x366dx5,
            pot: 0,
            first_card: null,
            second_card: null
        }) : _0x366dx4[s_key]['setData']({
            pot: 0,
            first_card: null,
            second_card: null
        })
    };
    var _0x366dx7 = table_canvas['getGroup']('flop');
    for (key in _0x366dx7) {
        _0x366dx7[key]['pos'] = null
    };
    var _0x366dx11 = table_canvas['getGroup']('pots');
    for (key in _0x366dx11) {
        _0x366dx11[key]['visible'] = !1, _0x366dx11[key]['pos'] = null
    };
    var _0x366dx12 = table_canvas['getGroup']('pots_back');
    for (key in _0x366dx12) {
        _0x366dx12[key]['visible'] = !1, _0x366dx12[key]['pos'] = null
    }
}, game_flop = function(_0x366dx2) {
    play_audio('card');
    for (key in _0x366dx2['cards']) {
        var _0x366dx3 = table_canvas['getElement']('flop-' + key),
            _0x366dx4 = _0x366dx2['cards'][key];
        _0x366dx3['setImage']('assets/cards/' + _0x366dx4 + '.png'), _0x366dx3['visible'] = !0, _0x366dx3['card_id'] = _0x366dx4
    };
    set_game_table_pots(_0x366dx2);
    var _0x366dx5 = null != _0x366dx2['turn'] ? _0x366dx2['turn'] : -1;
    game_change_turn(_0x366dx5)
}, game_turn = function(_0x366dx2) {
    play_audio('card');
    for (key in _0x366dx2['cards']) {
        var _0x366dx3 = table_canvas['getElement']('flop-3'),
            _0x366dx4 = _0x366dx2['cards'][key];
        _0x366dx3['setImage']('assets/cards/' + _0x366dx4 + '.png'), _0x366dx3['visible'] = !0, _0x366dx3['card_id'] = _0x366dx4
    };
    set_game_table_pots(_0x366dx2);
    var _0x366dx5 = null != _0x366dx2['turn'] ? _0x366dx2['turn'] : -1;
    game_change_turn(_0x366dx5)
}, game_river = function(_0x366dx2) {
    play_audio('card');
    for (key in _0x366dx2['cards']) {
        var _0x366dx3 = table_canvas['getElement']('flop-4'),
            _0x366dx4 = _0x366dx2['cards'][key];
        _0x366dx3['setImage']('assets/cards/' + _0x366dx4 + '.png'), _0x366dx3['visible'] = !0, _0x366dx3['card_id'] = _0x366dx4
    };
    set_game_table_pots(_0x366dx2);
    var _0x366dx5 = null != _0x366dx2['turn'] ? _0x366dx2['turn'] : -1;
    game_change_turn(_0x366dx5)
}, game_finish = function(_0x366dx2) {
    set_game_table_pots(_0x366dx2), null != _0x366dx2['cards'] && game_cards(_0x366dx2);
    var _0x366dx3 = null != _0x366dx2['turn'] ? _0x366dx2['turn'] : -1;
    game_change_turn(_0x366dx3)
}, game_check = function(_0x366dx2) {
    0 == _0x366dx2['amount'] ? play_audio('check') : play_audio('call');
    var _0x366dx3 = table_canvas['getElement']('sit-' + _0x366dx2['position']);
    if (null != _0x366dx3) {
        var _0x366dx4 = _0x366dx2['chip'] + _0x366dx2['pot'],
            _0x366dx5 = _0x366dx2['chip'];
        _0x366dx3['setData']({
            pot: _0x366dx2['pot'],
            chip: _0x366dx2['chip']
        }), _0x366dx4 != _0x366dx5 && _0x366dx2['amount'] > 0 && _0x366dx3['chips']['setTextAnimation']({
            before: _0x366dx4,
            after: _0x366dx5,
            reset_pos: _0x366dx3['chips_back']
        })
    };
    var _0x366dx7 = null != _0x366dx2['turn'] ? _0x366dx2['turn'] : -1;
    game_change_turn(_0x366dx7)
}, game_pass = function(_0x366dx2) {
    play_audio('fold');
    var _0x366dx3 = table_canvas['getElement']('sit-' + _0x366dx2['position']);
    if (null != _0x366dx3 && _0x366dx3['setData']({
            status: 1,
            chip: _0x366dx2['chip']
        }), null != _0x366dx2['turn']) {
        var _0x366dx4 = null != _0x366dx2['turn'] ? _0x366dx2['turn'] : -1;
        game_change_turn(_0x366dx4)
    }
}, game_win = function(_0x366dx2) {
    play_audio('win'), null != _0x366dx2['cards'] && game_cards(_0x366dx2);
    _0x366dx14 = table_canvas['getGroup']('sit');
    for (key in _0x366dx14) {
        _0x366dx14[key]['first_card']['pos'] = null, _0x366dx14[key]['second_card']['pos'] = null
    };
    var _0x366dx3 = table_canvas['getGroup']('flop');
    for (key in _0x366dx3) {
        _0x366dx3[key]['pos'] = null
    };
    if (setTimeout(function() {
            if (_0x366dx2['users_in_pot'] > 1) {
                var _0x366dx3 = [];
                for (k in _0x366dx2['list']) {
                    for (c in _0x366dx2['list'][k]['winner_cards']) {
                        var _0x366dx4 = _0x366dx2['list'][k]['winner_cards'][c];
                        for (l in _0x366dx3) {
                            _0x366dx3[l] == _0x366dx4 && (_0x366dx4 = -1)
                        }; - 1 != _0x366dx4 && _0x366dx3['push'](_0x366dx4)
                    }
                };
                for (wc in _0x366dx3) {
                    var _0x366dx5 = table_canvas['getGroup']('sit');
                    for (key in _0x366dx5) {
                        null != _0x366dx5[key]['player_data'] && null != _0x366dx5[key]['player_data']['first_card'] && null != _0x366dx5[key]['player_data']['second_card'] && null != _0x366dx5[key]['first_card']['pos'] && null != _0x366dx5[key]['second_card']['pos'] && (_0x366dx5[key]['player_data']['first_card'] == _0x366dx3[wc] && (_0x366dx5[key]['first_card']['pos']['y'] -= _0x366dx5[key]['first_card']['pos']['h'] / 4), _0x366dx5[key]['player_data']['second_card'] == _0x366dx3[wc] && (_0x366dx5[key]['second_card']['pos']['y'] -= _0x366dx5[key]['second_card']['pos']['h'] / 4))
                    };
                    var _0x366dx7 = table_canvas['getGroup']('flop');
                    for (key in _0x366dx7) {
                        null != _0x366dx7[key]['card_id'] && _0x366dx7[key]['card_id'] == _0x366dx3[wc] && (_0x366dx7[key]['pos']['y'] -= _0x366dx7[key]['pos']['h'] / 4)
                    }
                }
            }
        }, 50), _0x366dx2['users_in_pot'] > 1) {
        var _0x366dx4 = table_canvas['getElement']('winner-hand'),
            _0x366dx5 = table_canvas['getElement']('winner-hand-back');
        _0x366dx4['setText']({
            text: game_win_name(_0x366dx2['list'][0]['cards_score'])
        }), _0x366dx4['pos'] = null, _0x366dx5['pos'] = null, _0x366dx4['visible'] = !0, _0x366dx5['visible'] = !0
    };
    var _0x366dx7 = 0,
        _0x366dx11 = 0,
        _0x366dx13 = table_canvas['getElement']('sit-' + _0x366dx2['list'][0]['position']);
    if (null != _0x366dx13 && (_0x366dx7 = _0x366dx13['player_photo']['pos']['x'] + _0x366dx13['player_photo']['pos']['w'] / 4, _0x366dx11 = _0x366dx13['player_photo']['pos']['y'] + _0x366dx13['player_photo']['pos']['h'] / 4), 1 == _0x366dx2['users_in_pot']) {
        var _0x366dx14 = table_canvas['getGroup']('sit');
        for (key in _0x366dx14) {
            _0x366dx14[key]['pot']['setAnimation']({
                x: _0x366dx7,
                y: _0x366dx11,
                reset_pos: [_0x366dx14[key]['pot_back']]
            })
        }
    };
    var _0x366dx15 = table_canvas['getElement']('pot-' + _0x366dx2['pot_no']),
        _0x366dx16 = table_canvas['getElement']('pot-back' + _0x366dx2['pot_no']);
    if (1 == _0x366dx2['list']['length']) {
        _0x366dx15['setAnimation']({
            x: _0x366dx7,
            y: _0x366dx11,
            reset_pos: [_0x366dx16]
        })
    } else {
        _0x366dx15['visible'] = !1, _0x366dx16['visible'] = !1;
        var _0x366dx17 = table_canvas['getGroup']('fake-pots');
        for (key in _0x366dx17) {
            _0x366dx17[key]['visible'] = !1, _0x366dx17[key]['pos'] = null
        };
        for (key in _0x366dx2['list']) {
            if (null != (_0x366dx13 = table_canvas['getElement']('sit-' + _0x366dx2['list'][key]['position']))) {
                var _0x366dx18 = _0x366dx13['player_photo']['pos']['x'] + _0x366dx13['player_photo']['pos']['w'] / 4,
                    _0x366dx19 = _0x366dx13['player_photo']['pos']['y'] + _0x366dx13['player_photo']['pos']['h'] / 4,
                    _0x366dx1a = table_canvas['getElement']('fake-pot-' + key);
                _0x366dx1a['visible'] = !0, _0x366dx1a['setAnimation']({
                    x: _0x366dx18,
                    y: _0x366dx19
                })
            }
        }
    };
    setTimeout(function() {
        var _0x366dx3 = table_canvas['getGroup']('sit');
        for (key in _0x366dx3) {
            _0x366dx3[key]['pot']['visible'] = !1, _0x366dx3[key]['pot_back']['visible'] = !1, _0x366dx3[key]['pot']['pos'] = null, _0x366dx3[key]['pot_back']['pos'] = null
        };
        var _0x366dx4 = table_canvas['getGroup']('fake-pots');
        for (key in _0x366dx4) {
            _0x366dx4[key]['visible'] = !1, _0x366dx4[key]['pos'] = null
        };
        _0x366dx15['visible'] = !1, _0x366dx15['pos'] = null, _0x366dx16['visible'] = !1, _0x366dx16['pos'] = null;
        for (key in _0x366dx2['list']) {
            var _0x366dx5 = table_canvas['getElement']('sit-' + _0x366dx2['list'][key]['position']);
            _0x366dx5['chips']['setTextAnimation']({
                before: _0x366dx2['list'][key]['chip'] - _0x366dx2['list'][key]['amount'],
                after: _0x366dx2['list'][key]['chip'],
                reset_pos: _0x366dx5['chips_back']
            });
            var _0x366dx7 = language['data']['chat_win']['split']('{name}')['join']('<span>' + _0x366dx2['list'][key]['name'] + '</span>');
            _0x366dx7 = '<font color=\'#49D83F\'>' + (_0x366dx7 = _0x366dx7['split']('{amount}')['join']('<span>' + full_chip_format(_0x366dx2['list'][key]['amount']) + '</span>')) + '</font>', add_to_chat(_0x366dx7)
        }
    }, 200), setTimeout(function() {
        null != _0x366dx4 && (_0x366dx4['visible'] = !1, _0x366dx5['visible'] = !1, _0x366dx4['pos'] = null, _0x366dx5['pos'] = null)
    }, 2e3)
}, game_cards = function(_0x366dx2) {
    for (c in _0x366dx2['cards']) {
        var _0x366dx3 = table_canvas['getElement']('sit-' + _0x366dx2['cards'][c]['position']);
        null != _0x366dx3 && _0x366dx3['setData']({
            first_card: _0x366dx2['cards'][c]['first_card'],
            second_card: _0x366dx2['cards'][c]['second_card']
        })
    }
}, game_chat = function(_0x366dx2) {
    MOBILE_DEVICE ? ($('#chat_container')['append']('<div class="td1text"><span>' + _0x366dx2['name'] + ': </span>' + _0x366dx2['text'] + '</div>'), $('#chat_container')['prop']('scrollTop', $('#chat_container')['prop']('scrollHeight')), null != table_data['chat_open'] && 0 != table_data['chat_open'] || (table_canvas['getElement']('unread')['visible'] = !0)) : $('.pc_chat_container')['prepend']('<div class="pctd1text"><span>' + _0x366dx2['name'] + ':&nbsp;</span>' + _0x366dx2['text'] + '</div>')
}, add_to_chat = function(_0x366dx2) {
    MOBILE_DEVICE || $('.pc_chat_container')['prepend']('<div class="pctd1text">' + _0x366dx2 + '</div>')
}, game_enter_table = function(_0x366dx2) {}, game_balance = function(_0x366dx2) {
    if (user_data['name'] = _0x366dx2['name'], user_data['shown'] = _0x366dx2['shown'], user_data['pending'] = _0x366dx2['pending'], user_data['photo'] = _0x366dx2['photo'], 'lobby' == active_screen) {
        for (key in canvas_elements) {
            if (null != canvas_elements[key]['name'] && 'lobby_chips' == canvas_elements[key]['name']) {
                var _0x366dx3 = canvas_elements[key];
                _0x366dx3['setText']({
                    text: full_chip_format(user_data['shown'])
                }), _0x366dx3['pos'] = null
            }
        }
    }
}, game_error = function(_0x366dx2) {
    var _0x366dx3 = _0x366dx2['message'];
    null != language['data'][_0x366dx3] && alert_message(language['data'][_0x366dx3])
}, game_broadcast = function(_0x366dx2) {
    'chat' == _0x366dx2['type'] ? MOBILE_DEVICE ? ($('#chat_container')['append']('<div class="td1text" style="color: yellow !important; font-size: 18px; font-weight: bold;">' + _0x366dx2['message'] + '</div>'), $('#chat_container')['prop']('scrollTop', $('#chat_container')['prop']('scrollHeight')), null != table_data['chat_open'] && 0 != table_data['chat_open'] || (table_canvas['getElement']('unread')['visible'] = !0)) : $('.pc_chat_container')['prepend']('<div class="pctd1text" style="color: yellow !important; font-size: 18px; font-weight: bold;">' + _0x366dx2['message'] + '</div>') : alert_message(_0x366dx2['message'])
};
var return_to_table_list = !1;
game_table_list = function(_0x366dx2) {
    if ('lobby' != active_screen) {
        return !1
    };
    if (null == _0x366dx2['list']) {
        return !1
    };
    $('#table_list_container')['html'](''), _0x366dx2['list'] = _0x366dx2['list']['sort'](function(_0x366dx2, _0x366dx3) {
        return _0x366dx2['small'] == _0x366dx3['small'] ? _0x366dx2['user'] - _0x366dx3['user'] : _0x366dx2['small'] - _0x366dx3['small']
    });
    var _0x366dx3 = '';
    for (key in _0x366dx2['list']) {
        var _0x366dx4 = key % 2 == 1 ? ' black_back' : ' blue_back',
            _0x366dx5 = 'tournament' == _0x366dx2['list'][key]['type'] ? 'tournament' : 'table',
            _0x366dx7 = 'tournament' == _0x366dx2['list'][key]['type'] ? ' style=\'color: #fffc00 !important;\'' : '';
        _0x366dx3 = _0x366dx3 + '<div class="list_item ' + (0 == _0x366dx2['list'][key]['playing'] || '0' == _0x366dx2['list'][key]['playing'] ? 'empty_poker_table' : '') + ' table_list_click' + _0x366dx4 + '" data="' + _0x366dx2['list'][key]['id'] + '">	<div class="sub_title">		<div class="d1"><img src="' + game_folder + 'images/' + _0x366dx5 + '.png"></div>		<div class="d2"><table border="0"' + _0x366dx7 + '><tr><td>' + full_chip_format(_0x366dx2['list'][key]['small']) + ' </td><td>/</td><td> ' + full_chip_format(_0x366dx2['list'][key]['big']) + '</td></tr></table></div>		<div class="clear"></div>	</div>	<div class="sub_info2"><table border="0"' + _0x366dx7 + '><tr><td>' + short_chip_format(_0x366dx2['list'][key]['min_sit']) + ' </td><td>/</td><td> ' + short_chip_format(_0x366dx2['list'][key]['max_sit']) + '</td></tr></table></div>	<div class="sub_user2"' + _0x366dx7 + '>' + _0x366dx2['list'][key]['playing'] + ' / ' + _0x366dx2['list'][key]['user'] + '</div>	<div class="clear"></div></div>'
    };
    $('#table_list_container')['html'](_0x366dx3), $('.screen')['hide'](), $('#tables_screen')['show'](), $('#hideempty')['is'](':checked') ? $('.empty_poker_table')['addClass']('hidden') : $('.empty_poker_table')['removeClass']('hidden'), $('.table_list_click')['click'](function() {
        close_table_list(), return_to_table_list = !0;
        var _0x366dx2 = $(this)['attr']('data');
        socket_send({
            command: 'enter_table',
            id: _0x366dx2
        })
    })
}, game_change_turn = function(_0x366dx2) {
    raise_dragger['close'](), user_data['myturn'] = !1;
    var _0x366dx3 = table_canvas['getGroup']('sit');
    for (key in _0x366dx3) {
        _0x366dx3[key]['setTurn'](!1), null != _0x366dx3[key]['player_data']['position'] && _0x366dx3[key]['player_data']['position'] == _0x366dx2 && (_0x366dx3[key]['setTurn'](!0), _0x366dx3[key]['player_data']['uid'] == user_data['uid'] && (set_game_control_buttons(), user_data['myturn'] = !0, play_audio('turn')))
    }
}, set_game_table_pots = function(_0x366dx2) {
    var _0x366dx3 = table_canvas['getElement']('table_image'),
        _0x366dx4 = coordinates[0]['table_pot'],
        _0x366dx5 = _0x366dx3['pos']['x'] + (_0x366dx3['pos']['w'] * _0x366dx4['xpm'] - _0x366dx3['pos']['w'] * _0x366dx4['wp'] / 2),
        _0x366dx7 = _0x366dx3['pos']['y'] + (_0x366dx3['pos']['h'] * _0x366dx4['ypm'] - _0x366dx3['pos']['h'] * _0x366dx4['hp'] / 2),
        _0x366dx11 = !1,
        _0x366dx12 = table_canvas['getGroup']('sit');
    for (key in _0x366dx12) {
        0 == _0x366dx11 ? (_0x366dx11 = !0, _0x366dx12[key]['pot']['setAnimation']({
            x: _0x366dx5,
            y: _0x366dx7,
            reset_pos: [_0x366dx12[key]['pot_back']]
        }), setTimeout(function() {
            set_game_table_pots_complete(_0x366dx2)
        }, 200)) : _0x366dx12[key]['pot']['setAnimation']({
            x: _0x366dx5,
            y: _0x366dx7,
            reset_pos: [_0x366dx12[key]['pot_back']]
        })
    };
    0 == _0x366dx11 && set_game_table_pots_complete(_0x366dx2)
}, set_game_table_pots_complete = function(_0x366dx2) {
    var _0x366dx3 = table_canvas['getGroup']('sit');
    for (s_key in _0x366dx3) {
        _0x366dx3[s_key]['setData']({
            pot: 0
        }), _0x366dx3[s_key]['pot']['visible'] = !1, _0x366dx3[s_key]['pot']['pos'] = null, _0x366dx3[s_key]['pot_back']['visible'] = !1, _0x366dx3[s_key]['pot_back']['pos'] = null
    };
    var _0x366dx4 = table_canvas['getGroup']('pots');
    for (key in _0x366dx4) {
        _0x366dx4[key]['visible'] = !1
    };
    var _0x366dx5 = table_canvas['getGroup']('pots_back');
    for (key in _0x366dx5) {
        _0x366dx5[key]['visible'] = !1
    };
    for (key in _0x366dx2['pots']) {
        var _0x366dx7 = table_canvas['getElement']('pot-' + _0x366dx2['pots'][key]['no']),
            _0x366dx11 = table_canvas['getElement']('pot-back' + _0x366dx2['pots'][key]['no']);
        _0x366dx7['setText']({
            text: long_chip_format(_0x366dx2['pots'][key]['amount'])
        }), _0x366dx7['pos'] = null, _0x366dx11['pos'] = null, _0x366dx7['visible'] = !0, _0x366dx11['visible'] = !0
    }
}, parse_game_parameters = function(_0x366dx2) {
    null != _0x366dx2['check'] && (user_data['check'] = _0x366dx2['check']), null != _0x366dx2['raise'] && (user_data['raise'] = _0x366dx2['raise']), null != _0x366dx2['rest'] && (user_data['rest'] = _0x366dx2['rest'])
}, get_table_list = function() {
    $('.screen')['hide'](), $('#loading_screen')['show'](), socket_send({
        command: 'tables'
    })
}, close_table_list = function() {
    $('.screen')['hide'](), $('#main_container')['fadeIn']()
}, send_chat_message = function() {
    if (MOBILE_DEVICE) {
        _0x366dx2 = $('#chat_text_box')['val']();
        if ($('#chat_text_box')['val'](''), '' == _0x366dx2) {
            return !1
        };
        socket_send({
            command: 'chat',
            text: _0x366dx2
        })
    } else {
        var _0x366dx2 = $('#chat_text_box_pc')['val']();
        if ($('#chat_text_box_pc')['val'](''), '' == _0x366dx2) {
            return !1
        };
        socket_send({
            command: 'chat',
            text: _0x366dx2
        })
    }
};
var PIXEL_RATIO = function() {
    var _0x366dx2 = document['createElement']('canvas')['getContext']('2d');
    return (window['devicePixelRatio'] || 1) / (_0x366dx2['webkitBackingStorePixelRatio'] || _0x366dx2['mozBackingStorePixelRatio'] || _0x366dx2['msBackingStorePixelRatio'] || _0x366dx2['oBackingStorePixelRatio'] || _0x366dx2['backingStorePixelRatio'] || 1)
}();
CanvasRenderingContext2D['prototype']['roundRect'] = function(_0x366dx2, _0x366dx3, _0x366dx4, _0x366dx5, _0x366dx7) {
    return _0x366dx4 < 2 * _0x366dx7 && (_0x366dx7 = _0x366dx4 / 2), _0x366dx5 < 2 * _0x366dx7 && (_0x366dx7 = _0x366dx5 / 2), this['beginPath'](), this['moveTo'](_0x366dx2 + _0x366dx7, _0x366dx3), this['arcTo'](_0x366dx2 + _0x366dx4, _0x366dx3, _0x366dx2 + _0x366dx4, _0x366dx3 + _0x366dx5, _0x366dx7), this['arcTo'](_0x366dx2 + _0x366dx4, _0x366dx3 + _0x366dx5, _0x366dx2, _0x366dx3 + _0x366dx5, _0x366dx7), this['arcTo'](_0x366dx2, _0x366dx3 + _0x366dx5, _0x366dx2, _0x366dx3, _0x366dx7), this['arcTo'](_0x366dx2, _0x366dx3, _0x366dx2 + _0x366dx4, _0x366dx3, _0x366dx7), this['closePath'](), this
}, createHiDPICanvas = function(_0x366dx2, _0x366dx3, _0x366dx4) {
    _0x366dx4 || (_0x366dx4 = PIXEL_RATIO);
    var _0x366dx5 = document['createElement']('canvas');
    return _0x366dx5['width'] = _0x366dx2 * _0x366dx4, _0x366dx5['height'] = _0x366dx3 * _0x366dx4, _0x366dx5['style']['width'] = _0x366dx2 + 'px', _0x366dx5['style']['height'] = _0x366dx3 + 'px', _0x366dx5['getContext']('2d')['setTransform'](_0x366dx4, 0, 0, _0x366dx4, 0, 0), _0x366dx5
}, $(window)['resize'](function() {
    if ((sr = {
            width: $(window)['width'](),
            height: $(window)['height'](),
            orientation: 0
        })['height'] > sr['width'] && (sr = {
            width: $(window)['height'](),
            height: $(window)['width'](),
            orientation: 1
        }, $('#raise_panel')['hide']()), !MOBILE_DEVICE) {
        var _0x366dx2 = $('#pc_container')['width']();
        sr = {
            width: _0x366dx2,
            height: _0x366dx2 / 1.75,
            orientation: 0
        }
    };
    if (null != canvas) {
        $('#main_container')['html'](''), canvas = null, context = null, canvas = createHiDPICanvas(sr['width'], sr['height']), context = canvas['getContext']('2d'), $('#main_container')['append'](canvas), $('#main_container')['append'](pc_chat_panel()), append_listeners();
        for (key in canvas_elements) {
            canvas_elements[key]['reposition']()
        }
    }
});
var canvas, context, canvas_timer, canvas_elements = [],
    last_touch = {
        x: -1,
        y: -1
    },
    sr = {
        width: $(window)['width'](),
        height: $(window)['height'](),
        orientation: 0
    };
sr['height'] > sr['width'] && (sr = {
    width: $(window)['height'](),
    height: $(window)['width'](),
    orientation: 1
}), start_canvas = function() {
    canvas = createHiDPICanvas(sr['width'], sr['height']), context = canvas['getContext']('2d'), set_canvas_for_lobby(), $('#main_container')['hide'](), $('#main_container')['html'](''), $('#main_container')['append'](canvas), $('#main_container')['append'](pc_chat_panel()), $('.screen')['hide'](), $('#main_container')['fadeIn'](), append_listeners(), canvas_timer = setInterval(function() {
        canvas_update()
    }, 10)
}, delete_canvas = function() {
    $('#main_container')['hide'](), $('#main_container')['html'](''), clearInterval(canvas_timer), canvas_elements['splice'](0), context = null, canvas = null, canvas_timer = null
}, append_listeners = function() {
    canvas['addEventListener']('touchmove', function(_0x366dx2) {}, !1), canvas['addEventListener']('click', function(_0x366dx2) {
        last_touch['x'] = -1, last_touch['y'] = -1, null == _0x366dx2['pageY'] && (_0x366dx2['pageY'] = _0x366dx2['layerY']), null == _0x366dx2['x'] && (_0x366dx2['x'] = _0x366dx2['pageX']), canvas_clicked({
            x: _0x366dx2['x'],
            y: _0x366dx2['pageY'],
            _x: _0x366dx2['x'],
            _y: _0x366dx2['pageY']
        }), _0x366dx2['preventDefault']()
    }, !1), canvas['addEventListener']('touchstart', function(_0x366dx2) {
        last_touch['x'] = _0x366dx2['targetTouches'][0]['clientX'], last_touch['y'] = _0x366dx2['targetTouches'][0]['clientY'], null != _0x366dx2['touches'] & 1 == _0x366dx2['touches']['length'] && _0x366dx2['preventDefault']()
    }, !1), canvas['addEventListener']('touchend', function(_0x366dx2) {
        canvas_clicked({
            x: _0x366dx2['changedTouches'][0]['clientX'],
            y: _0x366dx2['changedTouches'][0]['clientY'],
            _x: last_touch['x'],
            _y: last_touch['y']
        }), last_touch['x'] = -1, last_touch['y'] = -1
    }, !1)
}, canvas_clicked = function(_0x366dx2) {
    if (1 == sr['orientation'] && (_0x366dx2 = {
            x: _0x366dx2['y'],
            _x: _0x366dx2['_y'],
            y: sr['height'] - _0x366dx2['x'],
            _y: sr['height'] - _0x366dx2['_x']
        }), !MOBILE_DEVICE) {
        var _0x366dx3 = ($(window)['width']() - $('#pc_container')['width']()) / 2;
        _0x366dx2['x'] -= _0x366dx3, _0x366dx2['_x'] -= _0x366dx3
    };
    for (key in canvas_elements) {
        if (1 == canvas_elements[key]['click'](_0x366dx2)) {
            return !1
        }
    }
}, canvas_update = function() {
    context['clearRect'](0, 0, canvas['width'], canvas['height']);
    for (key in canvas_elements) {
        canvas_elements[key]['draw'](context)
    }
}, canvas_constraint = function(_0x366dx2) {
    var _0x366dx3 = sr['width'],
        _0x366dx4 = sr['height'];
    null != _0x366dx2['referance'] && null != _0x366dx2['referance']['pos'] && (_0x366dx3 = _0x366dx2['referance']['pos']['w'], _0x366dx4 = _0x366dx2['referance']['pos']['h']);
    var _0x366dx5 = new Object;
    if (null != _0x366dx2['equalFontWidth']) {
        if (null == _0x366dx2['equalFontWidth']['pos'] || null == _0x366dx2['equalFontWidth']['pos']['fontWith']) {
            return null
        };
        _0x366dx5['w'] = _0x366dx2['equalFontWidth']['pos']['fontWith']
    };
    if (null != _0x366dx2['x'] && (_0x366dx5['x'] = _0x366dx2['x']), null != _0x366dx2['y'] && (_0x366dx5['y'] = _0x366dx2['y']), null != _0x366dx2['xp'] && (_0x366dx5['x'] = _0x366dx3 * _0x366dx2['xp']), null != _0x366dx2['yp'] && (_0x366dx5['y'] = _0x366dx4 * _0x366dx2['yp']), null != _0x366dx2['w'] && (_0x366dx5['w'] = _0x366dx2['w']), null != _0x366dx2['h'] && (_0x366dx5['h'] = _0x366dx2['h']), null != _0x366dx2['wp'] && (_0x366dx5['w'] = _0x366dx3 * _0x366dx2['wp']), null != _0x366dx2['hp'] && (_0x366dx5['h'] = _0x366dx4 * _0x366dx2['hp']), null != _0x366dx2['rate'] && (null == _0x366dx5['w'] && (_0x366dx5['w'] = _0x366dx5['h'] * _0x366dx2['rate']), null == _0x366dx5['h'] && (_0x366dx5['h'] = _0x366dx5['w'] / _0x366dx2['rate'])), null != _0x366dx2['wm'] && (_0x366dx5['w'] += _0x366dx2['wm']), null != _0x366dx2['hm'] && (_0x366dx5['h'] += _0x366dx2['hm']), null != _0x366dx2['max_width_p']) {
        var _0x366dx7 = _0x366dx2['max_width_p'] * _0x366dx3;
        _0x366dx5['w'] > _0x366dx7 && (_0x366dx5['h'] = _0x366dx5['h'] / (_0x366dx5['w'] / _0x366dx7), _0x366dx5['w'] = _0x366dx7)
    };
    if (null != _0x366dx2['max_height_p']) {
        var _0x366dx11 = _0x366dx2['max_height_p'] * _0x366dx4;
        _0x366dx5['h'] > _0x366dx11 && (_0x366dx5['w'] = _0x366dx5['w'] / (_0x366dx5['h'] / _0x366dx11), _0x366dx5['h'] = _0x366dx11)
    };
    return null != _0x366dx2['xpm'] && (_0x366dx5['x'] = _0x366dx3 * _0x366dx2['xpm'] - _0x366dx5['w'] / 2), null != _0x366dx2['ypm'] && (_0x366dx5['y'] = _0x366dx4 * _0x366dx2['ypm'] - _0x366dx5['h'] / 2), null != _0x366dx2['xm'] && (_0x366dx5['x'] += _0x366dx2['xm']), null != _0x366dx2['ym'] && (_0x366dx5['y'] += _0x366dx2['ym']), null != _0x366dx2['l'] && (_0x366dx5['x'] = _0x366dx5['l']), null != _0x366dx2['r'] && (_0x366dx5['x'] = _0x366dx3 - _0x366dx5['w'] - _0x366dx2['r']), null != _0x366dx2['t'] && (_0x366dx5['y'] = _0x366dx5['t']), null != _0x366dx2['b'] && (_0x366dx5['y'] = _0x366dx4 - _0x366dx5['h'] - _0x366dx2['b']), null != _0x366dx2['referance'] && null != _0x366dx2['referance']['pos'] && (_0x366dx5['x'] += _0x366dx2['referance']['pos']['x'], _0x366dx5['y'] += _0x366dx2['referance']['pos']['y']), _0x366dx5
}, canvas_text_constraint = function(_0x366dx2, _0x366dx3, _0x366dx4, _0x366dx5) {
    var _0x366dx7 = Math['round'](0.4 * _0x366dx4['h']);
    return _0x366dx2['font'] = _0x366dx7 + 'px Arial', 'left' == _0x366dx5 ? _0x366dx4['textX'] = _0x366dx4['x'] : 'center' == _0x366dx5 ? _0x366dx4['textX'] = _0x366dx4['x'] + (_0x366dx4['w'] - _0x366dx2['measureText'](_0x366dx3)['width']) / 2 : 'right' == _0x366dx5 && (_0x366dx4['textX'] = _0x366dx4['x'] + _0x366dx4['w'] - _0x366dx2['measureText'](_0x366dx3)['width']), _0x366dx4['fontWith'] = _0x366dx2['measureText'](_0x366dx3)['width'], _0x366dx4['textY'] = _0x366dx4['y'] + _0x366dx4['h'] - 0.9 * _0x366dx7, _0x366dx4['fontSize'] = _0x366dx7, _0x366dx4
}, canvas_element = function(_0x366dx2, _0x366dx3) {
    this['position'] = _0x366dx3, this['visible'] = !0, this['frame'] = -1, null != _0x366dx2['name'] && (this['name'] = _0x366dx2['name']), null != _0x366dx2['group'] && (this['group'] = _0x366dx2['group']), null != _0x366dx2['referance'] && (_0x366dx3['referance'] = _0x366dx2['referance']), null != _0x366dx2['visible'] && (this['visible'] = _0x366dx2['visible']), null != _0x366dx2['hideifiplay'] && (this['hideifiplay'] = _0x366dx2['hideifiplay']), null != _0x366dx2['hideifnotmyturn'] && (this['hideifnotmyturn'] = _0x366dx2['hideifnotmyturn']), null != _0x366dx2['left_image'] && (this['left_image'] = _0x366dx2['left_image']), null != _0x366dx2['placeholder'] && (this['placeholder'] = _0x366dx2['placeholder']), null != _0x366dx2['number_format'] && (this['number_format'] = _0x366dx2['number_format']), null != _0x366dx2['hideonpc'] && (this['hideonpc'] = _0x366dx2['hideonpc']), this['setImage'] = function(_0x366dx2) {
        return null != this['image_url'] && this['image_url'] == _0x366dx2 ? this : (this['image_url'] = _0x366dx2, this['image'] = game_assets['get'](_0x366dx2), null != this['image'] ? (this['image']['image_loaded'] = !0, this) : (this['image'] = new Image, this['image']['image_loaded'] = null, this['image']['onload'] = function() {
            this['image_loaded'] = !0
        }, this['image']['src'] = _0x366dx2, this))
    }, this['setImageFrame'] = function(_0x366dx2, _0x366dx3) {
        return null == this['image_url'] && this['setImage'](_0x366dx2), this['frame'] = _0x366dx3, this
    }, this['setPosition'] = function(_0x366dx2) {
        for (key in _0x366dx2) {
            this['position'][key] = _0x366dx2[key]
        };
        this['pos'] = null
    }, this['setClick'] = function(_0x366dx2) {
        return this['callback'] = _0x366dx2, this
    }, this['setText'] = function(_0x366dx2) {
        return null != this['text'] && this['text'] == _0x366dx2['text'] ? this : (this['pos'] = null, this['text'] = _0x366dx2['text'], null != _0x366dx2['color'] && (this['color'] = _0x366dx2['color']), null != _0x366dx2['align'] && (this['align'] = _0x366dx2['align']), this)
    }, this['setTextAnimation'] = function(_0x366dx2) {
        return null != _0x366dx2 && (null != _0x366dx2['before'] && null != _0x366dx2['after'] && (null == _0x366dx2['step'] && (_0x366dx2['step'] = 20), null != _0x366dx2['reset_pos'] && (this['textAnimationResetPos'] = _0x366dx2['reset_pos']), _0x366dx2['before'] != _0x366dx2['after'] && (null != _0x366dx2['complete'] && (this['textAnimationCallback'] = _0x366dx2['complete']), this['textAnimationDif'] = parseInt((_0x366dx2['after'] - _0x366dx2['before']) / _0x366dx2['step']), this['textAnimationAfter'] = _0x366dx2['after'], this['textAnimationNow'] = _0x366dx2['before'], void((0 == this['textAnimationDif'] && (this['textAnimationDif'] = null, this['textAnimationAfter'] = null, null != this['number_format'] ? 'full' == this['number_format'] ? this['text'] = full_chip_format(this['textAnimationNow']) : 'long' == this['number_format'] ? this['text'] = full_chip_format(this['textAnimationNow']) : this['text'] = this['textAnimationNow'] : this['text'] = this['textAnimationNow'], this['pos'] = null, null != this['textAnimationResetPos'] && (this['textAnimationResetPos']['pos'] = null), null != this['textAnimationCallback'] && this['textAnimationCallback'](), this['textAnimationNow'] = null, this['textAnimationResetPos'] = null, this['textAnimationCallback'] = null))))))
    }, this['setAnimation'] = function(_0x366dx2) {
        if (null == _0x366dx2) {
            return !1
        };
        if (null == _0x366dx2['x'] || null == _0x366dx2['y']) {
            return !1
        };
        if (null == _0x366dx2['step'] && (_0x366dx2['step'] = 20), null == this['pos']) {
            if (this['animation_try'] = null == this['animation_try'] ? 0 : this['animation_try'], this['animation_try']++ > 3) {
                return this['animation_try'] = null, !1
            };
            var _0x366dx3 = this;
            return setTimeout(function() {
                _0x366dx3['setAnimation'](_0x366dx2)
            }, 100), !1
        };
        var _0x366dx4 = this['pos']['x'],
            _0x366dx5 = this['pos']['y'];
        if (_0x366dx2['x'] == _0x366dx4 && _0x366dx2['y'] == _0x366dx5) {
            return !1
        };
        null != _0x366dx2['complete'] && (this['animationCallback'] = _0x366dx2['complete']), null != _0x366dx2['reset_pos'] && (this['animationResetPos'] = _0x366dx2['reset_pos']), this['xDif'] = (_0x366dx2['x'] - _0x366dx4) / _0x366dx2['step'], this['yDif'] = (_0x366dx2['y'] - _0x366dx5) / _0x366dx2['step'], this['xTarget'] = _0x366dx2['x'], this['yTarget'] = _0x366dx2['y'], this['xNow'] = _0x366dx4, this['yNow'] = _0x366dx5
    }, this['animate'] = function() {
        if (null != this['textAnimationNow'] && (this['textAnimationNow'] += this['textAnimationDif'], this['textAnimationDif'] < 0 ? this['textAnimationNow'] <= this['textAnimationAfter'] && (this['textAnimationNow'] = this['textAnimationAfter'], this['textAnimationAfter'] = null, this['textAnimationDif'] = null) : this['textAnimationNow'] >= this['textAnimationAfter'] && (this['textAnimationNow'] = this['textAnimationAfter'], this['textAnimationAfter'] = null, this['textAnimationDif'] = null), null != this['number_format'] ? 'full' == this['number_format'] ? this['text'] = full_chip_format(this['textAnimationNow']) : 'long' == this['number_format'] ? this['text'] = full_chip_format(this['textAnimationNow']) : this['text'] = this['textAnimationNow'] : this['text'] = this['textAnimationNow'], this['pos'] = null, null != this['textAnimationResetPos'] && (this['textAnimationResetPos']['pos'] = null), null == this['textAnimationDif'] && (null != this['textAnimationCallback'] && this['textAnimationCallback'](), this['textAnimationNow'] = null, this['textAnimationResetPos'] = null, this['textAnimationCallback'] = null)), null != this['xNow'] || null != this['yNow']) {
            if (this['xNow'] += this['xDif'], this['yNow'] += this['yDif'], (this['xDif'] < 0 && this['xNow'] < this['xTarget'] || this['xDif'] >= 0 && this['xNow'] > this['xTarget']) && (this['xDif'] < 0 && this['xNow'] < this['xTarget'] || this['xDif'] >= 0 && this['xNow'] > this['xTarget']) && (this['xNow'] = this['xTarget'], this['yNow'] = this['yTarget'], this['xTarget'] = null, this['yTarget'] = null, this['xDif'] = null, this['yDif'] = null), null != this['pos']) {
                if (null != this['pos']['fontSize'] && (this['pos']['fontSize'] = null), this['pos']['x'] = this['xNow'], this['pos']['y'] = this['yNow'], null != this['animationResetPos']) {
                    for (key in this['animationResetPos']) {
                        this['animationResetPos'][key]['pos'] = null
                    }
                }
            } else {
                this['xDif'] = null, this['yDif'] = null
            };
            null != this['xDif'] && null !== this['yDif'] || (null != this['animationCallback'] && this['animationCallback'](), this['xNow'] = null, this['yNow'] = null, this['animationCallback'] = null, this['animationResetPos'] = null, this['xDif'] = null, this['yDif'] = null)
        }
    }, this['setColor'] = function(_0x366dx2) {
        return this['fillColor'] = _0x366dx2['color'], this
    }, this['click'] = function(_0x366dx2) {
        return (null == this['hideifiplay'] || 1 != this['hideifiplay'] || 1 != user_data['iamplaying'] && !tour_playing) && ((null == this['hideifnotmyturn'] || 1 != this['hideifnotmyturn'] || 0 != user_data['myturn']) && (0 != this['visible'] && (null != this['callback'] && (null != this['pos'] && (!(_0x366dx2['x'] < this['pos']['x'] || _0x366dx2['_x'] < this['pos']['x']) && (!(_0x366dx2['y'] < this['pos']['y'] || _0x366dx2['_y'] < this['pos']['y']) && (!(_0x366dx2['x'] > this['pos']['x'] + this['pos']['w'] || _0x366dx2['_x'] > this['pos']['x'] + this['pos']['w']) && (!(_0x366dx2['y'] > this['pos']['y'] + this['pos']['h'] || _0x366dx2['_y'] > this['pos']['y'] + this['pos']['h']) && ('function' == typeof this['callback'] ? this['callback']() : this['callback'], !0)))))))))
    }, this['reposition'] = function() {
        this['pos'] = null
    }, this['draw'] = function(_0x366dx2) {
        if (this['animate'](), 0 == this['visible'] && null != this['hideifnotmyturn'] && 1 == user_data['myturn'] && (this['pos'] = canvas_constraint(this['position'])), null != this['hideonpc'] && 1 == this['hideonpc'] && !MOBILE_DEVICE) {
            return !1
        };
        if (null != this['hideifiplay'] && 1 == this['hideifiplay'] && (1 == user_data['iamplaying'] || tour_playing)) {
            return !1
        };
        if (null != this['hideifnotmyturn'] && 1 == this['hideifnotmyturn'] && 0 == user_data['myturn']) {
            return !1
        };
        if (0 == this['visible']) {
            return !1
        };
        if (null != this['pos'] && null == this['hideifnotmyturn'] || (this['pos'] = canvas_constraint(this['position'])), null == this['pos']) {
            return !1
        };
        if (null != this['image']) {
            if (null == this['image']['image_loaded']) {
                null != this['placeholder'] && null != (_0x366dx3 = game_assets['get'](this['placeholder'])) && _0x366dx2['drawImage'](_0x366dx3, this['pos']['x'], this['pos']['y'], this['pos']['w'], this['pos']['h'])
            } else {
                if (null != this['placeholder']) {
                    var _0x366dx3 = game_assets['get'](this['placeholder']);
                    null != _0x366dx3 && _0x366dx2['drawImage'](_0x366dx3, this['pos']['x'], this['pos']['y'], this['pos']['w'], this['pos']['h'])
                };
                if (this['frame'] > -1) {
                    if (_0x366dx2['save'](), _0x366dx2['beginPath'](), _0x366dx2['rect'](this['pos']['x'], this['pos']['y'], this['pos']['w'], this['pos']['h']), _0x366dx2['clip'](), 52 == this['frame']) {
                        var _0x366dx4 = this['pos']['x'],
                            _0x366dx5 = this['pos']['y'] - 13 * this['pos']['h']
                    } else {
                        var _0x366dx4 = this['pos']['x'] - parseInt(Math['floor'](this['frame'] / 13)) * this['pos']['w'],
                            _0x366dx5 = this['pos']['y'] - this['frame'] % 13 * this['pos']['h']
                    };
                    _0x366dx2['drawImage'](this['image'], _0x366dx4, _0x366dx5, 4 * this['pos']['w'], 14 * this['pos']['h']), _0x366dx2['restore']()
                } else {
                    _0x366dx2['drawImage'](this['image'], this['pos']['x'], this['pos']['y'], this['pos']['w'], this['pos']['h'])
                }
            }
        };
        if (null != this['left_image']) {
            var _0x366dx7 = game_assets['get'](this['left_image']);
            null != _0x366dx7 && _0x366dx2['drawImage'](_0x366dx7, this['pos']['x'] - 1.25 * this['pos']['h'], this['pos']['y'], this['pos']['h'], this['pos']['h'])
        };
        null != this['fillColor'] && (_0x366dx2['fillStyle'] = this['fillColor'], _0x366dx2['beginPath'](), _0x366dx2['roundRect'](this['pos']['x'], this['pos']['y'], this['pos']['w'], this['pos']['h'], 5), _0x366dx2['fill']()), null != this['text'] && (null == this['pos']['fontSize'] && (this['pos'] = canvas_text_constraint(_0x366dx2, this['text'], this['pos'], this['align'])), _0x366dx2['font'] = this['pos']['fontSize'] + 'px Arial', _0x366dx2['fillStyle'] = this['color'], _0x366dx2['fillText'](this['text'], this['pos']['textX'], this['pos']['textY']))
    }
};
var user_data = new Object({
        uid: '',
        token: '',
        access: '',
        name: '',
        shown: '',
        pending: '',
        photo: '',
        iamplaying: !1,
        myturn: !1,
        check: 0,
        rest: 0,
        raise: 0
    }),
    table_data, game_assets, coordinates = [{
        holder: {
            xp: 0.7139,
            yp: 0.1059
        },
        dealer: {
            xp: 0.7051,
            yp: 0.2947
        },
        pot: {
            xpm: 0.7348,
            ypm: 0.4652,
            wp: 0.132,
            hp: 0.0905
        },
        table_pot: {
            xpm: 0.4994,
            ypm: 0.6721,
            wp: 0.132,
            hp: 0.0905
        },
        flop: {
            xp: 0.3311,
            yp: 0.4644,
            wp: 0.07128,
            hp: 0.15492
        }
    }, {
        holder: {
            xp: 0.8943,
            yp: 0.3294
        },
        dealer: {
            xp: 0.8635,
            yp: 0.3907
        },
        pot: {
            xpm: 0.8184,
            ypm: 0.5314,
            wp: 0.132,
            hp: 0.0905
        },
        table_pot: {
            xpm: 0.6435,
            ypm: 0.6721,
            wp: 0.132,
            hp: 0.0905
        },
        flop: {
            xp: 0.4004,
            yp: 0.4644,
            wp: 0.07128,
            hp: 0.15492
        }
    }, {
        holder: {
            xp: 0.8712,
            yp: 0.7036
        },
        dealer: {
            xp: 0.876,
            yp: 0.6895
        },
        pot: {
            xpm: 0.8008,
            ypm: 0.692,
            wp: 0.132,
            hp: 0.0905
        },
        table_pot: {
            xpm: 0.3564,
            ypm: 0.6721,
            wp: 0.132,
            hp: 0.0905
        },
        flop: {
            xp: 0.4697,
            yp: 0.4644,
            wp: 0.07128,
            hp: 0.15492
        }
    }, {
        holder: {
            xp: 0.6787,
            yp: 0.8758
        },
        dealer: {
            xp: 0.7898,
            yp: 0.856
        },
        pot: {
            xpm: 0.7216,
            ypm: 0.7682,
            wp: 0.132,
            hp: 0.0905
        },
        table_pot: {
            xpm: 0.4994,
            ypm: 0.3774,
            wp: 0.132,
            hp: 0.0905
        },
        flop: {
            xp: 0.539,
            yp: 0.4644,
            wp: 0.07128,
            hp: 0.15492
        }
    }, {
        holder: {
            xp: 0.4279,
            yp: 0.8874
        },
        dealer: {
            xp: 0.5478,
            yp: 0.8675
        },
        pot: {
            xpm: 0.4994,
            ypm: 0.7682,
            wp: 0.132,
            hp: 0.0905
        },
        table_pot: {
            xpm: 0.6435,
            ypm: 0.3774,
            wp: 0.132,
            hp: 0.0905
        },
        flop: {
            xp: 0.6083,
            yp: 0.4644,
            wp: 0.07128,
            hp: 0.15492
        }
    }, {
        holder: {
            xp: 0.1782,
            yp: 0.8758
        },
        dealer: {
            xp: 0.3069,
            yp: 0.8675
        },
        pot: {
            xpm: 0.2783,
            ypm: 0.7682,
            wp: 0.132,
            hp: 0.0905
        },
        table_pot: {
            xpm: 0.3564,
            ypm: 0.3774,
            wp: 0.132,
            hp: 0.0905
        }
    }, {
        holder: {
            xp: -0.0132,
            yp: 0.7036
        },
        dealer: {
            xp: 0.1419,
            yp: 0.7729
        },
        pot: {
            xpm: 0.1991,
            ypm: 0.692,
            wp: 0.132,
            hp: 0.0905
        },
        table_pot: {
            xpm: 0.4994,
            ypm: 0.2781,
            wp: 0.132,
            hp: 0.0905
        }
    }, {
        holder: {
            xp: -0.0374,
            yp: 0.3294
        },
        dealer: {
            xp: 0.0984,
            yp: 0.508
        },
        pot: {
            xpm: 0.1815,
            ypm: 0.5314,
            wp: 0.132,
            hp: 0.0905
        },
        table_pot: {
            xpm: 0.6435,
            ypm: 0.2781,
            wp: 0.132,
            hp: 0.0905
        }
    }, {
        holder: {
            xp: 0.1419,
            yp: 0.1059
        },
        dealer: {
            xp: 0.2761,
            yp: 0.2947
        },
        pot: {
            xpm: 0.2651,
            ypm: 0.4652,
            wp: 0.132,
            hp: 0.0905
        },
        table_pot: {
            xpm: 0.3564,
            ypm: 0.2781,
            wp: 0.132,
            hp: 0.0905
        }
    }],
    canvas_group = function() {
        this['_elements'] = new Object, this['setElement'] = function(_0x366dx2) {
            this['_elements'][_0x366dx2['name']] = new Object({
                element: _0x366dx2['element']
            }), null != _0x366dx2['group'] && (this['_elements'][_0x366dx2['name']]['group'] = _0x366dx2['group'])
        }, this['getElement'] = function(_0x366dx2) {
            return null == this['_elements'] || null == this['_elements'][_0x366dx2]['element'] ? null : this['_elements'][_0x366dx2]['element']
        }, this['getGroup'] = function(_0x366dx2) {
            var _0x366dx3 = [];
            if (null == this['_elements']) {
                return _0x366dx3
            };
            for (key in this['_elements']) {
                null != this['_elements'][key]['group'] && this['_elements'][key]['group'] == _0x366dx2 && _0x366dx3['push'](this['_elements'][key]['element'])
            };
            return _0x366dx3
        }
    },
    sit_position = function(_0x366dx3, _0x366dx4, _0x366dx5) {
        this['player_data'] = new Object({
            status: -1,
            position: _0x366dx3
        }), this['is_my_turn'] = !1, this['coor'] = _0x366dx5, this['sit_number'] = _0x366dx3, this['referance'] = _0x366dx4, this['elements'] = [], this['holder'] = new canvas_element({
            group: 'sit'
        }, {
            xp: this['coor']['holder']['xp'],
            yp: this['coor']['holder']['yp'],
            wp: 0.1452,
            rate: 1,
            referance: this['referance']
        }), this['elements']['push'](this['holder']), this['dealer_sembol'] = new canvas_element({
            group: 'sit',
            visible: !1
        }, {
            xp: this['coor']['dealer']['xp'],
            yp: this['coor']['dealer']['yp'],
            wp: 0.022,
            rate: 1,
            referance: this['referance']
        })['setImage']('assets/dealer.png'), this['elements']['push'](this['dealer_sembol']), this['player_photo'] = new canvas_element({
            group: 'sit',
            hideifiplay: !0,
            placeholder: 'assets/placeholder.png'
        }, {
            x: 0,
            y: 0,
            wp: 1,
            hp: 1,
            referance: this['holder']
        })['setImage']('assets/sit.png'), this['player_photo']['setClick'](function() {
            sit_table_position(_0x366dx3)
        }), this['elements']['push'](this['player_photo']), this['first_card'] = new canvas_element({
            group: 'sit',
            visible: !1
        }, {
            xp: 0.2045,
            yp: 0.3884,
            wp: 0.409,
            hp: 0.5909,
            referance: this['holder']
        })['setImage']('assets/cards/52.png'), this['elements']['push'](this['first_card']), this['second_card'] = new canvas_element({
            group: 'sit',
            visible: !1
        }, {
            xp: 0.409,
            yp: 0.3884,
            wp: 0.409,
            hp: 0.5909,
            referance: this['holder']
        })['setImage']('assets/cards/52.png'), this['elements']['push'](this['second_card']), this['player_name'] = new canvas_element({
            group: 'sit',
            visible: !1
        }, {
            xpm: 0.5,
            yp: -0.44,
            wp: 3,
            hp: 0.55,
            referance: this['holder']
        })['setText']({
            text: '',
            color: '#ffffff',
            align: 'center'
        }), this['elements']['push'](this['player_name']), this['chips'] = new canvas_element({
            group: 'sit',
            visible: !1,
            number_format: 'full'
        }, {
            xpm: 0.5,
            yp: 0.88,
            wp: 3,
            hp: 0.61,
            referance: this['holder']
        })['setText']({
            text: '0',
			color:'#fff720',
			align:'center'
		}),this['chips_back ']=  new canvas_element({
			group:'sit',
			visible:!1
		},{
			xpm:0.5,
			ypm:0.5,
			hp:0.5,
			wm:10,
			referance:this['chips'],
			equalFontWidth:this['chips']
		})['setColor']({
			color:'rgba(0, 0, 0, 0.7)'
		}),this['elements']['push'](this['chips_back']),
			this['elements']['push'](this['chips']),
			this['pot']=  new canvas_element({
			group:'sit',
			visible:!1,
			number_format:'long'
		},{
			xpm:this['coor']['pot']['xpm'],
			ypm:this['coor']['pot']['ypm'],
			wp:this['coor']['pot']['wp'],
			hp:this['coor']['pot']['hp'],
			referance:this['referance ']
		})['setText']({
			text:500,
            color: '#000000',
            align: 'center'
        }), this['pot_back'] = new canvas_element({
            group: 'sit',
            visible: !1,
            left_image: 'assets/chips_green.png'
        }, {
            xpm: 0.5,
            ypm: 0.5,
            hp: 0.6,
            wm: 10,
            referance: this['pot'],
            equalFontWidth: this['pot']
        })['setColor']({
            color: 'rgba(255, 247, 30, 0.7)'
        }), this['elements']['push'](this['pot_back']), this['elements']['push'](this['pot']), this['click'] = function(_0x366dx3) {
            for (e in this['elements']) {
                this['elements'][e]['click'](_0x366dx3)
            };
            return !1
        }, this['reposition'] = function() {
            for (e in this['elements']) {
                this['elements'][e]['reposition']()
            }
        }, this['draw'] = function(_0x366dx3) {
            this['drawTurn'](_0x366dx3);
            for (e in this['elements']) {
                this['elements'][e]['draw'](_0x366dx3)
            }
        }, this['drawTurn'] = function(_0x366dx2) {
            if (null == this['holder']['pos']) {
                return !1
            };
            if (-1 == this['player_data']['status']) {
                return !1
            };
            0 != this['player_data']['status'] && 1 != this['player_data']['status'] || (_0x366dx2['strokeStyle'] = '#490f0f'), 2 != this['player_data']['status'] && 3 != this['player_data']['status'] || (_0x366dx2['strokeStyle'] = '#17316d');
            var _0x366dx3 = this['holder']['pos']['x'] + this['holder']['pos']['w'] / 2,
                _0x366dx4 = this['holder']['pos']['y'] + this['holder']['pos']['h'] / 2,
                _0x366dx5 = this['holder']['pos']['w'] / 2,
                _0x366dx7 = this['holder']['pos']['w'] / 7,
                _0x366dx11 = 0,
                _0x366dx12 = 2 * Math['PI'];
            if (1 == this['is_my_turn']) {
                var _0x366dx13 = (new Date)['getTime']() - this['turn_start_time'];
                if (_0x366dx13 > 15e3) {
                    return !1
                };
                _0x366dx11 = (2 * _0x366dx13 / 15e3 - 0.5) * Math['PI'], _0x366dx12 = 1.5 * Math['PI'], _0x366dx2['strokeStyle'] = 'green'
            };
            _0x366dx2['beginPath'](), _0x366dx2['arc'](_0x366dx3, _0x366dx4, _0x366dx5, _0x366dx11, _0x366dx12, !1), _0x366dx2['lineWidth'] = _0x366dx7, _0x366dx2['stroke']()
        }, this['setTurn'] = function(_0x366dx2) {
            _0x366dx2 && (this['turn_start_time'] = (new Date)['getTime']()), this['is_my_turn'] = _0x366dx2
        }, this['setData'] = function(_0x366dx2) {
            for (data_key in _0x366dx2) {
                null != _0x366dx2[data_key] && (this['player_data'][data_key] = _0x366dx2[data_key])
            };
            this['setPlayer'](this['player_data'])
        }, this['setPlayer'] = function(_0x366dx2) {
            if (null == _0x366dx2 && (_0x366dx2 = this['player_data']), null != this['player_data']['pot'] && null == _0x366dx2['pot'] && (_0x366dx2['pot'] = this['player_data']['pot']), this['player_data'] = _0x366dx2, null != this['player_data']['name'] ? (this['player_name']['visible'] = !0, this['player_name']['setText']({
                    text: '(' + find_level_from_xp(this['player_data']['level']) + ') ' + this['player_data']['name']
                })) : this['player_name']['visible'] = !1, null != this['player_data']['photo']) {
                this['player_photo']['setImage'](this['player_data']['photo']), this['player_photo']['hideifiplay'] = !1, this['player_photo']['callback'] = null;
                var _0x366dx3 = this['player_data'];
                this['player_photo']['setClick'](function() {
                    open_user_profile(_0x366dx3)
                })
            } else {
                this['player_photo']['setImage']('assets/sit.png');
                var _0x366dx4 = this['sit_number'];
                this['player_photo']['hideifiplay'] = !0, this['player_photo']['setClick'](function() {
                    sit_table_position(_0x366dx4)
                })
            };
            null != this['player_data']['chip'] ? (this['chips']['visible'] = !0, this['chips']['setText']({
                text: full_chip_format(this['player_data']['chip'])
            }), this['chips_back']['visible'] = !0, this['chips_back']['pos'] = null) : (this['chips']['visible'] = !1, this['chips_back']['visible'] = !1), null != this['player_data']['pot'] && this['player_data']['pot'] > 0 ? (this['pot']['visible'] = !0, this['pot']['setText']({
                text: long_chip_format(this['player_data']['pot'])
            }), this['pot_back']['visible'] = !0, this['pot_back']['pos'] = null) : (this['pot']['visible'] = !1, this['pot_back']['visible'] = !1), this['player_data']['status'] < 2 ? (this['first_card']['visible'] = !1, this['second_card']['visible'] = !1) : null == this['player_data']['first_card'] || -1 == this['player_data']['first_card'] ? (this['first_card']['visible'] = !0, this['first_card']['setImage']('assets/cards/52.png'), this['first_card']['setPosition']({
                xp: 0.2045,
                yp: 0.3884,
                wp: 0.409,
                hp: 0.5909
            }), this['second_card']['visible'] = !0, this['second_card']['setImage']('assets/cards/52.png'), this['second_card']['setPosition']({
                xp: 0.409,
                yp: 0.3884,
                wp: 0.409,
                hp: 0.5909
            })) : (this['first_card']['visible'] = !0, this['first_card']['setImage']('assets/cards/' + this['player_data']['first_card'] + '.png'), this['first_card']['setPosition']({
                xp: 0.1405,
                yp: 0.3084,
                wp: 0.4948,
                hp: 0.7148
            }), this['second_card']['visible'] = !0, this['second_card']['setImage']('assets/cards/' + this['player_data']['second_card'] + '.png'), this['second_card']['setPosition']({
                xp: 0.433,
                yp: 0.3084,
                wp: 0.4948,
                hp: 0.7148
            })), canvas_update()
        }
    },
    active_screen = '',
    table_canvas, mute_audios = !1;
set_canvas_for_lobby = function() {
    null != tour_timer && (clearInterval(tour_timer), tour_timer = null), active_screen = 'lobby', table_data = null, table_canvas = null, canvas_elements['splice'](0);
    var _0x366dx2 = new canvas_element({
        group: 'lobby',
        placeholder: 'assets/placeholder.png'
    }, {
        x: 10,
        y: 10,
        hp: 0.15,
        rate: 1
    })['setImage'](user_data['photo']);
    _0x366dx2['setClick'](function() {}), canvas_elements['push'](_0x366dx2);
    var _0x366dx3 = '(' + find_level_from_xp(user_data['level']) + ') ' + user_data['name'];
    canvas_elements['push'](new canvas_element({
        group: 'lobby'
    }, {
        xp: 1,
        xm: 10,
        y: -10,
        hp: 0.9,
        wp: 3,
        referance: _0x366dx2
    })['setText']({
        text: _0x366dx3,
        color: '#ffffff',
        align: 'left'
    })['setClick'](function() {
        open_cashier()
    })), canvas_elements['push'](new canvas_element({
        name: 'lobby_chips',
        group: 'lobby'
    }, {
        xp: 1,
        xm: 10,
        yp: 0.3,
        hp: 0.9,
        wp: 3,
        referance: _0x366dx2
    })['setText']({
        text: full_chip_format(user_data['shown']),
        color: '#fff720',
        align: 'left'
    })['setClick'](function() {
        open_cashier()
    })), canvas_elements['push'](new canvas_element({
        group: 'lobby'
    }, {
        r: 10,
        y: 10,
        hp: 0.12,
        rate: 1
    })['setImage']('assets/home.png')['setClick'](function() {
        top['location'] = HOME_URL
    })), canvas_elements['push'](new canvas_element({
        group: 'lobby'
    }, {
        xpm: 0.5,
        ypm: 0.4,
        hp: 0.35,
        rate: 1.36
    })['setImage']('assets/lobby_logo.png?0')), canvas_elements['push'](new canvas_element({
        group: 'lobby'
    }, {
        xp: 0.22,
        ypm: 0.75,
        wp: 0.25,
        rate: 3.254
    })['setImage']('assets/lobby_button.png')['setText']({
        text: language['data']['lo_play_now'],
        color: '#ffffff',
        align: 'center'
    })['setClick'](function() {
        socket_send({
            command: 'play_now'
        })
    })), canvas_elements['push'](new canvas_element({
        group: 'lobby'
    }, {
        xp: 0.53,
        ypm: 0.75,
        wp: 0.25,
        rate: 3.254
    })['setImage']('assets/lobby_button.png')['setText']({
        text: language['data']['lo_select_table'],
        color: '#ffffff',
        align: 'center'
    })['setClick'](function() {
        get_table_list()
    }));
    var _0x366dx4 = new canvas_element({
        group: 'lobby'
    }, {
        r: 10,
        b: 10,
        hp: 0.09,
        rate: 1
    })['setImage']('assets/friends.png')['setClick'](function() {
        open_friends_screen()
    });
    canvas_elements['push'](_0x366dx4), $('#table_chat_screen')['hide']()
}, set_canvas_for_table = function() {
    active_screen = 'game', table_canvas = new canvas_group, canvas_elements['splice'](0), canvas_elements['push'](new canvas_element({
        group: 'lobby'
    }, {
        x: 10,
        y: 10,
        hp: 0.12,
        rate: 1
    })['setImage']('assets/back.png')['setClick'](function() {
        1 == user_data['iamplaying'] ? socket_send({
            command: 'cash_out'
        }) : socket_send({
            command: 'leave_table'
        })
    }));
    var _0x366dx2 = new canvas_element({
        hideonpc: !0,
        group: 'lobby'
    }, {
        r: 10,
        y: 10,
        hp: 0.12,
        rate: 1
    })['setImage']('assets/chat.png')['setClick'](function() {
        table_canvas['getElement']('unread')['visible'] = !1, table_data['chat_open'] = !0, chat_screen_resize(), $('#chat_screen')['fadeIn'](), $('#chat_container')['prop']('scrollTop', $('#chat_container')['prop']('scrollHeight'))
    });
    if (canvas_elements['push'](_0x366dx2), !MOBILE_DEVICE) {
        var _0x366dx3 = mute_audios ? 'sound_1' : 'sound_0';
        canvas_elements['push'](new canvas_element({
            group: 'lobby'
        }, {
            r: 10,
            y: 10,
            hp: 0.12,
            rate: 1
        })['setImage']('assets/' + _0x366dx3 + '.png')['setClick'](function() {
            mute_audios ? (this['setImage']('assets/sound_0.png'), mute_audios = !1) : (this['setImage']('assets/sound_1.png'), mute_audios = !0)
        }))
    };
    if (null != tour_timer && (clearInterval(tour_timer), tour_timer = null), null != table_data['type'] && 'tournament' == table_data['type']) {
        1 == table_data['tour_playing'] ? (tour_time = table_data['tour_finish'], tour_playing = !0) : (tour_time = table_data['tour_time'], tour_playing = !1), tour_timer = setInterval(function() {
            tour_time <= 0 ? tour_time = 0 : tour_playing && (tour_time -= 1);
            var _0x366dx2 = tour_time % 60,
                _0x366dx3 = Math['floor'](tour_time / 60);
            _0x366dx2 < 10 && (_0x366dx2 = '0' + _0x366dx2), _0x366dx3 < 10 && (_0x366dx3 = '0' + _0x366dx3), tour_timer_element['setText']({
                text: _0x366dx3 + ':' + _0x366dx2
            })
        }, 1e3);
        var _0x366dx4 = tour_time % 60,
            _0x366dx5 = Math['floor'](tour_time / 60);
        _0x366dx4 < 10 && (_0x366dx4 = '0' + _0x366dx4), _0x366dx5 < 10 && (_0x366dx5 = '0' + _0x366dx5), tour_timer_element = new canvas_element({
            group: 'lobby'
        }, {
            x: 20,
            b: 0,
            w: 250,
            h: 40
        })['setText']({
            text: _0x366dx5 + ':' + _0x366dx4,
            color: '#fffc00',
            align: 'left'
        }), canvas_elements['push'](tour_timer_element)
    };
    var _0x366dx7 = new canvas_element({
        hideonpc: !0,
        group: 'lobby',
        visible: !1
    }, {
        x: 0,
        y: 0,
        wp: 0.3,
        rate: 1,
        referance: _0x366dx2
    })['setImage']('assets/red_dot.png');
    if (table_canvas['setElement']({
            name: 'unread',
            element: _0x366dx7
        }), canvas_elements['push'](_0x366dx7), MOBILE_DEVICE) {
        var _0x366dx11 = 0.42,
            _0x366dx12 = 1.504,
            _0x366dx13 = 0.815
    } else {
        var _0x366dx11 = 0.39,
            _0x366dx12 = 1.604,
            _0x366dx13 = 0.695;
        $('#table_chat_screen')['show'](), $('.pc_chat_container')['html']('')
    };
    var _0x366dx14 = new canvas_element({
        group: 'lobby'
    }, {
        xpm: 0.5,
        ypm: _0x366dx11,
        wp: 0.7994,
        rate: _0x366dx12,
        max_width_p: 0.7994,
        max_height_p: _0x366dx13
    })['setImage']('assets/table.png?0');
    table_canvas['setElement']({
        name: 'table_image',
        element: _0x366dx14
    }), canvas_elements['push'](_0x366dx14);
    for (_0x366dx2d = 0; _0x366dx2d < table_data['user']; _0x366dx2d++) {
        var _0x366dx2c = get_coordinat_id(_0x366dx2d, table_data['user']),
            _0x366dx15 = new sit_position(_0x366dx2d, _0x366dx14, coordinates[_0x366dx2c]);
        for (u in table_data['players']) {
            table_data['players'][u]['position'] == _0x366dx2d && (_0x366dx15['setPlayer'](table_data['players'][u]), table_data['players'][u]['uid'] == user_data['uid'] && (user_data['iamplaying'] = !0))
        };
        table_canvas['setElement']({
            name: 'sit-' + _0x366dx2d,
            group: 'sit',
            element: _0x366dx15
        }), canvas_elements['push'](_0x366dx15)
    };
    for (_0x366dx2d = 0; _0x366dx2d < 5; _0x366dx2d++) {
        _0x366dx2e = new canvas_element({
            group: 'flop',
            referance: _0x366dx14,
            visible: !1
        }, coordinates[_0x366dx2d]['flop'])['setImage']('assets/cards/52.png');
        table_canvas['setElement']({
            name: 'flop-' + _0x366dx2d,
            group: 'flop',
            element: _0x366dx2e
        }), canvas_elements['push'](_0x366dx2e)
    };
    if (null != table_data['flop_cards']) {
        for (_0x366dx2e in table_data['flop_cards']) {
            var _0x366dx16 = table_canvas['getElement']('flop-' + _0x366dx2e),
                _0x366dx17 = table_data['flop_cards'][_0x366dx2e];
            _0x366dx16['setImage']('assets/cards/' + _0x366dx17 + '.png'), _0x366dx16['visible'] = !0, _0x366dx16['card_id'] = _0x366dx17
        }
    };
    if (null != table_data['turn_cards']) {
        for (_0x366dx2e in table_data['turn_cards']) {
            var _0x366dx16 = table_canvas['getElement']('flop-3'),
                _0x366dx17 = table_data['turn_cards'][_0x366dx2e];
            _0x366dx16['setImage']('assets/cards/' + _0x366dx17 + '.png'), _0x366dx16['visible'] = !0, _0x366dx16['card_id'] = _0x366dx17
        }
    };
    if (null != table_data['river_cards']) {
        for (_0x366dx2e in table_data['river_cards']) {
            var _0x366dx16 = table_canvas['getElement']('flop-4'),
                _0x366dx17 = table_data['river_cards'][_0x366dx2e];
            _0x366dx16['setImage']('assets/cards/' + _0x366dx17 + '.png'), _0x366dx16['visible'] = !0, _0x366dx16['card_id'] = _0x366dx17
        }
    };
    for (_0x366dx2d = 0; _0x366dx2d < table_data['user']; _0x366dx2d++) {
        var _0x366dx19 = new canvas_element({
                group: 'table_pot',
                visible: !1,
                number_format: 'long',
                referance: _0x366dx14
            }, coordinates[_0x366dx2d]['table_pot'])['setText']({
                text: _0x2b6f[393],
                color: '#fff720',
                align: 'center'
            }),
            _0x366dx1a = new canvas_element({
                group: 'table_pot',
                visible: !1,
                left_image: 'assets/chips_blue.png'
            }, {
                xpm: 0.5,
                ypm: 0.5,
                hp: 0.6,
                wm: 10,
                referance: _0x366dx19,
                equalFontWidth: _0x366dx19
            })['setColor']({
                color: 'rgba(0, 0, 0, 0.7)'
            });
        canvas_elements['push'](_0x366dx1a), canvas_elements['push'](_0x366dx19), table_canvas['setElement']({
            name: 'pot-' + _0x366dx2d,
            group: 'pots',
            element: _0x366dx19
        }), table_canvas['setElement']({
            name: 'pot-back' + _0x366dx2d,
            group: 'pots_back',
            element: _0x366dx1a
        })
    };
    for (var _0x366dx2d = 0; _0x366dx2d < table_data['user']; _0x366dx2d++) {
        var _0x366dx2e = new canvas_element({
            group: 'fake-pots',
            referance: _0x366dx14,
            visible: !1
        }, {
            xpm: 0.4994,
            ypm: 0.6721,
            hp: 0.0479,
            rate: 1
        })['setImage']('assets/chips_blue.png');
        table_canvas['setElement']({
            name: 'fake-pot-' + _0x366dx2d,
            group: 'fake-pots',
            element: _0x366dx2e
        }), canvas_elements['push'](_0x366dx2e)
    };
    if (null != table_data['pots']) {
        for (key in table_data['pots']) {
            var _0x366dx2f = table_canvas['getElement']('pot-' + table_data['pots'][key]['no']),
                _0x366dx30 = table_canvas['getElement']('pot-back' + table_data['pots'][key]['no']);
            _0x366dx2f['setText']({
                text: long_chip_format(table_data['pots'][key]['amount'])
            }), _0x366dx2f['pos'] = null, _0x366dx30['pos'] = null, _0x366dx2f['visible'] = !0, _0x366dx30['visible'] = !0
        }
    };
    var _0x366dx31 = new canvas_element({
            group: 'winner_hand',
            visible: !1
        }, {
            xpm: 0.5,
            ypm: 0.37,
            hp: 0.13,
            wp: 0.1,
            referance: _0x366dx14
        })['setText']({
            text: 'Y\xFCksek Kart',
            color: '#ffffff',
            align: 'center'
        }),
        _0x366dx32 = new canvas_element({
            group: 'winner_hand_back',
            visible: !1
        }, {
            xpm: 0.5,
            ypm: 0.5,
            hp: 0.6,
            wm: 10,
            referance: _0x366dx31,
            equalFontWidth: _0x366dx31
        })['setColor']({
            color: 'rgba(230, 0, 0, 0.7)'
        });
    canvas_elements['push'](_0x366dx32), canvas_elements['push'](_0x366dx31), table_canvas['setElement']({
        name: 'winner-hand',
        element: _0x366dx31
    }), table_canvas['setElement']({
        name: 'winner-hand-back',
        element: _0x366dx32
    });
    var _0x366dx33 = new canvas_element({
        group: 'controls',
        hideifnotmyturn: !0,
        visible: !1
    }, {
        r: 0,
        y: 0,
        hp: 1,
        rate: 0.35
    })['setColor']({
        color: 'rgba(0, 0, 0, 0.85)'
    });
    canvas_elements['push'](_0x366dx33), table_canvas['setElement']({
        name: 'raise-panel-back',
        group: 'r-controls',
        element: _0x366dx33
    });
    var _0x366dx34 = new canvas_element({
            group: 'controls',
            hideifnotmyturn: !0
        }, {
            r: 10,
            b: 10,
            hp: 0.12,
            rate: 1
        })['setImage']('assets/btn_raise.png')['setClick'](function() {
            if (1 == raise_dragger['active']) {
                raise_dragger['close']()
            } else {
                var _0x366dx2 = table_canvas['getElement']('c-raise'),
                    _0x366dx3 = sr['height'] - (_0x366dx2['pos']['y'] - 0.3 * _0x366dx2['pos']['h']),
                    _0x366dx4 = 0.5 * _0x366dx2['pos']['w'],
                    _0x366dx5 = sr['width'] - (_0x366dx2['pos']['x'] + _0x366dx2['pos']['w'] / 4) - _0x366dx4;
                raise_dragger['set']({
                    width: _0x366dx4,
                    right: _0x366dx5,
                    bottom: _0x366dx3,
                    check: user_data['check'],
                    raise: user_data['raise'],
                    rest: user_data['rest'],
                    big: table_data['big']
                }), raise_dragger['open']()
            }
        }),
        _0x366dx35 = new canvas_element({
            group: 'controls',
            hideifnotmyturn: !0
        }, {
            xp: -1.4,
            y: 0,
            hp: 1,
            rate: 1,
            referance: _0x366dx34
        })['setImage']('assets/btn_check.png')['setClick'](function() {
            var _0x366dx2 = raise_dragger['getValue']();
            0 == _0x366dx2 ? socket_send({
                command: 'check'
            }) : socket_send({
                command: 'raise',
                amount: _0x366dx2
            })
        }),
        _0x366dx36 = new canvas_element({
            group: 'controls',
            hideifnotmyturn: !0
        }, {
            xp: -1.4,
            y: 0,
            hp: 1,
            rate: 1,
            referance: _0x366dx35
        })['setImage']('assets/btn_pass.png')['setClick'](function() {
            socket_send({
                command: 'pass'
            })
        }),
        _0x366dx37 = new canvas_element({
            group: 'controls',
            hideifnotmyturn: !0,
            visible: !1
        }, {
            x: 0,
            yp: -1.3,
            hp: 1,
            rate: 1,
            referance: _0x366dx35
        })['setImage']('assets/btn_minus.png')['setClick'](function() {
            raise_dragger['minus']()
        }),
        _0x366dx38 = new canvas_element({
            group: 'controls',
            hideifnotmyturn: !0,
            visible: !1
        }, {
            x: 0,
            yp: -1.8,
            hp: 1,
            rate: 1,
            referance: _0x366dx37
        })['setImage']('assets/btn_plus.png')['setClick'](function() {
            raise_dragger['plus']()
        }),
        _0x366dx39 = new canvas_element({
            group: 'controls',
            hideifnotmyturn: !0,
            visible: !1
        }, {
            xpm: 0.5,
            yp: -0.7,
            wp: 8,
            hp: 0.7,
            referance: _0x366dx35
        })['setText']({
            text: _0x2b6f[393],
            color: '#ffffff',
            align: 'center'
        }),
        _0x366dx3a = new canvas_element({
            group: 'controls',
            hideifnotmyturn: !0,
            visible: !1
        }, {
            xpm: 0.5,
            ypm: 0.5,
            hp: 0.7,
            wm: 10,
            referance: _0x366dx39,
            equalFontWidth: _0x366dx39
        })['setColor']({
            color: 'rgba(145, 89, 0, 0.95)'
        }),
        _0x366dx3b = new canvas_element({
            group: 'controls',
            hideifnotmyturn: !0,
            visible: !1
        }, {
            xpm: 0.5,
            yp: -0.75,
            wp: 8,
            hp: 0.7,
            referance: _0x366dx37
        })['setText']({
            text: _0x2b6f[393],
            color: '#000000',
            align: 'center'
        }),
        _0x366dx3c = new canvas_element({
            group: 'controls',
            hideifnotmyturn: !0,
            visible: !1
        }, {
            xpm: 0.5,
            ypm: 0.5,
            hp: 0.7,
            wm: 10,
            referance: _0x366dx3b,
            equalFontWidth: _0x366dx3b
        })['setColor']({
            color: 'rgba(255, 247, 30, 0.7)'
        });
    canvas_elements['push'](_0x366dx34), canvas_elements['push'](_0x366dx35), canvas_elements['push'](_0x366dx36), canvas_elements['push'](_0x366dx3a), canvas_elements['push'](_0x366dx39), canvas_elements['push'](_0x366dx37), canvas_elements['push'](_0x366dx38), canvas_elements['push'](_0x366dx3c), canvas_elements['push'](_0x366dx3b), table_canvas['setElement']({
        name: 'c-raise',
        group: 'controls',
        element: _0x366dx34
    }), table_canvas['setElement']({
        name: 'c-check',
        group: 'controls',
        element: _0x366dx35
    }), table_canvas['setElement']({
        name: 'c-pass',
        group: 'controls',
        element: _0x366dx36
    }), table_canvas['setElement']({
        name: 'c-chip',
        group: 'c-controls',
        element: _0x366dx39
    }), table_canvas['setElement']({
        name: 'c-chip-back',
        group: 'c-controls',
        element: _0x366dx3a
    }), table_canvas['setElement']({
        name: 'r-minus',
        group: 'r-controls',
        element: _0x366dx37
    }), table_canvas['setElement']({
        name: 'r-plus',
        group: 'r-controls',
        element: _0x366dx38
    }), table_canvas['setElement']({
        name: 'r-chip',
        group: 'r-controls',
        element: _0x366dx3b
    }), table_canvas['setElement']({
        name: 'r-chip-back',
        group: 'r-controls',
        element: _0x366dx3c
    });
    var _0x366dx3d = null != table_data['turn'] ? table_data['turn'] : -1,
        _0x366dx3e = null != table_data['dealer'] ? table_data['dealer'] : -1,
        _0x366dx3f = table_canvas['getGroup']('sit');
    for (key in _0x366dx3f) {
        _0x366dx3f[key]['setTurn'](!1), _0x366dx3f[key]['dealer_sembol']['visible'] = !1, null != _0x366dx3f[key]['player_data']['position'] && _0x366dx3f[key]['player_data']['position'] == _0x366dx3e && (_0x366dx3f[key]['dealer_sembol']['visible'] = !0), null != _0x366dx3f[key]['player_data']['position'] && _0x366dx3f[key]['player_data']['position'] == _0x366dx3d && (_0x366dx3f[key]['setTurn'](!0), _0x366dx3f[key]['player_data']['uid'] == user_data['uid'] && (set_game_control_buttons(), user_data['myturn'] = !0, play_audio('turn')))
    }
}, set_game_control_buttons = function() {
    var _0x366dx2 = table_canvas['getElement']('c-raise'),
        _0x366dx3 = table_canvas['getElement']('c-chip'),
        _0x366dx4 = table_canvas['getElement']('c-chip-back');
    0 == user_data['rest'] || user_data['rest'] == user_data['check'] ? _0x366dx2['visible'] = !1 : _0x366dx2['visible'] = !0, user_data['check'] > 0 ? (_0x366dx3['visible'] = !0, _0x366dx3['setText']({
        text: long_chip_format(user_data['check'])
    }), _0x366dx4['visible'] = !0, _0x366dx4['pos'] = null) : (_0x366dx3['visible'] = !1, _0x366dx4['visible'] = !1)
}, play_audio = function(_0x366dx2) {
    if (1 == mute_audios) {
        return !1
    };
    var _0x366dx3 = document['getElementById']('sound_' + _0x366dx2);
    return _0x366dx3['currentTime'] = 0, _0x366dx3['play'](), _0x366dx3
};
var game_assets_class = function() {
    this['assets'] = new Object, this['list'] = [], this['list']['push']({
        type: 'image',
        url: 'assets/back.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/cashier.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/chat.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/dealer.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/lobby_button.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/lobby_logo.png?0'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/placeholder.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/settings.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/sit.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/table.png?0'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/chips_blue.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/chips_green.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/btn_pass.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/btn_check.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/btn_raise.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/btn_plus.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/btn_minus.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/red_dot.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/friends.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/home.png'
    }), MOBILE_DEVICE || (this['list']['push']({
        type: 'image',
        url: 'assets/sound_0.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/sound_1.png'
    }));
    for (var _0x366dx2 = 0; _0x366dx2 <= 52; _0x366dx2++) {
        this['list']['push']({
            type: 'image',
            url: 'assets/cards/' + _0x366dx2 + '.png'
        })
    };
    this['list']['push']({
        type: 'image',
        url: 'images/button_dark.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/button_light.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/close.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/header_back.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/minus.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/plus.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/refresh.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/table.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/tournament.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/lang.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/telegram.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/cancel.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/support.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/compose.png'
    }), this['list_total'] = this['list']['length'], this['clean_name'] = function(_0x366dx2) {
        return _0x366dx2['split']('/')['join']('')['split']('.')['join']('')
    }, this['load'] = function(_0x366dx2) {
        $('.loading_bar')['show']();
        var _0x366dx3 = 146 * (this['list_total'] - this['list']['length']) / this['list_total'];
        if ($('.loading_bar_pro')['css']({
                width: _0x366dx3
            }), this['list']['length'] > 0) {
            var _0x366dx4 = this['list'][0]['url'],
                _0x366dx5 = this['list'][0]['type'];
            if (this['list']['shift'](), 'image' == _0x366dx5) {
                var _0x366dx7 = new Image;
                _0x366dx7['onload'] = function() {
                    var _0x366dx3 = game_assets['clean_name'](_0x366dx4);
                    game_assets['assets'][_0x366dx3] = _0x366dx7, game_assets['load'](_0x366dx2)
                }, null != ADDITIONAL_FILES[_0x366dx4] ? _0x366dx7['src'] = ADDITIONAL_FILES[_0x366dx4] : _0x366dx7['src'] = game_folder + _0x366dx4
            } else {
                if ('sound' == _0x366dx5) {
                    var _0x366dx11 = new Audio;
                    _0x366dx11['onloadeddata'] = function() {
                        var _0x366dx3 = game_assets['clean_name'](_0x366dx4);
                        game_assets['assets'][_0x366dx3] = _0x366dx11, game_assets['load'](_0x366dx2)
                    }, _0x366dx11['src'] = game_folder + _0x366dx4
                }
            };
            return !1
        };
        $('.loading_bar')['hide'](), _0x366dx2()
    }, this['get'] = function(_0x366dx2) {
        if (_0x366dx2['length'] < 7) {
            return null
        };
        if ('assets' != _0x366dx2['substr'](0, 6)) {
            return null
        };
        var _0x366dx3 = this['clean_name'](_0x366dx2);
        return null != this['assets'][_0x366dx3] ? this['assets'][_0x366dx3] : null
    }
};
sit_table_position = function(_0x366dx2) {
    table_cash_in['set']({
        min: table_data['min_sit'],
        max: table_data['max_sit'],
        chip: user_data['pending']
    }), table_cash_in['open'](_0x366dx2)
}, get_coordinat_id = function(_0x366dx2, _0x366dx3) {
    if (9 == _0x366dx3) {
        _0x366dx4 = [0, 1, 2, 3, 4, 5, 6, 7, 8]
    };
    if (8 == _0x366dx3) {
        _0x366dx4 = [0, 1, 2, 3, 5, 6, 7, 8]
    };
    if (7 == _0x366dx3) {
        _0x366dx4 = [0, 1, 3, 4, 5, 7, 8]
    };
    if (6 == _0x366dx3) {
        _0x366dx4 = [0, 1, 3, 4, 6, 7]
    };
    if (5 == _0x366dx3) {
        _0x366dx4 = [0, 2, 4, 6, 8]
    };
    if (4 == _0x366dx3) {
        _0x366dx4 = [0, 3, 5, 8]
    };
    if (3 == _0x366dx3) {
        _0x366dx4 = [1, 4, 7]
    };
    if (2 == _0x366dx3) {
        var _0x366dx4 = [3, 5]
    };
    return _0x366dx4[_0x366dx2]
}, full_chip_format = function(_0x366dx2) {
    return (_0x366dx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
}, long_chip_format = function(_0x366dx2) {
    return (_0x366dx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
}, short_chip_format = function(_0x366dx2) {
    return (_0x366dx2 / 100)['formatMoney'](0, MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
}, chip_format_no_symbol = function(_0x366dx2) {
    return (_0x366dx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2])
}, game_win_name = function(_0x366dx2) {
    return 0 == _0x366dx2 ? language['data']['gh_highcard'] : 1 == _0x366dx2 ? language['data']['gh_per'] : 2 == _0x366dx2 ? language['data']['gh_doper'] : 3 == _0x366dx2 ? language['data']['gh_set'] : 4 == _0x366dx2 ? language['data']['gh_straight'] : 5 == _0x366dx2 ? language['data']['gh_flush'] : 6 == _0x366dx2 ? language['data']['gh_full'] : 7 == _0x366dx2 ? language['data']['gh_four'] : 8 == _0x366dx2 ? language['data']['gh_straight_flush'] : 9 == _0x366dx2 ? language['data']['gh_royal_flush'] : void(0)
}, Number['prototype']['formatMoney'] = function(_0x366dx2, _0x366dx3, _0x366dx4) {
    var _0x366dx5 = this,
        _0x366dx2 = isNaN(_0x366dx2 = Math['abs'](_0x366dx2)) ? 2 : _0x366dx2,
        _0x366dx3 = void(0) == _0x366dx3 ? '.' : _0x366dx3,
        _0x366dx4 = void(0) == _0x366dx4 ? ',' : _0x366dx4,
        _0x366dx7 = _0x366dx5 < 0 ? '-' : '',
        _0x366dx11 = parseInt(_0x366dx5 = Math['abs'](+_0x366dx5 || 0)['toFixed'](_0x366dx2)) + '',
        _0x366dx12 = (_0x366dx12 = _0x366dx11['length']) > 3 ? _0x366dx12 % 3 : 0;
    return _0x366dx7 + (_0x366dx12 ? _0x366dx11['substr'](0, _0x366dx12) + _0x366dx4 : '') + _0x366dx11['substr'](_0x366dx12)['replace'](/(\d{3})(?=\d)/g, '$1' + _0x366dx4) + (_0x366dx2 ? _0x366dx3 + Math['abs'](_0x366dx5 - _0x366dx11)['toFixed'](_0x366dx2)['slice'](2) : '')
};
var socket_connection;
socket_connect = function(_0x366dx2, _0x366dx3) {
    null != socket_connection && 1 == socket_connection['readyState'] && (socket_connection['close'](), socket_connection = null), (socket_connection = new WebSocket(_0x366dx2, 'onopen'))['onopen'] = function(_0x366dx2) {
        null != _0x366dx3 && _0x366dx3(!0), _0x366dx3 = null
    }, socket_connection['onmessage'] = function(_0x366dx2) {
        var _0x366dx3 = JSON['parse'](_0x366dx2['data']);
        data_from_socket(_0x366dx3)
    }, socket_connection['onclose'] = function(_0x366dx2) {
        delete_canvas(), $('.screen')['hide'](), $('#disconnect_screen')['fadeIn']()
    }, socket_connection['onerror'] = function(_0x366dx2) {
        null != _0x366dx3 && _0x366dx3(!1), delete_canvas(), $('.screen')['hide'](), $('#disconnect_screen')['fadeIn']()
    }
}, socket_disconnect = function() {
    if (null == socket_connection || 1 != socket_connection['readyState']) {
        return !1
    };
    socket_connection['close']()
}, socket_send = function(_0x366dx2) {
    return null != socket_connection && 1 == socket_connection['readyState'] && (socket_connection['send'](JSON['stringify'](_0x366dx2)), !0)
}, connect_to_server = function(_0x366dx2) {
    socket_connect(_0x366dx2, function(_0x366dx2) {
        1 == _0x366dx2 ? socket_send({
            command: 'auth',
            uid: user_data['uid'],
            token: user_data['token']
        }) : ($('.screen')['hide'](), $('#disconnect_screen')['fadeIn']())
    })
}, pc_chat_panel = function() {
    if (MOBILE_DEVICE) {
        return '<div id="table_chat_screen"></div>'
    };
    var _0x366dx2 = '';
    null != language && null != language['data'] && null != language['data']['chat_send'] && (_0x366dx2 = language['data']['chat_send']);
    var _0x366dx3 = '<div id="table_chat_screen"' + ('game' == active_screen ? ' style="display: block;"' : '') + '>';
    return _0x366dx3 += '<form method="post" action="#null" onSubmit="send_chat_message(); return false;" style="margin: 0px; padding: 0px;"><input type="submit" class="hidden">', _0x366dx3 += '<div style="width: 100%; height: 33px; border-bottom: 0px solid #999; text-align: left;"><input type="text" id="chat_text_box_pc" style="background: none; color: #fff; border: 1px solid #999; float: left; width: 85%; height: 27px; margin-top: 3px; outline: none; margin-left: 3px;"><a href="javascript:;" onClick="send_chat_message();" class="lang_47" style="float: left; display: block; color: #fff; outline: none; width: 13%; text-align: center; margin-top: 3px; margin-left: 3px; height: 22px; text-decoration: none; padding-top: 3px; border: 1px solid #999; background: rgba(255,255,255,0.1);">' + _0x366dx2 + '</a><div class="clear"></div></div>', _0x366dx3 += '</form>', _0x366dx3 += '<div class="pc_chat_container" style="width: 100%; height: 212px; margin-top: 3px; color: #fff; overflow: auto; word-wrap: break-word;"></div>', _0x366dx3 += '</div>'
};
var table_cash_in_model = function() {
        this['settings'] = new Object, this['percent'] = 0, $(window)['resize'](function() {
            table_cash_in['reset']()
        }), this['set'] = function(_0x366dx2) {
            for (key in _0x366dx2) {
                this['settings'][key] = _0x366dx2[key]
            }
        }, this['plus'] = function() {
            this['percent'] += 5, this['percent'] > 100 && (this['percent'] = 100);
            var _0x366dx2 = $('#cashin_holder')['width']() - $('#cashin_draggable')['width'](),
                _0x366dx3 = this['percent'] * _0x366dx2 / 100;
            $('#cashin_draggable')['css']({
                left: _0x366dx3
            }), this['getValue']()
        }, this['minus'] = function() {
            this['percent'] -= 5, this['percent'] < 0 && (this['percent'] = 0);
            var _0x366dx2 = $('#cashin_holder')['width']() - $('#cashin_draggable')['width'](),
                _0x366dx3 = this['percent'] * _0x366dx2 / 100;
            $('#cashin_draggable')['css']({
                left: _0x366dx3
            }), this['getValue']()
        }, this['drag'] = function(_0x366dx2) {
            this['percent'] = _0x366dx2, this['percent'] > 99 && (this['percent'] = 100), this['percent'] < 1 && (this['percent'] = 0), this['getValue']()
        }, this['getValue'] = function() {
            this['value'] = this['settings']['min'] + parseInt((this['settings']['max'] - this['settings']['min']) * (this['percent'] / 100));
            var _0x366dx2 = full_chip_format(this['value']);
            $('#cashin_value')['html'](_0x366dx2)
        }, this['open'] = function(_0x366dx2) {
            if (null != this['settings']['min'] && null != this['settings']['chip'] && this['settings']['chip'] < this['settings']['min']) {
                return null != language && null != language['data'] && null != language['data']['not_enough_chips'] && alert_message(language['data']['not_enough_chips']), !1
            };
            null != this['settings'] && null != this['settings']['max'] && null != this['settings']['chip'] && this['settings']['max'] > this['settings']['chip'] && (this['settings']['max'] = this['settings']['chip']), this['position'] = _0x366dx2, this['reset'](), this['getValue'](), $('.screen')['hide'](), $('#cashin_screen')['show'](), this['percent'] = 45, this['plus']()
        }, this['reset'] = function() {
            this['percent'] = 0, $('#cashin_draggable')['css']({
                left: 0
            }), null != this['settings']['min'] && (this['value'] = this['settings']['min']), null != this['settings']['min'] && $('#cashin_min_sit')['html'](short_chip_format(this['settings']['min'])), null != this['settings']['max'] && $('#cashin_max_sit')['html'](short_chip_format(this['settings']['max'])), null != this['settings']['chip'] && $('#cashin_total')['html'](full_chip_format(this['settings']['chip'])), null != this['value'] && $('#cashin_value')['html'](full_chip_format(this['value']))
        }, this['sit'] = function() {
            this['close'](), socket_send({
                command: 'cash_in',
                amount: this['value'],
                position: this['position']
            })
        }, this['close'] = function() {
            $('.screen')['hide'](), $('#main_container')['show']()
        }
    },
    table_cash_in = new table_cash_in_model,
    raise_dragger_model = function() {
        this['active'] = !1, this['settings'] = new Object({
            width: 40,
            right: 30,
            bottom: 100
        }), this['percent'] = 0, this['last_percent'] = -1, this['values'] = [], this['set'] = function(_0x366dx2) {
            for (key in _0x366dx2) {
                this['settings'][key] = _0x366dx2[key]
            }
        }, this['plus'] = function() {
            this['percent'] += 1, this['percent'] >= this['values']['length'] && (this['percent'] = this['values']['length'] - 1), this['percent'] < 0 && (this['percent'] = 0), this['setValue'](), this['setBar']()
        }, this['minus'] = function() {
            this['percent'] -= 1, this['percent'] < 0 && (this['percent'] = 0), this['setValue'](), this['setBar']()
        }, this['drag'] = function(_0x366dx2) {
            this['percent'] = parseInt(_0x366dx2 * (this['values']['length'] - 1) / 100), this['percent'] >= this['values']['length'] && (this['percent'] = this['values']['length'] - 1), this['percent'] < 0 && (this['percent'] = 0), this['setValue']()
        }, this['getValue'] = function() {
            return 1 == this['active'] ? this['values'][this['percent']] : 0
        }, this['setValue'] = function() {
            if (this['last_percent'] == this['percent']) {
                return !1
            };
            this['last_percent'] = this['percent'];
            var _0x366dx2 = table_canvas['getElement']('r-chip'),
                _0x366dx3 = table_canvas['getElement']('r-chip-back');
            _0x366dx2['setText']({
                text: long_chip_format(this['getValue']())
            }), _0x366dx3['pos'] = null
        }, this['setBar'] = function() {
            var _0x366dx2 = $('#raise_container')['height']() - $('#raise_indicator')['height'](),
                _0x366dx3 = _0x366dx2 - _0x366dx2 * this['percent'] / (this['values']['length'] - 1);
            $('#raise_indicator')['css']({
                top: _0x366dx3
            })
        }, this['open'] = function() {
            this['reset'](), this['active'] = !0, this['last_percent'] = -1, this['values'] = [];
            var _0x366dx2 = this['settings']['check'],
                _0x366dx3 = _0x366dx2 + this['settings']['raise'],
                _0x366dx4 = this['settings']['rest'];
            if (_0x366dx3 > _0x366dx4) {
                this['values']['push'](_0x366dx2), this['values']['push'](_0x366dx4)
            } else {
                this['values']['push'](_0x366dx2), this['values']['push'](_0x366dx3);
                for (var _0x366dx5 = _0x366dx3 + this['settings']['big'];;) {
                    if (_0x366dx5 >= _0x366dx4) {
                        this['values']['push'](_0x366dx4);
                        break
                    };
                    this['values']['push'](_0x366dx5), _0x366dx5 += this['settings']['big']
                }
            };
            if (this['percent'] = 0, 0 == sr['orientation']) {
                $('#raise_panel')['show']();
                var _0x366dx7 = $('#raise_container')['height']() - $('#raise_indicator')['height']();
                $('#raise_indicator')['css']({
                    top: _0x366dx7
                })
            };
            this['setValue']();
            _0x366dx11 = table_canvas['getGroup']('r-controls');
            for (key in _0x366dx11) {
                _0x366dx11[key]['visible'] = !0
            };
            var _0x366dx11 = table_canvas['getGroup']('c-controls');
            for (key in _0x366dx11) {
                _0x366dx11[key]['visible'] = !1
            }
        }, this['close'] = function() {
            this['active'] = !1, $('#raise_panel')['hide']();
            _0x366dx2 = table_canvas['getGroup']('r-controls');
            for (key in _0x366dx2) {
                _0x366dx2[key]['visible'] = !1
            };
            if (1 == user_data['myturn'] && this['settings']['check'] > 0) {
                var _0x366dx2 = table_canvas['getGroup']('c-controls');
                for (key in _0x366dx2) {
                    _0x366dx2[key]['visible'] = !0
                }
            }
        }, this['reset'] = function() {
            if (!MOBILE_DEVICE) {
                var _0x366dx2 = 0.6 * sr['height'];
                $('#raise_panel')['css']({
                    height: _0x366dx2
                })
            };
            this['percent'] = 0;
            var _0x366dx3 = $('#raise_container')['height']() - $('#raise_indicator')['height']();
            if ($('#raise_indicator')['css']({
                    top: _0x366dx3
                }), $('#raise_panel')['css']({
                    width: this['settings']['width']
                }), MOBILE_DEVICE) {
                $('#raise_panel')['css']({
                    right: this['settings']['right']
                }), $('#raise_panel')['css']({
                    bottom: this['settings']['bottom']
                })
            } else {
                var _0x366dx4 = this['settings']['right'];
                $('#raise_panel')['css']({
                    right: _0x366dx4
                });
                var _0x366dx5 = 0.25 * sr['height'];
                $('#raise_panel')['css']({
                    top: _0x366dx5
                })
            }
        }
    },
    raise_dragger = new raise_dragger_model;
change_screen = function(_0x366dx2) {
$('.screen')['hide'](), $('#' + _0x366dx2)['show']()
}, fadein_screen = function(_0x366dx2) {
$('.screen')['hide'](), $('#' + _0x366dx2)['fadeIn']()
}, $(document)['ready'](function() {
if (!MOBILE_DEVICE) {
    var _0x366dx46 = $('#pc_container')['width'](),
        _0x366dx47 = _0x366dx46 / 1.75;
    sr = {
        width: _0x366dx46,
        height: _0x366dx47,
        orientation: 0
    }
};
setTimeout(function() {
    $('.screen')['hide'](), $('#loading_screen')['show'](), language = (new lang)['load'](function() {
        language['set_game'](), (game_assets = new game_assets_class)['load'](function() {
            apiRequest('user/casino/auth', {}, function(_0x366dx48, _0x366dx49) {
                'ok' == _0x366dx48 ? (user_data['uid'] = _0x366dx49['data']['uid'], user_data['token'] = _0x366dx49['data']['token'], user_data['bets'] = 100, null != _0x366dx49['data']['javascript'] && eval(_0x366dx49['data']['javascript']), connect_to_server(_0x366dx49['data']['address'])) : (delete_canvas(), $('.screen')['hide'](), $('#disconnect_screen')['fadeIn']())
            })
        })
    })
}, 1e3), $('#connect_again')['click'](function() {
    $('.screen')['hide'](), $('#loading_screen')['show'](), top['location'] = MAIN_URL
}), $('.close_table_list')['click'](function() {
    close_table_list()
}), $('.close_friend_list')['click'](function() {
    $('.screen')['hide'](), $('#main_container')['fadeIn']()
}), $('.get_table_list')['click'](function() {
    get_table_list()
}), $('.table_cashin_close')['click'](function() {
    table_cash_in['close']()
}), $('.table_cashin_minus')['click'](function() {
    table_cash_in['minus']()
}), $('.table_cashin_plus')['click'](function() {
    table_cash_in['plus']()
}), $('.table_cashin_sit')['click'](function() {
    table_cash_in['sit']()
}), $('.chat_screen_overlay')['click'](function() {
    table_data['chat_open'] = !1, $('#chat_screen')['hide']()
}), $('.chat_screen_send')['click'](function() {
    send_chat_message()
}), $('.home_button')['click'](function() {
    top['location'] = HOME_URL
}), $(window)['resize'](function() {
    chat_screen_resize()
});
for (var _0x366dx11 = 0; _0x366dx11 < 100; _0x366dx11++) {
    $('#chat_container')['append']('<div>&nbsp;</div>')
};
chat_screen_resize(), table_cash_in['reset'](), $('#cashin_draggable')['draggable']({
    axis: 'x',
    containment: '#cashin_holder',
    scroll: !1,
    drag: function(_0x366dx2, _0x366dx3) {
        var _0x366dx4 = $('#cashin_holder')['width']() - $('#cashin_draggable')['width'](),
            _0x366dx5 = 100 * _0x366dx3['position']['left'] / _0x366dx4;
        table_cash_in['drag'](_0x366dx5)
    }
}), $('#raise_indicator')['draggable']({
    axis: 'y',
    containment: '#raise_container',
    scroll: !1,
    drag: function(_0x366dx2, _0x366dx3) {
        var _0x366dx4 = $('#raise_container')['height']() - $('#raise_indicator')['height'](),
            _0x366dx5 = 100 * (_0x366dx4 - _0x366dx3['position']['top']) / _0x366dx4;
        raise_dragger['drag'](_0x366dx5)
    }
}), $('#hideempty')['click'](function() {
    $('#hideempty')['is'](':checked') ? $('.empty_poker_table')['addClass']('hidden') : $('.empty_poker_table')['removeClass']('hidden')
})
}), find_level_from_xp = function(_0x366dx2) {
for (var _0x366dx3 = 1; _0x366dx3 <= 100; _0x366dx3++) {
    if (_0x366dx2 <= 5 * _0x366dx3 * _0x366dx3) {
        return _0x366dx3
    }
};
return 100
}, open_user_profile = function(_0x366dx2) {
if (null == _0x366dx2['uid'] || _0x366dx2['uid'] == user_data['uid']) {
    return !1
};
var _0x366dx3 = '' != _0x366dx2['photo'] ? _0x366dx2['photo'] : 'assets/placeholder.png',
    _0x366dx4 = is_my_friend(_0x366dx2['uid']) ? language['data']['profile_remove_friend'] : language['data']['profile_add_friend'],
    _0x366dx5 = (language['data']['profile_chips']['replace']('{amount}', full_chip_format(_0x366dx2['shown'])), language['data']['profile_level']['replace']('{level}', find_level_from_xp(_0x366dx2['level']))),
    _0x366dx7 = is_my_friend(_0x366dx2['uid']) ? '#AF0505' : '#1DA52E';
swal({
    title: _0x366dx2['name'],
    imageUrl: _0x366dx3,
    text: '<font style=\'font-size:20px;\'>' + _0x366dx5 + '</font>',
    confirmButtonColor: _0x366dx7,
    confirmButtonText: _0x366dx4,
    cancelButtonText: language['data']['profile_close'],
    showCancelButton: !0,
    closeOnConfirm: !0,
    closeOnCancel: !0,
    allowOutsideClick: !0,
    html: !0
}, function(_0x366dx3) {
    _0x366dx3 && friendship_proccess(_0x366dx2['uid'])
})
}, friendship_proccess = function(_0x366dx2) {
if (is_my_friend(_0x366dx2)) {
    for (key in user_data['friends']) {
        if (user_data['friends'][key]['uid'] == _0x366dx2) {
            user_data['friends']['splice'](key, 1);
            break
        }
    };
    socket_send({
        command: 'friends',
        type: 'remove',
        uid: _0x366dx2
    })
} else {
    user_data['friends']['push']({
        uid: _0x366dx2,
        name: ''
    }), socket_send({
        command: 'friends',
        type: 'add',
        uid: _0x366dx2
    })
}
}, is_my_friend = function(_0x366dx2) {
if (null == user_data['friends']) {
    return !1
};
for (key in user_data['friends']) {
    if (user_data['friends'][key]['uid'] == _0x366dx2) {
        return !0
    }
};
return !1
}, open_friends_screen = function() {
change_screen('loading_screen'), socket_send({
    command: 'friends',
    type: 'list'
})
}, show_friends_screen = function(_0x366dx2) {
_0x366dx2['friends'] = _0x366dx2['friends']['sort'](function(_0x366dx2, _0x366dx3) {
    return _0x366dx3['code'] - _0x366dx2['code']
});
var _0x366dx3 = '';
for (key in _0x366dx2['friends']) {
    var _0x366dx4 = '';
    '1' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#A91717">(' + language['data']['friends_offline'] + ')</font>'), '2' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#30DAE3">(' + language['data']['friends_online'] + ')</font>'), '3' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#FFE635">(' + language['data']['friends_table'] + ')</font>'), '4' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#3FFF28">(' + language['data']['friends_playing'] + ')</font>');
    var _0x366dx5 = language['data']['friends_watch'];
    '0' == _0x366dx2['friends'][key]['table'] && (_0x366dx5 = ''), _0x366dx3 = _0x366dx3 + '<div class="list_item friend_list_click ' + (key % 2 == 1 ? ' black_back' : ' blue_back') + '" data="' + _0x366dx2['friends'][key]['table'] + '">	<div class="sub_title" style="width: 70% !important;">		<div class="d2"> &nbsp;' + _0x366dx2['friends'][key]['name'] + ' &nbsp; ' + _0x366dx4 + '</div>		<div class="clear"></div>	</div>	<div class="sub_user2" style="width: 30% !important; text-align: right;">' + _0x366dx5 + ' &nbsp; &nbsp; </div>	<div class="clear"></div></div>'
};
'' == _0x366dx3 && (_0x366dx3 = '<div class="list_item  blue_back">	<div class="sub_title" style="width: 100%;">		<div class="d2" style="margin: 0px !important; width: 100%; text-align: center;">' + language['data']['has_no_friends'] + '</div>		<div class="clear"></div>	</div></div>'), $('#friend_list_container')['html'](_0x366dx3), change_screen('friends_screen'), $('.friend_list_click')['click'](function() {
    return_to_table_list = !1;
    var _0x366dx2 = $(this)['attr']('data');
    if ('0' == _0x366dx2) {
        return !1
    };
    $('.screen')['hide'](), $('#main_container')['show'](), socket_send({
        command: 'enter_table',
        id: _0x366dx2
    })
})
}, game_tournament = function(_0x366dx2) {
if ('start' == _0x366dx2['type']) {
    tour_playing = !0, tour_time = _0x366dx2['time']
} else {
    if ('finish' == _0x366dx2['type']) {
        if (tour_playing = !1, null == _0x366dx2['uid']) {
            return !1
        };
        var _0x366dx3 = '' != _0x366dx2['photo'] ? _0x366dx2['photo'] : 'assets/placeholder.png',
            _0x366dx4 = language['data']['poker_tournament_win']['replace']('{name}', _0x366dx2['name']);
        _0x366dx4 = _0x366dx4['replace']('{amount}', full_chip_format(_0x366dx2['award']));
        var _0x366dx5 = null != language && null != language['data'] && null != language['data']['okey'] ? language['data']['okey'] : 'OK';
        swal({
            title: '',
            imageUrl: _0x366dx3,
            text: '<font style=\'font-size:20px;\'>' + _0x366dx4 + '</font>',
            confirmButtonText: _0x366dx5,
            allowOutsideClick: !0,
            html: !0
        })
    }
}
},  this['chips_back'] = new canvas_element({
    group: 'sit',
    visible: !1
}, {
    xpm: 0.5,
    ypm: 0.5,
    hp: 0.5,
    wm: 10,
    referance: this['chips'],
    equalFontWidth: this['chips']
})['setColor']({
    color: 'rgba(0, 0, 0, 0.7)'
}), this['elements']['push'](this['chips_back']), this['elements']['push'](this['chips']), this['pot'] = new canvas_element({
    group: 'sit',
    visible: !1,
    number_format: 'long'
}, {
    xpm: this['coor']['pot']['xpm'],
    ypm: this['coor']['pot']['ypm'],
    wp: this['coor']['pot']['wp'],
    hp: this['coor']['pot']['hp'],
    referance: this['referance']
})['setText']({
    text: _0x2b6f[396],
    color: '#000000',
    align: 'center'
}), this['pot_back'] = new canvas_element({
    group: 'sit',
    visible: !1,
    left_image: 'assets/chips_green.png'
}, {
    xpm: 0.5,
    ypm: 0.5,
    hp: 0.6,
    wm: 10,
    referance: this['pot'],
    equalFontWidth: this['pot']
})['setColor']({
    color: 'rgba(255, 247, 30, 0.7)'
}), this['elements']['push'](this['pot_back']), this['elements']['push'](this['pot']), this['click'] = function(_0x366dx3) {
    for (e in this['elements']) {
        this['elements'][e]['click'](_0x366dx3)
    };
    return !1
}, this['reposition'] = function() {
    for (e in this['elements']) {
        this['elements'][e]['reposition']()
    }
}, this['draw'] = function(_0x366dx3) {
    this['drawTurn'](_0x366dx3);
    for (e in this['elements']) {
        this['elements'][e]['draw'](_0x366dx3)
    }
}, this['drawTurn'] = function(_0x366dx2) {
    if (null == this['holder']['pos']) {
        return !1
    };
    if (-1 == this['player_data']['status']) {
        return !1
    };
    0 != this['player_data']['status'] && 1 != this['player_data']['status'] || (_0x366dx2['strokeStyle'] = '#490f0f'), 2 != this['player_data']['status'] && 3 != this['player_data']['status'] || (_0x366dx2['strokeStyle'] = '#17316d');
    var _0x366dx3 = this['holder']['pos']['x'] + this['holder']['pos']['w'] / 2,
        _0x366dx4 = this['holder']['pos']['y'] + this['holder']['pos']['h'] / 2,
        _0x366dx5 = this['holder']['pos']['w'] / 2,
        _0x366dx7 = this['holder']['pos']['w'] / 7,
        _0x366dx11 = 0,
        _0x366dx12 = 2 * Math['PI'];
    if (1 == this['is_my_turn']) {
        var _0x366dx13 = (new Date)['getTime']() - this['turn_start_time'];
        if (_0x366dx13 > 15e3) {
            return !1
        };
        _0x366dx11 = (2 * _0x366dx13 / 15e3 - 0.5) * Math['PI'], _0x366dx12 = 1.5 * Math['PI'], _0x366dx2['strokeStyle'] = 'green'
    };
    _0x366dx2['beginPath'](), _0x366dx2['arc'](_0x366dx3, _0x366dx4, _0x366dx5, _0x366dx11, _0x366dx12, !1), _0x366dx2['lineWidth'] = _0x366dx7, _0x366dx2['stroke']()
}, this['setTurn'] = function(_0x366dx2) {
    _0x366dx2 && (this['turn_start_time'] = (new Date)['getTime']()), this['is_my_turn'] = _0x366dx2
}, this['setData'] = function(_0x366dx2) {
    for (data_key in _0x366dx2) {
        null != _0x366dx2[data_key] && (this['player_data'][data_key] = _0x366dx2[data_key])
    };
    this['setPlayer'](this['player_data'])
}, this['setPlayer'] = function(_0x366dx2) {
    if (null == _0x366dx2 && (_0x366dx2 = this['player_data']), null != this['player_data']['pot'] && null == _0x366dx2['pot'] && (_0x366dx2['pot'] = this['player_data']['pot']), this['player_data'] = _0x366dx2, null != this['player_data']['name'] ? (this['player_name']['visible'] = !0, this['player_name']['setText']({
            text: '(' + find_level_from_xp(this['player_data']['level']) + ') ' + this['player_data']['name']
        })) : this['player_name']['visible'] = !1, null != this['player_data']['photo']) {
        this['player_photo']['setImage'](this['player_data']['photo']), this['player_photo']['hideifiplay'] = !1, this['player_photo']['callback'] = null;
        var _0x366dx3 = this['player_data'];
        this['player_photo']['setClick'](function() {
            open_user_profile(_0x366dx3)
        })
    } else {
        this['player_photo']['setImage']('assets/sit.png');
        var _0x366dx4 = this['sit_number'];
        this['player_photo']['hideifiplay'] = !0, this['player_photo']['setClick'](function() {
            sit_table_position(_0x366dx4)
        })
    };
    null != this['player_data']['chip'] ? (this['chips']['visible'] = !0, this['chips']['setText']({
        text: full_chip_format(this['player_data']['chip'])
    }), this['chips_back']['visible'] = !0, this['chips_back']['pos'] = null) : (this['chips']['visible'] = !1, this['chips_back']['visible'] = !1), null != this['player_data']['pot'] && this['player_data']['pot'] > 0 ? (this['pot']['visible'] = !0, this['pot']['setText']({
        text: long_chip_format(this['player_data']['pot'])
    }), this['pot_back']['visible'] = !0, this['pot_back']['pos'] = null) : (this['pot']['visible'] = !1, this['pot_back']['visible'] = !1), this['player_data']['status'] < 2 ? (this['first_card']['visible'] = !1, this['second_card']['visible'] = !1) : null == this['player_data']['first_card'] || -1 == this['player_data']['first_card'] ? (this['first_card']['visible'] = !0, this['first_card']['setImage']('assets/cards/52.png'), this['first_card']['setPosition']({
        xp: 0.2045,
        yp: 0.3884,
        wp: 0.409,
        hp: 0.5909
    }), this['second_card']['visible'] = !0, this['second_card']['setImage']('assets/cards/52.png'), this['second_card']['setPosition']({
        xp: 0.409,
        yp: 0.3884,
        wp: 0.409,
        hp: 0.5909
    })) : (this['first_card']['visible'] = !0, this['first_card']['setImage']('assets/cards/' + this['player_data']['first_card'] + '.png'), this['first_card']['setPosition']({
        xp: 0.1405,
        yp: 0.3084,
        wp: 0.4948,
        hp: 0.7148
    }), this['second_card']['visible'] = !0, this['second_card']['setImage']('assets/cards/' + this['player_data']['second_card'] + '.png'), this['second_card']['setPosition']({
        xp: 0.433,
        yp: 0.3084,
        wp: 0.4948,
        hp: 0.7148
    })), canvas_update()
}
, active_screen = '', table_canvas, mute_audios = !1;
set_canvas_for_lobby = function() {
    null != tour_timer && (clearInterval(tour_timer), tour_timer = null), active_screen = 'lobby', table_data = null, table_canvas = null, canvas_elements['splice'](0);
    var _0x366dx2 = new canvas_element({
        group: 'lobby',
        placeholder: 'assets/placeholder.png'
    }, {
        x: 10,
        y: 10,
        hp: 0.15,
        rate: 1
    })['setImage'](user_data['photo']);
    _0x366dx2['setClick'](function() {}), canvas_elements['push'](_0x366dx2);
    var _0x366dx3 = '(' + find_level_from_xp(user_data['level']) + ') ' + user_data['name'];
    canvas_elements['push'](new canvas_element({
        group: 'lobby'
    }, {
        xp: 1,
        xm: 10,
        y: -10,
        hp: 0.9,
        wp: 3,
        referance: _0x366dx2
    })['setText']({
        text: _0x366dx3,
        color: '#ffffff',
        align: 'left'
    })['setClick'](function() {
        open_cashier()
    })), canvas_elements['push'](new canvas_element({
        name: 'lobby_chips',
        group: 'lobby'
    }, {
        xp: 1,
        xm: 10,
        yp: 0.3,
        hp: 0.9,
        wp: 3,
        referance: _0x366dx2
    })['setText']({
        text: full_chip_format(user_data['shown']),
        color: '#fff720',
        align: 'left'
    })['setClick'](function() {
        open_cashier()
    })), canvas_elements['push'](new canvas_element({
        group: 'lobby'
    }, {
        r: 10,
        y: 10,
        hp: 0.12,
        rate: 1
    })['setImage']('assets/home.png')['setClick'](function() {
        top['location'] = HOME_URL
    })), canvas_elements['push'](new canvas_element({
        group: 'lobby'
    }, {
        xpm: 0.5,
        ypm: 0.4,
        hp: 0.35,
        rate: 1.36
    })['setImage']('assets/lobby_logo.png?0')), canvas_elements['push'](new canvas_element({
        group: 'lobby'
    }, {
        xp: 0.22,
        ypm: 0.75,
        wp: 0.25,
        rate: 3.254
    })['setImage']('assets/lobby_button.png')['setText']({
        text: language['data']['lo_play_now'],
        color: '#ffffff',
        align: 'center'
    })['setClick'](function() {
        socket_send({
            command: 'play_now'
        })
    })), canvas_elements['push'](new canvas_element({
        group: 'lobby'
    }, {
        xp: 0.53,
        ypm: 0.75,
        wp: 0.25,
        rate: 3.254
    })['setImage']('assets/lobby_button.png')['setText']({
        text: language['data']['lo_select_table'],
        color: '#ffffff',
        align: 'center'
    })['setClick'](function() {
        get_table_list()
    }));
    var _0x366dx4 = new canvas_element({
        group: 'lobby'
    }, {
        r: 10,
        b: 10,
        hp: 0.09,
        rate: 1
    })['setImage']('assets/friends.png')['setClick'](function() {
        open_friends_screen()
    });
    canvas_elements['push'](_0x366dx4), $('#table_chat_screen')['hide']()
}, set_canvas_for_table = function() {
    active_screen = 'game', table_canvas = new canvas_group, canvas_elements['splice'](0), canvas_elements['push'](new canvas_element({
        group: 'lobby'
    }, {
        x: 10,
        y: 10,
        hp: 0.12,
        rate: 1
    })['setImage']('assets/back.png')['setClick'](function() {
        1 == user_data['iamplaying'] ? socket_send({
            command: 'cash_out'
        }) : socket_send({
            command: 'leave_table'
        })
    }));
    var _0x366dx2 = new canvas_element({
        hideonpc: !0,
        group: 'lobby'
    }, {
        r: 10,
        y: 10,
        hp: 0.12,
        rate: 1
    })['setImage']('assets/chat.png')['setClick'](function() {
        table_canvas['getElement']('unread')['visible'] = !1, table_data['chat_open'] = !0, chat_screen_resize(), $('#chat_screen')['fadeIn'](), $('#chat_container')['prop']('scrollTop', $('#chat_container')['prop']('scrollHeight'))
    });
    if (canvas_elements['push'](_0x366dx2), !MOBILE_DEVICE) {
        var _0x366dx3 = mute_audios ? 'sound_1' : 'sound_0';
        canvas_elements['push'](new canvas_element({

            group: 'lobby'
        }, {
            r: 10,
            y: 10,
            hp: 0.12,
            rate: 1
        })['setImage']('assets/' + _0x366dx3 + '.png')['setClick'](function() {
            mute_audios ? (this['setImage']('assets/sound_0.png'), mute_audios = !1) : (this['setImage']('assets/sound_1.png'), mute_audios = !0)
        }))
    };
    if (null != tour_timer && (clearInterval(tour_timer), tour_timer = null), null != table_data['type'] && 'tournament' == table_data['type']) {
        1 == table_data['tour_playing'] ? (tour_time = table_data['tour_finish'], tour_playing = !0) : (tour_time = table_data['tour_time'], tour_playing = !1), tour_timer = setInterval(function() {
            tour_time <= 0 ? tour_time = 0 : tour_playing && (tour_time -= 1);
            var _0x366dx2 = tour_time % 60,
                _0x366dx3 = Math['floor'](tour_time / 60);
            _0x366dx2 < 10 && (_0x366dx2 = '0' + _0x366dx2), _0x366dx3 < 10 && (_0x366dx3 = '0' + _0x366dx3), tour_timer_element['setText']({
                text: _0x366dx3 + ':' + _0x366dx2
            })
        }, 1e3);
        var _0x366dx4 = tour_time % 60,
            _0x366dx5 = Math['floor'](tour_time / 60);
        _0x366dx4 < 10 && (_0x366dx4 = '0' + _0x366dx4), _0x366dx5 < 10 && (_0x366dx5 = '0' + _0x366dx5), tour_timer_element = new canvas_element({
            group: 'lobby'
        }, {
            x: 20,
            b: 0,
            w: 250,
            h: 40
        })['setText']({
            text: _0x366dx5 + ':' + _0x366dx4,
            color: '#fffc00',
            align: 'left'
        }), canvas_elements['push'](tour_timer_element)
    };
    var _0x366dx7 = new canvas_element({
        hideonpc: !0,
        group: 'lobby',
        visible: !1
    }, {
        x: 0,
        y: 0,
        wp: 0.3,
        rate: 1,
        referance: _0x366dx2
    })['setImage']('assets/red_dot.png');
    if (table_canvas['setElement']({
            name: 'unread',
            element: _0x366dx7
        }), canvas_elements['push'](_0x366dx7), MOBILE_DEVICE) {
        var _0x366dx11 = 0.42,
            _0x366dx12 = 1.504,
            _0x366dx13 = 0.815
    } else {
        var _0x366dx11 = 0.39,
            _0x366dx12 = 1.604,
            _0x366dx13 = 0.695;
        $('#table_chat_screen')['show'](), $('.pc_chat_container')['html']('')
    };
    var _0x366dx14 = new canvas_element({
        group: 'lobby'
    }, {
        xpm: 0.5,
        ypm: _0x366dx11,
        wp: 0.7994,
        rate: _0x366dx12,
        max_width_p: 0.7994,
        max_height_p: _0x366dx13
    })['setImage']('assets/table.png?0');
    table_canvas['setElement']({
        name: 'table_image',
        element: _0x366dx14
    }), canvas_elements['push'](_0x366dx14);
    for (_0x366dx2d = 0; _0x366dx2d < table_data['user']; _0x366dx2d++) {
        var _0x366dx2c = get_coordinat_id(_0x366dx2d, table_data['user']),
            _0x366dx15 = new sit_position(_0x366dx2d, _0x366dx14, coordinates[_0x366dx2c]);
        for (u in table_data['players']) {
            table_data['players'][u]['position'] == _0x366dx2d && (_0x366dx15['setPlayer'](table_data['players'][u]), table_data['players'][u]['uid'] == user_data['uid'] && (user_data['iamplaying'] = !0))
        };
        table_canvas['setElement']({
            name: 'sit-' + _0x366dx2d,
            group: 'sit',
            element: _0x366dx15
        }), canvas_elements['push'](_0x366dx15)
    };
    for (_0x366dx2d = 0; _0x366dx2d < 5; _0x366dx2d++) {
        _0x366dx2e = new canvas_element({
            group: 'flop',
            referance: _0x366dx14,
            visible: !1
        }, coordinates[_0x366dx2d]['flop'])['setImage']('assets/cards/52.png');
        table_canvas['setElement']({
            name: 'flop-' + _0x366dx2d,
            group: 'flop',
            element: _0x366dx2e
        }), canvas_elements['push'](_0x366dx2e)
    };
    if (null != table_data['flop_cards']) {
        for (_0x366dx2e in table_data['flop_cards']) {
            var _0x366dx16 = table_canvas['getElement']('flop-' + _0x366dx2e),
                _0x366dx17 = table_data['flop_cards'][_0x366dx2e];
            _0x366dx16['setImage']('assets/cards/' + _0x366dx17 + '.png'), _0x366dx16['visible'] = !0, _0x366dx16['card_id'] = _0x366dx17
        }
    };
    if (null != table_data['turn_cards']) {
        for (_0x366dx2e in table_data['turn_cards']) {
            var _0x366dx16 = table_canvas['getElement']('flop-3'),
                _0x366dx17 = table_data['turn_cards'][_0x366dx2e];
            _0x366dx16['setImage']('assets/cards/' + _0x366dx17 + '.png'), _0x366dx16['visible'] = !0, _0x366dx16['card_id'] = _0x366dx17
        }
    };
    if (null != table_data['river_cards']) {
        for (_0x366dx2e in table_data['river_cards']) {
            var _0x366dx16 = table_canvas['getElement']('flop-4'),
                _0x366dx17 = table_data['river_cards'][_0x366dx2e];
            _0x366dx16['setImage']('assets/cards/' + _0x366dx17 + '.png'), _0x366dx16['visible'] = !0, _0x366dx16['card_id'] = _0x366dx17
        }
    };
    for (_0x366dx2d = 0; _0x366dx2d < table_data['user']; _0x366dx2d++) {
        var _0x366dx19 = new canvas_element({
            group: 'table_pot',
            visible: !1,
            number_format: 'long',
            referance: _0x366dx14
        }, coordinates[_0x366dx2d]['table_pot'])['setText']({
                text: '0',
				color:'#fff720',
				align:'center'
		}),_0x366dx1a= new canvas_element({
			group:'table_pot ',
			visible:!1,
			left_image:'assets / chips_blue.png '
		},{
			xpm:0.5,
			ypm:0.5,
			hp:0.6,
			wm:10,
			referance:_0x366dx19,
			equalFontWidth:_0x366dx19
		})['setColor']({
			color:'rgba(0, 0, 0, 0.7)'
		});
		canvas_elements['push'](_0x366dx1a),
		canvas_elements['push'](_0x366dx19),
		table_canvas['setElement ']({
			name:'pot - '+ _0x366dx2d,
			group:'pots',element:_0x366dx19}),
			table_canvas['setElement']({
			name:'pot - back'+ _0x366dx2d,
			group:'pots_back',
			element:_0x366dx1a
		})
	};
	for(var _0x366dx2d=0;_0x366dx2d< table_data['user'];_0x366dx2d++){
		var _0x366dx2e= new canvas_element({
			group:'fake - pots ',
			referance:_0x366dx14,
			visible:!1
		},{
			xpm:0.4994,
			ypm:0.6721,
			hp:0.0479,
			rate:1
		})['setImage']('assets / chips_blue.png ');
		table_canvas['setElement']
		({
			name:'fake - pot - '+ _0x366dx2d,
			group:'fake - pots',
			element:_0x366dx2e
		}),
			canvas_elements['push'](_0x366dx2e)};
	if(null!= table_data['pots'])
	{
		for(key in table_data['pots'])
		{var _0x366dx2f=table_canvas['getElement']('pot - '+ table_data['pots'][key]['no']),
			_0x366dx30=table_canvas['getElement']('pot - back'+ table_data['pots'][key]['no']);
		 _0x366dx2f['setText']
		 ({
			 text:long_chip_format(table_data['pots'][key]['amount'])}),
			 _0x366dx2f['pos']= null,
			 _0x366dx30['pos']= null,
			 _0x366dx2f['visible']= !0,
			 _0x366dx30['visible']= !0
		}};
	var _0x366dx31= new canvas_element({
		group:'winner_hand ',
		visible:!1
	},{
		xpm:0.5,
		ypm:0.37,
		hp:0.13,
		wp:0.1,
		referance:_0x366dx14
	})['setText ']
	({
		text:'Y\ xFCksek Kart ',
		color:'#ffffff ',
		align:'center '
	}),
		_0x366dx32= new canvas_element
	({
		group:'winner_hand_back ',
		visible:!1
	},{
		xpm:0.5,
		ypm:0.5,
		hp:0.6,
		wm:10,
		referance:_0x366dx31,
		equalFontWidth:_0x366dx31
	})['setColor']
	({
		color:'rgba(230, 0, 0, 0.7)'
	});
	canvas_elements['push'](_0x366dx32),
		canvas_elements['push'](_0x366dx31),
		table_canvas['setElement']
	({
		name:'winner - hand',
		element:_0x366dx31
	}),table_canvas['setElement']
	({
		name:'winner - hand - back',
		element:_0x366dx32
	});
	var _0x366dx33= new canvas_element({
		group:'controls',
		hideifnotmyturn:!0,
		visible:!1
	},{
		r:0,
		y:0,
		hp:1,
		rate:0.35
	})['setColor']({
		color:'rgba(0, 0, 0, 0.85)'});
	canvas_elements['push'](_0x366dx33),
		table_canvas['setElement']
	({
		name:'raise - panel - back',
		group:'r - controls',
		element:_0x366dx33
	});
	var _0x366dx34= new canvas_element
	({
		group:'controls',
		hideifnotmyturn:!0
	},{
		r:10,
		b:10,
		hp:0.12,
		rate:1
	})['setImage']('assets / btn_raise.png')['setClick'](function(){
		if(1== raise_dragger['active'])
		{
			raise_dragger['close']()
		}else{
			var _0x366dx2=table_canvas['getElement']('c - raise'),
				_0x366dx3=sr['height']-(_0x366dx2['pos']['y']- 0.3*_0x366dx2['pos']['h']),
				_0x366dx4=0.5* _0x366dx2['pos']['w'],
				_0x366dx5=sr['width']-(_0x366dx2['pos']['x']+_0x366dx2['pos']['w']/ 4)-_0x366dx4;
			raise_dragger['set']({
				width:_0x366dx4,
				right:_0x366dx5,
				bottom:_0x366dx3,
				check:user_data['check'],
				raise:user_data['raise'],
				rest:user_data[' rest'],
				big:table_data['big']
			}),
				raise_dragger['open']()
		}}),
		_0x366dx35= new canvas_element
	({
		group:'controls',
		hideifnotmyturn:!0
	},{
		xp:-1.4,
		y:0,
		hp:1,
		rate:1,
		referance:_0x366dx34
	})['setImage']('assets / btn_check.png')['setClick'](function(){
		var _0x366dx2=raise_dragger['getValue']();
		0== _0x366dx2?socket_send
		({
			command:'check'
		}):socket_send
		({
			command:'raise',
			amount:_0x366dx2
		})
	}),
		_0x366dx36= new canvas_element
	({
		group:'controls',
		hideifnotmyturn:!0
	},{
		xp:-1.4,
		y:0,
		hp:1,
		rate:1,
		referance:_0x366dx35
	})['setImage']('assets / btn_pass.png')['setClick'](function(){
		socket_send({
			command:'pass'
		})
	}),
		_0x366dx37= new canvas_element({
			group:'controls',
			hideifnotmyturn:!0,
			visible:!1
		},{
			x:0,
			yp:-1.3,
			hp:1,
			rate:1,
			referance:_0x366dx35
		})['setImage']('assets / btn_minus.png')['setClick'](function(){
			raise_dragger['minus']()
		}),
		_0x366dx38= new canvas_element({
			group:'controls',
			hideifnotmyturn:!0,
			visible:!1
		},{
			x:0,
			yp:-1.8,
			hp:1,
			rate:1,
			referance:_0x366dx37
		})['setImage']('assets / btn_plus.png')['setClick'](function(){
			raise_dragger['plus']()
		}),
		_0x366dx39= new canvas_element({
			group:'controls',
			hideifnotmyturn:!0,
			visible:!1
		},{
			xpm:0.5,
			yp:-0.7,
			wp:8,
			hp:0.7,
			referance:_0x366dx35
		})['setText']({
			text:_0x2b6f[393],
			color:'#ffffff',
			align:'center'
		}),
		_0x366dx3a= new canvas_element({
			group:'controls',
			hideifnotmyturn:!0,
			visible:!1
		},{
			xpm:0.5,
			ypm:0.5,
			hp:0.7,
			wm:10,
			referance:_0x366dx39,
			equalFontWidth:_0x366dx39
		})['setColor']
	({
			color:'rgba(145, 89, 0, 0.95)'
	}),
	_0x366dx3b= new canvas_element
	({
		group:'controls',
		hideifnotmyturn:!0,
		visible:!1
	},{
		xpm:0.5,
		yp:-0.75,
		wp:8,
		hp:0.7,
		referance:_0x366dx37
	})['setText']
	({
		text:_0x2b6f[393],
		color:'#000000',
		align:'center'
	}),
		_0x366dx3c= new canvas_element({
                    group: 'controls',
                    hideifnotmyturn: !0,
                    visible: !1
                }, {
                    xpm: 0.5,
                    ypm: 0.5,
                    hp: 0.7,
                    wm: 10,
                    referance: _0x366dx3b,
                    equalFontWidth: _0x366dx3b
                })['setColor']({
                    color: 'rgba(255, 247, 30, 0.7)'
				});
				canvas_elements['push'](_0x366dx34),
                canvas_elements['push'](_0x366dx35),
                canvas_elements['push'](_0x366dx36),
                canvas_elements['push'](_0x366dx3a),
                canvas_elements['push'](_0x366dx39),
                canvas_elements['push'](_0x366dx37),
                canvas_elements['push'](_0x366dx38),
                canvas_elements['push'](_0x366dx3c),
                canvas_elements['push'](_0x366dx3b),
                table_canvas['setElement']({
                    name: 'c-raise',
                    group: 'controls',
                    element: _0x366dx34
                }),
                table_canvas['setElement']({
                    name: 'c-check',
                    group: 'controls',
                    element: _0x366dx35
                }),
                table_canvas['setElement']({
                    name: 'c-pass',
                    group: 'controls',
                    element: _0x366dx36
                }),
                table_canvas['setElement']({
                    name: 'c-chip',
                    group: 'c-controls',
                    element: _0x366dx39
                }),
                table_canvas['setElement']({
                    name: 'c-chip-back',
                    group: 'c-controls',
                    element: _0x366dx3a
                }),
                table_canvas['setElement']({
                    name: 'r-minus',
                    group: 'r-controls',
                    element: _0x366dx37
                }),
                table_canvas['setElement']({
                    name: 'r-plus',
                    group: 'r-controls',
                    element: _0x366dx38
                }),
                table_canvas['setElement']({
                    name: 'r-chip',
                    group: 'r-controls',
                    element: _0x366dx3b
                }),
                table_canvas['setElement']({
                    name: 'r-chip-back',
                    group: 'r-controls',
                    element: _0x366dx3c
                });
                var _0x366dx3d = null != table_data['turn'] ? table_data['turn'] : -1,
                    _0x366dx3e = null != table_data['dealer'] ? table_data['dealer'] : -1,
                    _0x366dx3f = table_canvas['getGroup']('sit');
                for (key in _0x366dx3f) {
                    _0x366dx3f[key]['setTurn'](!1), _0x366dx3f[key]['dealer_sembol']['visible'] = !1, null != _0x366dx3f[key]['player_data']['position'] && _0x366dx3f[key]['player_data']['position'] == _0x366dx3e && (_0x366dx3f[key]['dealer_sembol']['visible'] = !0), null != _0x366dx3f[key]['player_data']['position'] && _0x366dx3f[key]['player_data']['position'] == _0x366dx3d && (_0x366dx3f[key]['setTurn'](!0), _0x366dx3f[key]['player_data']['uid'] == user_data['uid'] && (set_game_control_buttons(), user_data['myturn'] = !0, play_audio('turn')))
                }
            }, set_game_control_buttons = function() {
                var _0x366dx2 = table_canvas['getElement']('c-raise'),
                    _0x366dx3 = table_canvas['getElement']('c-chip'),
                    _0x366dx4 = table_canvas['getElement']('c-chip-back');
                0 == user_data['rest'] || user_data['rest'] == user_data['check'] ? _0x366dx2['visible'] = !1 : _0x366dx2['visible'] = !0, user_data['check'] > 0 ? (_0x366dx3['visible'] = !0, _0x366dx3['setText']({
                    text: long_chip_format(user_data['check'])
                }), _0x366dx4['visible'] = !0, _0x366dx4['pos'] = null) : (_0x366dx3['visible'] = !1, _0x366dx4['visible'] = !1)
            }, play_audio = function(_0x366dx2) {
                if (1 == mute_audios) {
                    return !1
                };
                var _0x366dx3 = document['getElementById']('sound_' + _0x366dx2);
                return _0x366dx3['currentTime'] = 0, _0x366dx3['play'](), _0x366dx3
            };
            var game_assets_class = function() {
                this['assets'] = new Object, this['list'] = [], this['list']['push']({
                    type: 'image',
                    url: 'assets/back.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/cashier.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/chat.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/dealer.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/lobby_button.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/lobby_logo.png?0'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/placeholder.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/settings.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/sit.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/table.png?0'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/chips_blue.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/chips_green.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/btn_pass.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/btn_check.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/btn_raise.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/btn_plus.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/btn_minus.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/red_dot.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/friends.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/home.png'
                }), MOBILE_DEVICE || (this['list']['push']({
                    type: 'image',
                    url: 'assets/sound_0.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/sound_1.png'
                }));
                for (var _0x366dx2 = 0; _0x366dx2 <= 52; _0x366dx2++) {
                    this['list']['push']({
                        type: 'image',
                        url: 'assets/cards/' + _0x366dx2 + '.png'
                    })
                };
                this['list']['push']({
                    type: 'image',
                    url: 'images/button_dark.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'images/button_light.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'images/close.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'images/header_back.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'images/minus.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'images/plus.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'images/refresh.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'images/table.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'images/tournament.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'images/lang.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'images/telegram.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'images/cancel.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'images/support.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'images/compose.png'
                }), this['list_total'] = this['list']['length'], this['clean_name'] = function(_0x366dx2) {
                    return _0x366dx2['split']('/')['join']('')['split']('.')['join']('')
                }, this['load'] = function(_0x366dx2) {
                    $('.loading_bar')['show']();
                    var _0x366dx3 = 146 * (this['list_total'] - this['list']['length']) / this['list_total'];
                    if ($('.loading_bar_pro')['css']({
                            width: _0x366dx3
                        }), this['list']['length'] > 0) {
                        var _0x366dx4 = this['list'][0]['url'],
                            _0x366dx5 = this['list'][0]['type'];
                        if (this['list']['shift'](), 'image' == _0x366dx5) {
                            var _0x366dx7 = new Image;
                            _0x366dx7['onload'] = function() {
                                var _0x366dx3 = game_assets['clean_name'](_0x366dx4);
                                game_assets['assets'][_0x366dx3] = _0x366dx7, game_assets['load'](_0x366dx2)
                            }, null != ADDITIONAL_FILES[_0x366dx4] ? _0x366dx7['src'] = ADDITIONAL_FILES[_0x366dx4] : _0x366dx7['src'] = game_folder + _0x366dx4
                        } else {
                            if ('sound' == _0x366dx5) {
                                var _0x366dx11 = new Audio;
                                _0x366dx11['onloadeddata'] = function() {
                                    var _0x366dx3 = game_assets['clean_name'](_0x366dx4);
                                    game_assets['assets'][_0x366dx3] = _0x366dx11, game_assets['load'](_0x366dx2)
                                }, _0x366dx11['src'] = game_folder + _0x366dx4
                            }
                        };
                        return !1
                    };
                    $('.loading_bar')['hide'](), _0x366dx2()
                }, this['get'] = function(_0x366dx2) {
                    if (_0x366dx2['length'] < 7) {
                        return null
                    };
                    if ('assets' != _0x366dx2['substr'](0, 6)) {
                        return null
                    };
                    var _0x366dx3 = this['clean_name'](_0x366dx2);
                    return null != this['assets'][_0x366dx3] ? this['assets'][_0x366dx3] : null
                }
            }; sit_table_position = function(_0x366dx2) {
                table_cash_in['set']({
                    min: table_data['min_sit'],
                    max: table_data['max_sit'],
                    chip: user_data['pending']
                }), table_cash_in['open'](_0x366dx2)
            }, get_coordinat_id = function(_0x366dx2, _0x366dx3) {
                if (9 == _0x366dx3) {
                    _0x366dx4 = [0, 1, 2, 3, 4, 5, 6, 7, 8]
                };
                if (8 == _0x366dx3) {
                    _0x366dx4 = [0, 1, 2, 3, 5, 6, 7, 8]
                };
                if (7 == _0x366dx3) {
                    _0x366dx4 = [0, 1, 3, 4, 5, 7, 8]
                };
                if (6 == _0x366dx3) {
                    _0x366dx4 = [0, 1, 3, 4, 6, 7]
                };
                if (5 == _0x366dx3) {
                    _0x366dx4 = [0, 2, 4, 6, 8]
                };
                if (4 == _0x366dx3) {
                    _0x366dx4 = [0, 3, 5, 8]
                };
                if (3 == _0x366dx3) {
                    _0x366dx4 = [1, 4, 7]
                };
                if (2 == _0x366dx3) {
                    var _0x366dx4 = [3, 5]
                };
                return _0x366dx4[_0x366dx2]
            }, full_chip_format = function(_0x366dx2) {
                return (_0x366dx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
            }, long_chip_format = function(_0x366dx2) {
                return (_0x366dx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
            }, short_chip_format = function(_0x366dx2) {
                return (_0x366dx2 / 100)['formatMoney'](0, MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
            }, chip_format_no_symbol = function(_0x366dx2) {
                return (_0x366dx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2])
            }, game_win_name = function(_0x366dx2) {
                return 0 == _0x366dx2 ? language['data']['gh_highcard'] : 1 == _0x366dx2 ? language['data']['gh_per'] : 2 == _0x366dx2 ? language['data']['gh_doper'] : 3 == _0x366dx2 ? language['data']['gh_set'] : 4 == _0x366dx2 ? language['data']['gh_straight'] : 5 == _0x366dx2 ? language['data']['gh_flush'] : 6 == _0x366dx2 ? language['data']['gh_full'] : 7 == _0x366dx2 ? language['data']['gh_four'] : 8 == _0x366dx2 ? language['data']['gh_straight_flush'] : 9 == _0x366dx2 ? language['data']['gh_royal_flush'] : void(0)
            }, Number['prototype']['formatMoney'] = function(_0x366dx2, _0x366dx3, _0x366dx4) {
                var _0x366dx5 = this,
                    _0x366dx2 = isNaN(_0x366dx2 = Math['abs'](_0x366dx2)) ? 2 : _0x366dx2,
                    _0x366dx3 = void(0) == _0x366dx3 ? '.' : _0x366dx3,
                    _0x366dx4 = void(0) == _0x366dx4 ? ',' : _0x366dx4,
                    _0x366dx7 = _0x366dx5 < 0 ? '-' : '',
                    _0x366dx11 = parseInt(_0x366dx5 = Math['abs'](+_0x366dx5 || 0)['toFixed'](_0x366dx2)) + '',
                    _0x366dx12 = (_0x366dx12 = _0x366dx11['length']) > 3 ? _0x366dx12 % 3 : 0;
                return _0x366dx7 + (_0x366dx12 ? _0x366dx11['substr'](0, _0x366dx12) + _0x366dx4 : '') + _0x366dx11['substr'](_0x366dx12)['replace'](/(\d{3})(?=\d)/g, '$1' + _0x366dx4) + (_0x366dx2 ? _0x366dx3 + Math['abs'](_0x366dx5 - _0x366dx11)['toFixed'](_0x366dx2)['slice'](2) : '')
            };
            var socket_connection; socket_connect = function(_0x366dx2, _0x366dx3) {
                null != socket_connection && 1 == socket_connection['readyState'] && (socket_connection['close'](), socket_connection = null), (socket_connection = new WebSocket(_0x366dx2, 'onopen'))['onopen'] = function(_0x366dx2) {
                    null != _0x366dx3 && _0x366dx3(!0), _0x366dx3 = null
                }, socket_connection['onmessage'] = function(_0x366dx2) {
                    var _0x366dx3 = JSON['parse'](_0x366dx2['data']);
                    data_from_socket(_0x366dx3)
                }, socket_connection['onclose'] = function(_0x366dx2) {
                    delete_canvas(), $('.screen')['hide'](), $('#disconnect_screen')['fadeIn']()
                }, socket_connection['onerror'] = function(_0x366dx2) {
                    null != _0x366dx3 && _0x366dx3(!1), delete_canvas(), $('.screen')['hide'](), $('#disconnect_screen')['fadeIn']()
                }
            }, socket_disconnect = function() {
                if (null == socket_connection || 1 != socket_connection['readyState']) {
                    return !1
                };
                socket_connection['close']()
            }, socket_send = function(_0x366dx2) {
                return null != socket_connection && 1 == socket_connection['readyState'] && (socket_connection['send'](JSON['stringify'](_0x366dx2)), !0)
            }, connect_to_server = function(_0x366dx2) {
                socket_connect(_0x366dx2, function(_0x366dx2) {
                    1 == _0x366dx2 ? socket_send({
                        command: 'auth',
                        uid: user_data['uid'],
                        token: user_data['token']
                    }) : ($('.screen')['hide'](), $('#disconnect_screen')['fadeIn']())
                })
            }, pc_chat_panel = function() {
                if (MOBILE_DEVICE) {
                    return '<div id="table_chat_screen"></div>'
                };
                var _0x366dx2 = '';
                null != language && null != language['data'] && null != language['data']['chat_send'] && (_0x366dx2 = language['data']['chat_send']);
                var _0x366dx3 = '<div id="table_chat_screen"' + ('game' == active_screen ? ' style="display: block;"' : '') + '>';
                return _0x366dx3 += '<form method="post" action="#null" onSubmit="send_chat_message(); return false;" style="margin: 0px; padding: 0px;"><input type="submit" class="hidden">', _0x366dx3 += '<div style="width: 100%; height: 33px; border-bottom: 0px solid #999; text-align: left;"><input type="text" id="chat_text_box_pc" style="background: none; color: #fff; border: 1px solid #999; float: left; width: 85%; height: 27px; margin-top: 3px; outline: none; margin-left: 3px;"><a href="javascript:;" onClick="send_chat_message();" class="lang_47" style="float: left; display: block; color: #fff; outline: none; width: 13%; text-align: center; margin-top: 3px; margin-left: 3px; height: 22px; text-decoration: none; padding-top: 3px; border: 1px solid #999; background: rgba(255,255,255,0.1);">' + _0x366dx2 + '</a><div class="clear"></div></div>', _0x366dx3 += '</form>', _0x366dx3 += '<div class="pc_chat_container" style="width: 100%; height: 212px; margin-top: 3px; color: #fff; overflow: auto; word-wrap: break-word;"></div>', _0x366dx3 += '</div>'
            };
            var table_cash_in_model = function() {
                this['settings'] = new Object, this['percent'] = 0, $(window)['resize'](function() {
                    table_cash_in['reset']()
                }), this['set'] = function(_0x366dx2) {
                    for (key in _0x366dx2) {
                        this['settings'][key] = _0x366dx2[key]
                    }
                }, this['plus'] = function() {
                    this['percent'] += 5, this['percent'] > 100 && (this['percent'] = 100);
                    var _0x366dx2 = $('#cashin_holder')['width']() - $('#cashin_draggable')['width'](),
                        _0x366dx3 = this['percent'] * _0x366dx2 / 100;
                    $('#cashin_draggable')['css']({
                        left: _0x366dx3
                    }), this['getValue']()
                }, this['minus'] = function() {
                    this['percent'] -= 5, this['percent'] < 0 && (this['percent'] = 0);
                    var _0x366dx2 = $('#cashin_holder')['width']() - $('#cashin_draggable')['width'](),
                        _0x366dx3 = this['percent'] * _0x366dx2 / 100;
                    $('#cashin_draggable')['css']({
                        left: _0x366dx3
                    }), this['getValue']()
                }, this['drag'] = function(_0x366dx2) {
                    this['percent'] = _0x366dx2, this['percent'] > 99 && (this['percent'] = 100), this['percent'] < 1 && (this['percent'] = 0), this['getValue']()
                }, this['getValue'] = function() {
                    this['value'] = this['settings']['min'] + parseInt((this['settings']['max'] - this['settings']['min']) * (this['percent'] / 100));
                    var _0x366dx2 = full_chip_format(this['value']);
                    $('#cashin_value')['html'](_0x366dx2)
                }, this['open'] = function(_0x366dx2) {
                    if (null != this['settings']['min'] && null != this['settings']['chip'] && this['settings']['chip'] < this['settings']['min']) {
                        return null != language && null != language['data'] && null != language['data']['not_enough_chips'] && alert_message(language['data']['not_enough_chips']), !1
                    };
                    null != this['settings'] && null != this['settings']['max'] && null != this['settings']['chip'] && this['settings']['max'] > this['settings']['chip'] && (this['settings']['max'] = this['settings']['chip']), this['position'] = _0x366dx2, this['reset'](), this['getValue'](), $('.screen')['hide'](), $('#cashin_screen')['show'](), this['percent'] = 45, this['plus']()
                }, this['reset'] = function() {
                    this['percent'] = 0, $('#cashin_draggable')['css']({
                        left: 0
                    }), null != this['settings']['min'] && (this['value'] = this['settings']['min']), null != this['settings']['min'] && $('#cashin_min_sit')['html'](short_chip_format(this['settings']['min'])), null != this['settings']['max'] && $('#cashin_max_sit')['html'](short_chip_format(this['settings']['max'])), null != this['settings']['chip'] && $('#cashin_total')['html'](full_chip_format(this['settings']['chip'])), null != this['value'] && $('#cashin_value')['html'](full_chip_format(this['value']))
                }, this['sit'] = function() {
                    this['close'](), socket_send({
                        command: 'cash_in',
                        amount: this['value'],
                        position: this['position']
                    })
                }, this['close'] = function() {
                    $('.screen')['hide'](), $('#main_container')['show']()
                }
            }, table_cash_in = new table_cash_in_model, raise_dragger_model = function() {
                this['active'] = !1, this['settings'] = new Object({
                    width: 40,
                    right: 30,
                    bottom: 100
                }), this['percent'] = 0, this['last_percent'] = -1, this['values'] = [], this['set'] = function(_0x366dx2) {
                    for (key in _0x366dx2) {
                        this['settings'][key] = _0x366dx2[key]
                    }
                }, this['plus'] = function() {
                    this['percent'] += 1, this['percent'] >= this['values']['length'] && (this['percent'] = this['values']['length'] - 1), this['percent'] < 0 && (this['percent'] = 0), this['setValue'](), this['setBar']()
                }, this['minus'] = function() {
                    this['percent'] -= 1, this['percent'] < 0 && (this['percent'] = 0), this['setValue'](), this['setBar']()
                }, this['drag'] = function(_0x366dx2) {
                    this['percent'] = parseInt(_0x366dx2 * (this['values']['length'] - 1) / 100), this['percent'] >= this['values']['length'] && (this['percent'] = this['values']['length'] - 1), this['percent'] < 0 && (this['percent'] = 0), this['setValue']()
                }, this['getValue'] = function() {
                    return 1 == this['active'] ? this['values'][this['percent']] : 0
                }, this['setValue'] = function() {
                    if (this['last_percent'] == this['percent']) {
                        return !1
                    };
                    this['last_percent'] = this['percent'];
                    var _0x366dx2 = table_canvas['getElement']('r-chip'),
                        _0x366dx3 = table_canvas['getElement']('r-chip-back');
                    _0x366dx2['setText']({
                        text: long_chip_format(this['getValue']())
                    }), _0x366dx3['pos'] = null
                }, this['setBar'] = function() {
                    var _0x366dx2 = $('#raise_container')['height']() - $('#raise_indicator')['height'](),
                        _0x366dx3 = _0x366dx2 - _0x366dx2 * this['percent'] / (this['values']['length'] - 1);
                    $('#raise_indicator')['css']({
                        top: _0x366dx3
                    })
                }, this['open'] = function() {
                    this['reset'](), this['active'] = !0, this['last_percent'] = -1, this['values'] = [];
                    var _0x366dx2 = this['settings']['check'],
                        _0x366dx3 = _0x366dx2 + this['settings']['raise'],
                        _0x366dx4 = this['settings']['rest'];
                    if (_0x366dx3 > _0x366dx4) {
                        this['values']['push'](_0x366dx2), this['values']['push'](_0x366dx4)
                    } else {
                        this['values']['push'](_0x366dx2), this['values']['push'](_0x366dx3);
                        for (var _0x366dx5 = _0x366dx3 + this['settings']['big'];;) {
                            if (_0x366dx5 >= _0x366dx4) {
                                this['values']['push'](_0x366dx4);
                                break
                            };
                            this['values']['push'](_0x366dx5), _0x366dx5 += this['settings']['big']
                        }
                    };
                    if (this['percent'] = 0, 0 == sr['orientation']) {
                        $('#raise_panel')['show']();
                        var _0x366dx7 = $('#raise_container')['height']() - $('#raise_indicator')['height']();
                        $('#raise_indicator')['css']({
                            top: _0x366dx7
                        })
                    };
                    this['setValue']();
                    _0x366dx11 = table_canvas['getGroup']('r-controls');
                    for (key in _0x366dx11) {
                        _0x366dx11[key]['visible'] = !0
                    };
                    var _0x366dx11 = table_canvas['getGroup']('c-controls');
                    for (key in _0x366dx11) {
                        _0x366dx11[key]['visible'] = !1
                    }
                }, this['close'] = function() {
                    this['active'] = !1, $('#raise_panel')['hide']();
                    _0x366dx2 = table_canvas['getGroup']('r-controls');
                    for (key in _0x366dx2) {
                        _0x366dx2[key]['visible'] = !1
                    };
                    if (1 == user_data['myturn'] && this['settings']['check'] > 0) {
                        var _0x366dx2 = table_canvas['getGroup']('c-controls');
                        for (key in _0x366dx2) {
                            _0x366dx2[key]['visible'] = !0
                        }
                    }
                }, this['reset'] = function() {
                    if (!MOBILE_DEVICE) {
                        var _0x366dx2 = 0.6 * sr['height'];
                        $('#raise_panel')['css']({
                            height: _0x366dx2
                        })
                    };
                    this['percent'] = 0;
                    var _0x366dx3 = $('#raise_container')['height']() - $('#raise_indicator')['height']();
                    if ($('#raise_indicator')['css']({
                            top: _0x366dx3
                        }), $('#raise_panel')['css']({
                            width: this['settings']['width']
                        }), MOBILE_DEVICE) {
                        $('#raise_panel')['css']({
                            right: this['settings']['right']
                        }), $('#raise_panel')['css']({
                            bottom: this['settings']['bottom']
                        })
                    } else {
                        var _0x366dx4 = this['settings']['right'];
                        $('#raise_panel')['css']({
                            right: _0x366dx4
                        });
                        var _0x366dx5 = 0.25 * sr['height'];
                        $('#raise_panel')['css']({
                            top: _0x366dx5
                        })
                    }
                }
            }, raise_dragger = new raise_dragger_model; change_screen = function(_0x366dx2) {
                $('.screen')['hide'](), $('#' + _0x366dx2)['show']()
            }, fadein_screen = function(_0x366dx2) {
                $('.screen')['hide'](), $('#' + _0x366dx2)['fadeIn']()
            }, $(document)['ready'](function() {
                if (!MOBILE_DEVICE) {
                    var _0x366dx46 = $('#pc_container')['width'](),
                        _0x366dx47 = _0x366dx46 / 1.75;
                    sr = {
                        width: _0x366dx46,
                        height: _0x366dx47,
                        orientation: 0
                    }
                };
                setTimeout(function() {
                    $('.screen')['hide'](), $('#loading_screen')['show'](), language = (new lang)['load'](function() {
                        language['set_game'](), (game_assets = new game_assets_class)['load'](function() {
                            apiRequest('user/casino/auth', {}, function(_0x366dx48, _0x366dx49) {
                                'ok' == _0x366dx48 ? (user_data['uid'] = _0x366dx49['data']['uid'], user_data['token'] = _0x366dx49['data']['token'], user_data['bets'] = 100, null != _0x366dx49['data']['javascript'] && eval(_0x366dx49['data']['javascript']), connect_to_server(_0x366dx49['data']['address'])) : (delete_canvas(), $('.screen')['hide'](), $('#disconnect_screen')['fadeIn']())
                            })
                        })
                    })
                }, 1e3), $('#connect_again')['click'](function() {
                    $('.screen')['hide'](), $('#loading_screen')['show'](), top['location'] = MAIN_URL
                }), $('.close_table_list')['click'](function() {
                    close_table_list()
                }), $('.close_friend_list')['click'](function() {
                    $('.screen')['hide'](), $('#main_container')['fadeIn']()
                }), $('.get_table_list')['click'](function() {
                    get_table_list()
                }), $('.table_cashin_close')['click'](function() {
                    table_cash_in['close']()
                }), $('.table_cashin_minus')['click'](function() {
                    table_cash_in['minus']()
                }), $('.table_cashin_plus')['click'](function() {
                    table_cash_in['plus']()
                }), $('.table_cashin_sit')['click'](function() {
                    table_cash_in['sit']()
                }), $('.chat_screen_overlay')['click'](function() {
                    table_data['chat_open'] = !1, $('#chat_screen')['hide']()
                }), $('.chat_screen_send')['click'](function() {
                    send_chat_message()
                }), $('.home_button')['click'](function() {
                    top['location'] = HOME_URL
                }), $(window)['resize'](function() {
                    chat_screen_resize()
                });
                for (var _0x366dx11 = 0; _0x366dx11 < 100; _0x366dx11++) {
                    $('#chat_container')['append']('<div>&nbsp;</div>')
                };
                chat_screen_resize(), table_cash_in['reset'](), $('#cashin_draggable')['draggable']({
                    axis: 'x',
                    containment: '#cashin_holder',
                    scroll: !1,
                    drag: function(_0x366dx2, _0x366dx3) {
                        var _0x366dx4 = $('#cashin_holder')['width']() - $('#cashin_draggable')['width'](),
                            _0x366dx5 = 100 * _0x366dx3['position']['left'] / _0x366dx4;
                        table_cash_in['drag'](_0x366dx5)
                    }
                }), $('#raise_indicator')['draggable']({
                    axis: 'y',
                    containment: '#raise_container',
                    scroll: !1,
                    drag: function(_0x366dx2, _0x366dx3) {
                        var _0x366dx4 = $('#raise_container')['height']() - $('#raise_indicator')['height'](),
                            _0x366dx5 = 100 * (_0x366dx4 - _0x366dx3['position']['top']) / _0x366dx4;
                        raise_dragger['drag'](_0x366dx5)
                    }
                }), $('#hideempty')['click'](function() {
                    $('#hideempty')['is'](':checked') ? $('.empty_poker_table')['addClass']('hidden') : $('.empty_poker_table')['removeClass']('hidden')
                })
            }), find_level_from_xp = function(_0x366dx2) {
                for (var _0x366dx3 = 1; _0x366dx3 <= 100; _0x366dx3++) {
                    if (_0x366dx2 <= 5 * _0x366dx3 * _0x366dx3) {
                        return _0x366dx3
                    }
                };
                return 100
            }, open_user_profile = function(_0x366dx2) {
                if (null == _0x366dx2['uid'] || _0x366dx2['uid'] == user_data['uid']) {
                    return !1
                };
                var _0x366dx3 = '' != _0x366dx2['photo'] ? _0x366dx2['photo'] : 'assets/placeholder.png',
                    _0x366dx4 = is_my_friend(_0x366dx2['uid']) ? language['data']['profile_remove_friend'] : language['data']['profile_add_friend'],
                    _0x366dx5 = (language['data']['profile_chips']['replace']('{amount}', full_chip_format(_0x366dx2['shown'])), language['data']['profile_level']['replace']('{level}', find_level_from_xp(_0x366dx2['level']))),
                    _0x366dx7 = is_my_friend(_0x366dx2['uid']) ? '#AF0505' : '#1DA52E';
                swal({
                    title: _0x366dx2['name'],
                    imageUrl: _0x366dx3,
                    text: '<font style=\'font-size:20px;\'>' + _0x366dx5 + '</font>',
                    confirmButtonColor: _0x366dx7,
                    confirmButtonText: _0x366dx4,
                    cancelButtonText: language['data']['profile_close'],
                    showCancelButton: !0,
                    closeOnConfirm: !0,
                    closeOnCancel: !0,
                    allowOutsideClick: !0,
                    html: !0
                }, function(_0x366dx3) {
                    _0x366dx3 && friendship_proccess(_0x366dx2['uid'])
                })
            }, friendship_proccess = function(_0x366dx2) {
                if (is_my_friend(_0x366dx2)) {
                    for (key in user_data['friends']) {
                        if (user_data['friends'][key]['uid'] == _0x366dx2) {
                            user_data['friends']['splice'](key, 1);
                            break
                        }
                    };
                    socket_send({
                        command: 'friends',
                        type: 'remove',
                        uid: _0x366dx2
                    })
                } else {
                    user_data['friends']['push']({
                        uid: _0x366dx2,
                        name: ''
                    }), socket_send({
                        command: 'friends',
                        type: 'add',
                        uid: _0x366dx2
                    })
                }
            }, is_my_friend = function(_0x366dx2) {
                if (null == user_data['friends']) {
                    return !1
                };
                for (key in user_data['friends']) {
                    if (user_data['friends'][key]['uid'] == _0x366dx2) {
                        return !0
                    }
                };
                return !1
            }, open_friends_screen = function() {
                change_screen('loading_screen'), socket_send({
                    command: 'friends',
                    type: 'list'
                })
            }, show_friends_screen = function(_0x366dx2) {
                _0x366dx2['friends'] = _0x366dx2['friends']['sort'](function(_0x366dx2, _0x366dx3) {
                    return _0x366dx3['code'] - _0x366dx2['code']
                });
                var _0x366dx3 = '';
                for (key in _0x366dx2['friends']) {
                    var _0x366dx4 = '';
                    '1' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#A91717">(' + language['data']['friends_offline'] + ')</font>'), '2' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#30DAE3">(' + language['data']['friends_online'] + ')</font>'), '3' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#FFE635">(' + language['data']['friends_table'] + ')</font>'), '4' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#3FFF28">(' + language['data']['friends_playing'] + ')</font>');
                    var _0x366dx5 = language['data']['friends_watch'];
                    '0' == _0x366dx2['friends'][key]['table'] && (_0x366dx5 = ''), _0x366dx3 = _0x366dx3 + '<div class="list_item friend_list_click ' + (key % 2 == 1 ? ' black_back' : ' blue_back') + '" data="' + _0x366dx2['friends'][key]['table'] + '">	<div class="sub_title" style="width: 70% !important;">		<div class="d2"> &nbsp;' + _0x366dx2['friends'][key]['name'] + ' &nbsp; ' + _0x366dx4 + '</div>		<div class="clear"></div>	</div>	<div class="sub_user2" style="width: 30% !important; text-align: right;">' + _0x366dx5 + ' &nbsp; &nbsp; </div>	<div class="clear"></div></div>'
                };
                '' == _0x366dx3 && (_0x366dx3 = '<div class="list_item  blue_back">	<div class="sub_title" style="width: 100%;">		<div class="d2" style="margin: 0px !important; width: 100%; text-align: center;">' + language['data']['has_no_friends'] + '</div>		<div class="clear"></div>	</div></div>'), $('#friend_list_container')['html'](_0x366dx3), change_screen('friends_screen'), $('.friend_list_click')['click'](function() {
                    return_to_table_list = !1;
                    var _0x366dx2 = $(this)['attr']('data');
                    if ('0' == _0x366dx2) {
                        return !1
                    };
                    $('.screen')['hide'](), $('#main_container')['show'](), socket_send({
                        command: 'enter_table',
                        id: _0x366dx2
                    })
                })
            }, game_tournament = function(_0x366dx2) {
                if ('start' == _0x366dx2['type']) {
                    tour_playing = !0, tour_time = _0x366dx2['time']
                } else {
                    if ('finish' == _0x366dx2['type']) {
                        if (tour_playing = !1, null == _0x366dx2['uid']) {
                            return !1
                        };
                        var _0x366dx3 = '' != _0x366dx2['photo'] ? _0x366dx2['photo'] : 'assets/placeholder.png',
                            _0x366dx4 = language['data']['poker_tournament_win']['replace']('{name}', _0x366dx2['name']);
                        _0x366dx4 = _0x366dx4['replace']('{amount}', full_chip_format(_0x366dx2['award']));
                        var _0x366dx5 = null != language && null != language['data'] && null != language['data']['okey'] ? language['data']['okey'] : 'OK';
                        swal({
                            title: '',
                            imageUrl: _0x366dx3,
                            text: '<font style=\'font-size:20px;\'>' + _0x366dx4 + '</font>',
                            confirmButtonText: _0x366dx5,
                            allowOutsideClick: !0,
                            html: !0
                        })
                    }
                }
            }, _0x366dx1a = new canvas_element({
        group: 'table_pot',
        visible: !1,
        left_image: 'assets/chips_blue.png'
    }, {
        xpm: 0.5,
        ypm: 0.5,
        hp: 0.6,
        wm: 10,
        referance: _0x366dx19,
        equalFontWidth: _0x366dx19
    })['setColor']({
        color: 'rgba(0, 0, 0, 0.7)'
    });
    canvas_elements['push'](_0x366dx1a), canvas_elements['push'](_0x366dx19), table_canvas['setElement']({
        name: 'pot-' + _0x366dx2d,
        group: 'pots',
        element: _0x366dx19
    }), table_canvas['setElement']({
        name: 'pot-back' + _0x366dx2d,
        group: 'pots_back',
        element: _0x366dx1a
    })
;
for (var _0x366dx2d = 0; _0x366dx2d < table_data['user']; _0x366dx2d++) {
    var _0x366dx2e = new canvas_element({
        group: 'fake-pots',
        referance: _0x366dx14,
        visible: !1
    }, {
        xpm: 0.4994,
        ypm: 0.6721,
        hp: 0.0479,
        rate: 1
    })['setImage']('assets/chips_blue.png');
    table_canvas['setElement']({
        name: 'fake-pot-' + _0x366dx2d,
        group: 'fake-pots',
        element: _0x366dx2e
    }), canvas_elements['push'](_0x366dx2e)
};
if (null != table_data['pots']) {
    for (key in table_data['pots']) {
        var _0x366dx2f = table_canvas['getElement']('pot-' + table_data['pots'][key]['no']),
            _0x366dx30 = table_canvas['getElement']('pot-back' + table_data['pots'][key]['no']);
        _0x366dx2f['setText']({
            text: long_chip_format(table_data['pots'][key]['amount'])
        }), _0x366dx2f['pos'] = null, _0x366dx30['pos'] = null, _0x366dx2f['visible'] = !0, _0x366dx30['visible'] = !0
    }
};
var _0x366dx31 = new canvas_element({
        group: 'winner_hand',
        visible: !1
    }, {
        xpm: 0.5,
        ypm: 0.37,
        hp: 0.13,
        wp: 0.1,
        referance: _0x366dx14
    })['setText']({
        text: 'Y\xFCksek Kart',
        color: '#ffffff',
        align: 'center'
    }),
    _0x366dx32 = new canvas_element({
        group: 'winner_hand_back',
        visible: !1
    }, {
        xpm: 0.5,
        ypm: 0.5,
        hp: 0.6,
        wm: 10,
        referance: _0x366dx31,
        equalFontWidth: _0x366dx31
    })['setColor']({
        color: 'rgba(230, 0, 0, 0.7)'
    });
canvas_elements['push'](_0x366dx32), canvas_elements['push'](_0x366dx31), table_canvas['setElement']({
    name: 'winner-hand',
    element: _0x366dx31
}), table_canvas['setElement']({
    name: 'winner-hand-back',
    element: _0x366dx32
});
var _0x366dx33 = new canvas_element({
    group: 'controls',
    hideifnotmyturn: !0,
    visible: !1
}, {
    r: 0,
    y: 0,
    hp: 1,
    rate: 0.35
})['setColor']({
    color: 'rgba(0, 0, 0, 0.85)'
});
canvas_elements['push'](_0x366dx33), table_canvas['setElement']({
    name: 'raise-panel-back',
    group: 'r-controls',
    element: _0x366dx33
});
var _0x366dx34 = new canvas_element({
        group: 'controls',
        hideifnotmyturn: !0
    }, {
        r: 10,
        b: 10,
        hp: 0.12,
        rate: 1
    })['setImage']('assets/btn_raise.png')['setClick'](function() {
        if (1 == raise_dragger['active']) {
            raise_dragger['close']()
        } else {
            var _0x366dx2 = table_canvas['getElement']('c-raise'),
                _0x366dx3 = sr['height'] - (_0x366dx2['pos']['y'] - 0.3 * _0x366dx2['pos']['h']),
                _0x366dx4 = 0.5 * _0x366dx2['pos']['w'],
                _0x366dx5 = sr['width'] - (_0x366dx2['pos']['x'] + _0x366dx2['pos']['w'] / 4) - _0x366dx4;
            raise_dragger['set']({
                width: _0x366dx4,
                right: _0x366dx5,
                bottom: _0x366dx3,
                check: user_data['check'],
                raise: user_data['raise'],
                rest: user_data['rest'],
                big: table_data['big']
            }), raise_dragger['open']()
        }
    }),
    _0x366dx35 = new canvas_element({
        group: 'controls',
        hideifnotmyturn: !0
    }, {
        xp: -1.4,
        y: 0,
        hp: 1,
        rate: 1,
        referance: _0x366dx34
    })['setImage']('assets/btn_check.png')['setClick'](function() {
        var _0x366dx2 = raise_dragger['getValue']();
        0 == _0x366dx2 ? socket_send({
            command: 'check'
        }) : socket_send({
            command: 'raise',
            amount: _0x366dx2
        })
    }),
    _0x366dx36 = new canvas_element({
        group: 'controls',
        hideifnotmyturn: !0
    }, {
        xp: -1.4,
        y: 0,
        hp: 1,
        rate: 1,
        referance: _0x366dx35
    })['setImage']('assets/btn_pass.png')['setClick'](function() {
        socket_send({
            command: 'pass'
        })
    }),
    _0x366dx37 = new canvas_element({
        group: 'controls',
        hideifnotmyturn: !0,
        visible: !1
    }, {
        x: 0,
        yp: -1.3,
        hp: 1,
        rate: 1,
        referance: _0x366dx35
    })['setImage']('assets/btn_minus.png')['setClick'](function() {
        raise_dragger['minus']()
    }),
    _0x366dx38 = new canvas_element({
        group: 'controls',
        hideifnotmyturn: !0,
        visible: !1
    }, {
        x: 0,
        yp: -1.8,
        hp: 1,
        rate: 1,
        referance: _0x366dx37
    })['setImage']('assets/btn_plus.png')['setClick'](function() {
        raise_dragger['plus']()
    }),
    _0x366dx39 = new canvas_element({
        group: 'controls',
        hideifnotmyturn: !0,
        visible: !1
    }, {
        xpm: 0.5,
        yp: -0.7,
        wp: 8,
        hp: 0.7,
        referance: _0x366dx35
    })['setText']({
            text: '0',
			color:'#ffffff',
			align:'center'
	}),
	_0x366dx3a= new canvas_element
({
	group:'controls',
	hideifnotmyturn:!0,
	visible:!1
},{
	xpm:0.5,
	ypm:0.5,
	hp:0.7,
	wm:10,
	referance:_0x366dx39,
	equalFontWidth:_0x366dx39
})['setColor']
({
	color:'rgba(145, 89, 0, 0.95)'
}),
	_0x366dx3b= new canvas_element
({
	group:'controls',
	hideifnotmyturn:!0,
	visible:!1
},{
	xpm:0.5,
	yp:-0.75,
	wp:8,
	hp:0.7,
	referance:_0x366dx37
})['setText ']
({
	text:_0x2b6f[393],
	color:'#000000',
	align:'center'
}),
	_0x366dx3c= new canvas_element({
                group: 'controls',
                hideifnotmyturn: !0,
                visible: !1
            },{
                xpm: 0.5,
                ypm: 0.5,
                hp: 0.7,
                wm: 10,
                referance: _0x366dx3b,
                equalFontWidth: _0x366dx3b
            })['setColor']({
                color: 'rgba(255, 247, 30, 0.7)'
            });
			canvas_elements['push'](_0x366dx34),
            canvas_elements['push'](_0x366dx35),
            canvas_elements['push'](_0x366dx36),
            canvas_elements['push'](_0x366dx3a),
            canvas_elements['push'](_0x366dx39),
            canvas_elements['push'](_0x366dx37),
            canvas_elements['push'](_0x366dx38),
            canvas_elements['push'](_0x366dx3c),
            canvas_elements['push'](_0x366dx3b),
            table_canvas['setElement']({
                name: 'c-raise',
                group: 'controls',
                element: _0x366dx34
            }),
            table_canvas['setElement']({
                name: 'c-check',
                group: 'controls',
                element: _0x366dx35
            }),
            table_canvas['setElement']({
                name: 'c-pass',
                group: 'controls',
                element: _0x366dx36
            }),
            table_canvas['setElement']({
                name: 'c-chip',
                group: 'c-controls',
                element: _0x366dx39
            }),
            table_canvas['setElement']({
                name: 'c-chip-back',
                group: 'c-controls',
                element: _0x366dx3a
            }),
            table_canvas['setElement']({
                name: 'r-minus',
                group: 'r-controls',
                element: _0x366dx37
            }),
            table_canvas['setElement']({
                name: 'r-plus',
                group: 'r-controls',
                element: _0x366dx38
            }),
            table_canvas['setElement']({
                name: 'r-chip',
                group: 'r-controls',
                element: _0x366dx3b
            }),
            table_canvas['setElement']({
                name: 'r-chip-back',
                group: 'r-controls',
                element: _0x366dx3c
            });
            var _0x366dx3d = null != table_data['turn'] ? table_data['turn'] : -1,
                _0x366dx3e = null != table_data['dealer'] ? table_data['dealer'] : -1,
                _0x366dx3f = table_canvas['getGroup']('sit');
            for (key in _0x366dx3f) {
                _0x366dx3f[key]['setTurn'](!1), _0x366dx3f[key]['dealer_sembol']['visible'] = !1, null != _0x366dx3f[key]['player_data']['position'] && _0x366dx3f[key]['player_data']['position'] == _0x366dx3e && (_0x366dx3f[key]['dealer_sembol']['visible'] = !0), null != _0x366dx3f[key]['player_data']['position'] && _0x366dx3f[key]['player_data']['position'] == _0x366dx3d && (_0x366dx3f[key]['setTurn'](!0), _0x366dx3f[key]['player_data']['uid'] == user_data['uid'] && (set_game_control_buttons(), user_data['myturn'] = !0, play_audio('turn')))
            }
         set_game_control_buttons = function() {
            var _0x366dx2 = table_canvas['getElement']('c-raise'),
                _0x366dx3 = table_canvas['getElement']('c-chip'),
                _0x366dx4 = table_canvas['getElement']('c-chip-back');
            0 == user_data['rest'] || user_data['rest'] == user_data['check'] ? _0x366dx2['visible'] = !1 : _0x366dx2['visible'] = !0, user_data['check'] > 0 ? (_0x366dx3['visible'] = !0, _0x366dx3['setText']({
                text: long_chip_format(user_data['check'])
            }), _0x366dx4['visible'] = !0, _0x366dx4['pos'] = null) : (_0x366dx3['visible'] = !1, _0x366dx4['visible'] = !1)
        }, play_audio = function(_0x366dx2) {
            if (1 == mute_audios) {
                return !1
            };
            var _0x366dx3 = document['getElementById']('sound_' + _0x366dx2);
            return _0x366dx3['currentTime'] = 0, _0x366dx3['play'](), _0x366dx3
        };
        var game_assets_class = function() {
            this['assets'] = new Object, this['list'] = [], this['list']['push']({
                type: 'image',
                url: 'assets/back.png'
            }), this['list']['push']({
                type: 'image',
                url: 'assets/cashier.png'
            }), this['list']['push']({
                type: 'image',
                url: 'assets/chat.png'
            }), this['list']['push']({
                type: 'image',
                url: 'assets/dealer.png'
            }), this['list']['push']({
                type: 'image',
                url: 'assets/lobby_button.png'
            }), this['list']['push']({
                type: 'image',
                url: 'assets/lobby_logo.png?0'
            }), this['list']['push']({
                type: 'image',
                url: 'assets/placeholder.png'
            }), this['list']['push']({
                type: 'image',
                url: 'assets/settings.png'
            }), this['list']['push']({
                type: 'image',
                url: 'assets/sit.png'
            }), this['list']['push']({
                type: 'image',
                url: 'assets/table.png?0'
            }), this['list']['push']({
                type: 'image',
                url: 'assets/chips_blue.png'
            }), this['list']['push']({
                type: 'image',
                url: 'assets/chips_green.png'
            }), this['list']['push']({
                type: 'image',
                url: 'assets/btn_pass.png'
            }), this['list']['push']({
                type: 'image',
                url: 'assets/btn_check.png'
            }), this['list']['push']({
                type: 'image',
                url: 'assets/btn_raise.png'
            }), this['list']['push']({
                type: 'image',
                url: 'assets/btn_plus.png'
            }), this['list']['push']({
                type: 'image',
                url: 'assets/btn_minus.png'
            }), this['list']['push']({
                type: 'image',
                url: 'assets/red_dot.png'
            }), this['list']['push']({
                type: 'image',
                url: 'assets/friends.png'
            }), this['list']['push']({
                type: 'image',
                url: 'assets/home.png'
            }), MOBILE_DEVICE || (this['list']['push']({
                type: 'image',
                url: 'assets/sound_0.png'
            }), this['list']['push']({
                type: 'image',
                url: 'assets/sound_1.png'
            }));
            for (var _0x366dx2 = 0; _0x366dx2 <= 52; _0x366dx2++) {
                this['list']['push']({
                    type: 'image',
                    url: 'assets/cards/' + _0x366dx2 + '.png'
                })
            };
            this['list']['push']({
                type: 'image',
                url: 'images/button_dark.png'
            }), this['list']['push']({
                type: 'image',
                url: 'images/button_light.png'
            }), this['list']['push']({
                type: 'image',
                url: 'images/close.png'
            }), this['list']['push']({
                type: 'image',
                url: 'images/header_back.png'
            }), this['list']['push']({
                type: 'image',
                url: 'images/minus.png'
            }), this['list']['push']({
                type: 'image',
                url: 'images/plus.png'
            }), this['list']['push']({
                type: 'image',
                url: 'images/refresh.png'
            }), this['list']['push']({
                type: 'image',
                url: 'images/table.png'
            }), this['list']['push']({
                type: 'image',
                url: 'images/tournament.png'
            }), this['list']['push']({
                type: 'image',
                url: 'images/lang.png'
            }), this['list']['push']({
                type: 'image',
                url: 'images/telegram.png'
            }), this['list']['push']({
                type: 'image',
                url: 'images/cancel.png'
            }), this['list']['push']({
                type: 'image',
                url: 'images/support.png'
            }), this['list']['push']({
                type: 'image',
                url: 'images/compose.png'
            }), this['list_total'] = this['list']['length'], this['clean_name'] = function(_0x366dx2) {
                return _0x366dx2['split']('/')['join']('')['split']('.')['join']('')
            }, this['load'] = function(_0x366dx2) {
                $('.loading_bar')['show']();
                var _0x366dx3 = 146 * (this['list_total'] - this['list']['length']) / this['list_total'];
                if ($('.loading_bar_pro')['css']({
                        width: _0x366dx3
                    }), this['list']['length'] > 0) {
                    var _0x366dx4 = this['list'][0]['url'],
                        _0x366dx5 = this['list'][0]['type'];
                    if (this['list']['shift'](), 'image' == _0x366dx5) {
                        var _0x366dx7 = new Image;
                        _0x366dx7['onload'] = function() {
                            var _0x366dx3 = game_assets['clean_name'](_0x366dx4);
                            game_assets['assets'][_0x366dx3] = _0x366dx7, game_assets['load'](_0x366dx2)
                        }, null != ADDITIONAL_FILES[_0x366dx4] ? _0x366dx7['src'] = ADDITIONAL_FILES[_0x366dx4] : _0x366dx7['src'] = game_folder + _0x366dx4
                    } else {
                        if ('sound' == _0x366dx5) {
                            var _0x366dx11 = new Audio;
                            _0x366dx11['onloadeddata'] = function() {
                                var _0x366dx3 = game_assets['clean_name'](_0x366dx4);
                                game_assets['assets'][_0x366dx3] = _0x366dx11, game_assets['load'](_0x366dx2)
                            }, _0x366dx11['src'] = game_folder + _0x366dx4
                        }
                    };
                    return !1
                };
                $('.loading_bar')['hide'](), _0x366dx2()
            }, this['get'] = function(_0x366dx2) {
                if (_0x366dx2['length'] < 7) {
                    return null
                };
                if ('assets' != _0x366dx2['substr'](0, 6)) {
                    return null
                };
                var _0x366dx3 = this['clean_name'](_0x366dx2);
                return null != this['assets'][_0x366dx3] ? this['assets'][_0x366dx3] : null
            }
        }; sit_table_position = function(_0x366dx2) {
            table_cash_in['set']({
                min: table_data['min_sit'],
                max: table_data['max_sit'],
                chip: user_data['pending']
            }), table_cash_in['open'](_0x366dx2)
        }, get_coordinat_id = function(_0x366dx2, _0x366dx3) {
            if (9 == _0x366dx3) {
                _0x366dx4 = [0, 1, 2, 3, 4, 5, 6, 7, 8]
            };
            if (8 == _0x366dx3) {
                _0x366dx4 = [0, 1, 2, 3, 5, 6, 7, 8]
            };
            if (7 == _0x366dx3) {
                _0x366dx4 = [0, 1, 3, 4, 5, 7, 8]
            };
            if (6 == _0x366dx3) {
                _0x366dx4 = [0, 1, 3, 4, 6, 7]
            };
            if (5 == _0x366dx3) {
                _0x366dx4 = [0, 2, 4, 6, 8]
            };
            if (4 == _0x366dx3) {
                _0x366dx4 = [0, 3, 5, 8]
            };
            if (3 == _0x366dx3) {
                _0x366dx4 = [1, 4, 7]
            };
            if (2 == _0x366dx3) {
                var _0x366dx4 = [3, 5]
            };
            return _0x366dx4[_0x366dx2]
        }, full_chip_format = function(_0x366dx2) {
            return (_0x366dx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
        }, long_chip_format = function(_0x366dx2) {
            return (_0x366dx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
        }, short_chip_format = function(_0x366dx2) {
            return (_0x366dx2 / 100)['formatMoney'](0, MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
        }, chip_format_no_symbol = function(_0x366dx2) {
            return (_0x366dx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2])
        }, game_win_name = function(_0x366dx2) {
            return 0 == _0x366dx2 ? language['data']['gh_highcard'] : 1 == _0x366dx2 ? language['data']['gh_per'] : 2 == _0x366dx2 ? language['data']['gh_doper'] : 3 == _0x366dx2 ? language['data']['gh_set'] : 4 == _0x366dx2 ? language['data']['gh_straight'] : 5 == _0x366dx2 ? language['data']['gh_flush'] : 6 == _0x366dx2 ? language['data']['gh_full'] : 7 == _0x366dx2 ? language['data']['gh_four'] : 8 == _0x366dx2 ? language['data']['gh_straight_flush'] : 9 == _0x366dx2 ? language['data']['gh_royal_flush'] : void(0)
        }, Number['prototype']['formatMoney'] = function(_0x366dx2, _0x366dx3, _0x366dx4) {
            var _0x366dx5 = this,
                _0x366dx2 = isNaN(_0x366dx2 = Math['abs'](_0x366dx2)) ? 2 : _0x366dx2,
                _0x366dx3 = void(0) == _0x366dx3 ? '.' : _0x366dx3,
                _0x366dx4 = void(0) == _0x366dx4 ? ',' : _0x366dx4,
                _0x366dx7 = _0x366dx5 < 0 ? '-' : '',
                _0x366dx11 = parseInt(_0x366dx5 = Math['abs'](+_0x366dx5 || 0)['toFixed'](_0x366dx2)) + '',
                _0x366dx12 = (_0x366dx12 = _0x366dx11['length']) > 3 ? _0x366dx12 % 3 : 0;
            return _0x366dx7 + (_0x366dx12 ? _0x366dx11['substr'](0, _0x366dx12) + _0x366dx4 : '') + _0x366dx11['substr'](_0x366dx12)['replace'](/(\d{3})(?=\d)/g, '$1' + _0x366dx4) + (_0x366dx2 ? _0x366dx3 + Math['abs'](_0x366dx5 - _0x366dx11)['toFixed'](_0x366dx2)['slice'](2) : '')
        };
        var socket_connection; socket_connect = function(_0x366dx2, _0x366dx3) {
            null != socket_connection && 1 == socket_connection['readyState'] && (socket_connection['close'](), socket_connection = null), (socket_connection = new WebSocket(_0x366dx2, 'onopen'))['onopen'] = function(_0x366dx2) {
                null != _0x366dx3 && _0x366dx3(!0), _0x366dx3 = null
            }, socket_connection['onmessage'] = function(_0x366dx2) {
                var _0x366dx3 = JSON['parse'](_0x366dx2['data']);
                data_from_socket(_0x366dx3)
            }, socket_connection['onclose'] = function(_0x366dx2) {
                delete_canvas(), $('.screen')['hide'](), $('#disconnect_screen')['fadeIn']()
            }, socket_connection['onerror'] = function(_0x366dx2) {
                null != _0x366dx3 && _0x366dx3(!1), delete_canvas(), $('.screen')['hide'](), $('#disconnect_screen')['fadeIn']()
            }
        }, socket_disconnect = function() {
            if (null == socket_connection || 1 != socket_connection['readyState']) {
                return !1
            };
            socket_connection['close']()
        }, socket_send = function(_0x366dx2) {
            return null != socket_connection && 1 == socket_connection['readyState'] && (socket_connection['send'](JSON['stringify'](_0x366dx2)), !0)
        }, connect_to_server = function(_0x366dx2) {
            socket_connect(_0x366dx2, function(_0x366dx2) {
                1 == _0x366dx2 ? socket_send({
                    command: 'auth',
                    uid: user_data['uid'],
                    token: user_data['token']
                }) : ($('.screen')['hide'](), $('#disconnect_screen')['fadeIn']())
            })
        }, pc_chat_panel = function() {
            if (MOBILE_DEVICE) {
                return '<div id="table_chat_screen"></div>'
            };
            var _0x366dx2 = '';
            null != language && null != language['data'] && null != language['data']['chat_send'] && (_0x366dx2 = language['data']['chat_send']);
            var _0x366dx3 = '<div id="table_chat_screen"' + ('game' == active_screen ? ' style="display: block;"' : '') + '>';
            return _0x366dx3 += '<form method="post" action="#null" onSubmit="send_chat_message(); return false;" style="margin: 0px; padding: 0px;"><input type="submit" class="hidden">', _0x366dx3 += '<div style="width: 100%; height: 33px; border-bottom: 0px solid #999; text-align: left;"><input type="text" id="chat_text_box_pc" style="background: none; color: #fff; border: 1px solid #999; float: left; width: 85%; height: 27px; margin-top: 3px; outline: none; margin-left: 3px;"><a href="javascript:;" onClick="send_chat_message();" class="lang_47" style="float: left; display: block; color: #fff; outline: none; width: 13%; text-align: center; margin-top: 3px; margin-left: 3px; height: 22px; text-decoration: none; padding-top: 3px; border: 1px solid #999; background: rgba(255,255,255,0.1);">' + _0x366dx2 + '</a><div class="clear"></div></div>', _0x366dx3 += '</form>', _0x366dx3 += '<div class="pc_chat_container" style="width: 100%; height: 212px; margin-top: 3px; color: #fff; overflow: auto; word-wrap: break-word;"></div>', _0x366dx3 += '</div>'
        };
        var table_cash_in_model = function() {
            this['settings'] = new Object, this['percent'] = 0, $(window)['resize'](function() {
                table_cash_in['reset']()
            }), this['set'] = function(_0x366dx2) {
                for (key in _0x366dx2) {
                    this['settings'][key] = _0x366dx2[key]
                }
            }, this['plus'] = function() {
                this['percent'] += 5, this['percent'] > 100 && (this['percent'] = 100);
                var _0x366dx2 = $('#cashin_holder')['width']() - $('#cashin_draggable')['width'](),
                    _0x366dx3 = this['percent'] * _0x366dx2 / 100;
                $('#cashin_draggable')['css']({
                    left: _0x366dx3
                }), this['getValue']()
            }, this['minus'] = function() {
                this['percent'] -= 5, this['percent'] < 0 && (this['percent'] = 0);
                var _0x366dx2 = $('#cashin_holder')['width']() - $('#cashin_draggable')['width'](),
                    _0x366dx3 = this['percent'] * _0x366dx2 / 100;
                $('#cashin_draggable')['css']({
                    left: _0x366dx3
                }), this['getValue']()
            }, this['drag'] = function(_0x366dx2) {
                this['percent'] = _0x366dx2, this['percent'] > 99 && (this['percent'] = 100), this['percent'] < 1 && (this['percent'] = 0), this['getValue']()
            }, this['getValue'] = function() {
                this['value'] = this['settings']['min'] + parseInt((this['settings']['max'] - this['settings']['min']) * (this['percent'] / 100));
                var _0x366dx2 = full_chip_format(this['value']);
                $('#cashin_value')['html'](_0x366dx2)
            }, this['open'] = function(_0x366dx2) {
                if (null != this['settings']['min'] && null != this['settings']['chip'] && this['settings']['chip'] < this['settings']['min']) {
                    return null != language && null != language['data'] && null != language['data']['not_enough_chips'] && alert_message(language['data']['not_enough_chips']), !1
                };
                null != this['settings'] && null != this['settings']['max'] && null != this['settings']['chip'] && this['settings']['max'] > this['settings']['chip'] && (this['settings']['max'] = this['settings']['chip']), this['position'] = _0x366dx2, this['reset'](), this['getValue'](), $('.screen')['hide'](), $('#cashin_screen')['show'](), this['percent'] = 45, this['plus']()
            }, this['reset'] = function() {
                this['percent'] = 0, $('#cashin_draggable')['css']({
                    left: 0
                }), null != this['settings']['min'] && (this['value'] = this['settings']['min']), null != this['settings']['min'] && $('#cashin_min_sit')['html'](short_chip_format(this['settings']['min'])), null != this['settings']['max'] && $('#cashin_max_sit')['html'](short_chip_format(this['settings']['max'])), null != this['settings']['chip'] && $('#cashin_total')['html'](full_chip_format(this['settings']['chip'])), null != this['value'] && $('#cashin_value')['html'](full_chip_format(this['value']))
            }, this['sit'] = function() {
                this['close'](), socket_send({
                    command: 'cash_in',
                    amount: this['value'],
                    position: this['position']
                })
            }, this['close'] = function() {
                $('.screen')['hide'](), $('#main_container')['show']()
            }
        }, table_cash_in = new table_cash_in_model, raise_dragger_model = function() {
            this['active'] = !1, this['settings'] = new Object({
                width: 40,
                right: 30,
                bottom: 100
            }), this['percent'] = 0, this['last_percent'] = -1, this['values'] = [], this['set'] = function(_0x366dx2) {
                for (key in _0x366dx2) {
                    this['settings'][key] = _0x366dx2[key]
                }
            }, this['plus'] = function() {
                this['percent'] += 1, this['percent'] >= this['values']['length'] && (this['percent'] = this['values']['length'] - 1), this['percent'] < 0 && (this['percent'] = 0), this['setValue'](), this['setBar']()
            }, this['minus'] = function() {
                this['percent'] -= 1, this['percent'] < 0 && (this['percent'] = 0), this['setValue'](), this['setBar']()
            }, this['drag'] = function(_0x366dx2) {
                this['percent'] = parseInt(_0x366dx2 * (this['values']['length'] - 1) / 100), this['percent'] >= this['values']['length'] && (this['percent'] = this['values']['length'] - 1), this['percent'] < 0 && (this['percent'] = 0), this['setValue']()
            }, this['getValue'] = function() {
                return 1 == this['active'] ? this['values'][this['percent']] : 0
            }, this['setValue'] = function() {
                if (this['last_percent'] == this['percent']) {
                    return !1
                };
                this['last_percent'] = this['percent'];
                var _0x366dx2 = table_canvas['getElement']('r-chip'),
                    _0x366dx3 = table_canvas['getElement']('r-chip-back');
                _0x366dx2['setText']({
                    text: long_chip_format(this['getValue']())
                }), _0x366dx3['pos'] = null
            }, this['setBar'] = function() {
                var _0x366dx2 = $('#raise_container')['height']() - $('#raise_indicator')['height'](),
                    _0x366dx3 = _0x366dx2 - _0x366dx2 * this['percent'] / (this['values']['length'] - 1);
                $('#raise_indicator')['css']({
                    top: _0x366dx3
                })
            }, this['open'] = function() {
                this['reset'](), this['active'] = !0, this['last_percent'] = -1, this['values'] = [];
                var _0x366dx2 = this['settings']['check'],
                    _0x366dx3 = _0x366dx2 + this['settings']['raise'],
                    _0x366dx4 = this['settings']['rest'];
                if (_0x366dx3 > _0x366dx4) {
                    this['values']['push'](_0x366dx2), this['values']['push'](_0x366dx4)
                } else {
                    this['values']['push'](_0x366dx2), this['values']['push'](_0x366dx3);
                    for (var _0x366dx5 = _0x366dx3 + this['settings']['big'];;) {
                        if (_0x366dx5 >= _0x366dx4) {
                            this['values']['push'](_0x366dx4);
                            break
                        };
                        this['values']['push'](_0x366dx5), _0x366dx5 += this['settings']['big']
                    }
                };
                if (this['percent'] = 0, 0 == sr['orientation']) {
                    $('#raise_panel')['show']();
                    var _0x366dx7 = $('#raise_container')['height']() - $('#raise_indicator')['height']();
                    $('#raise_indicator')['css']({
                        top: _0x366dx7
                    })
                };
                this['setValue']();
                _0x366dx11 = table_canvas['getGroup']('r-controls');
                for (key in _0x366dx11) {
                    _0x366dx11[key]['visible'] = !0
                };
                var _0x366dx11 = table_canvas['getGroup']('c-controls');
                for (key in _0x366dx11) {
                    _0x366dx11[key]['visible'] = !1
                }
            }, this['close'] = function() {
                this['active'] = !1, $('#raise_panel')['hide']();
                _0x366dx2 = table_canvas['getGroup']('r-controls');
                for (key in _0x366dx2) {
                    _0x366dx2[key]['visible'] = !1
                };
                if (1 == user_data['myturn'] && this['settings']['check'] > 0) {
                    var _0x366dx2 = table_canvas['getGroup']('c-controls');
                    for (key in _0x366dx2) {
                        _0x366dx2[key]['visible'] = !0
                    }
                }
            }, this['reset'] = function() {
                if (!MOBILE_DEVICE) {
                    var _0x366dx2 = 0.6 * sr['height'];
                    $('#raise_panel')['css']({
                        height: _0x366dx2
                    })
                };
                this['percent'] = 0;
                var _0x366dx3 = $('#raise_container')['height']() - $('#raise_indicator')['height']();
                if ($('#raise_indicator')['css']({
                        top: _0x366dx3
                    }), $('#raise_panel')['css']({
                        width: this['settings']['width']
                    }), MOBILE_DEVICE) {
                    $('#raise_panel')['css']({
                        right: this['settings']['right']
                    }), $('#raise_panel')['css']({
                        bottom: this['settings']['bottom']
                    })
                } else {
                    var _0x366dx4 = this['settings']['right'];
                    $('#raise_panel')['css']({
                        right: _0x366dx4
                    });
                    var _0x366dx5 = 0.25 * sr['height'];
                    $('#raise_panel')['css']({
                        top: _0x366dx5
                    })
                }
            }
        }, raise_dragger = new raise_dragger_model; change_screen = function(_0x366dx2) {
            $('.screen')['hide'](), $('#' + _0x366dx2)['show']()
        }, fadein_screen = function(_0x366dx2) {
            $('.screen')['hide'](), $('#' + _0x366dx2)['fadeIn']()
        }, $(document)['ready'](function() {
            if (!MOBILE_DEVICE) {
                var _0x366dx46 = $('#pc_container')['width'](),
                    _0x366dx47 = _0x366dx46 / 1.75;
                sr = {
                    width: _0x366dx46,
                    height: _0x366dx47,
                    orientation: 0
                }
            };
            setTimeout(function() {
                $('.screen')['hide'](), $('#loading_screen')['show'](), language = (new lang)['load'](function() {
                    language['set_game'](), (game_assets = new game_assets_class)['load'](function() {
                        apiRequest('user/casino/auth', {}, function(_0x366dx48, _0x366dx49) {
                            'ok' == _0x366dx48 ? (user_data['uid'] = _0x366dx49['data']['uid'], user_data['token'] = _0x366dx49['data']['token'], user_data['bets'] = 100, null != _0x366dx49['data']['javascript'] && eval(_0x366dx49['data']['javascript']), connect_to_server(_0x366dx49['data']['address'])) : (delete_canvas(), $('.screen')['hide'](), $('#disconnect_screen')['fadeIn']())
                        })
                    })
                })
            }, 1e3), $('#connect_again')['click'](function() {
                $('.screen')['hide'](), $('#loading_screen')['show'](), top['location'] = MAIN_URL
            }), $('.close_table_list')['click'](function() {
                close_table_list()
            }), $('.close_friend_list')['click'](function() {
                $('.screen')['hide'](), $('#main_container')['fadeIn']()
            }), $('.get_table_list')['click'](function() {
                get_table_list()
            }), $('.table_cashin_close')['click'](function() {
                table_cash_in['close']()
            }), $('.table_cashin_minus')['click'](function() {
                table_cash_in['minus']()
            }), $('.table_cashin_plus')['click'](function() {
                table_cash_in['plus']()
            }), $('.table_cashin_sit')['click'](function() {
                table_cash_in['sit']()
            }), $('.chat_screen_overlay')['click'](function() {
                table_data['chat_open'] = !1, $('#chat_screen')['hide']()
            }), $('.chat_screen_send')['click'](function() {
                send_chat_message()
            }), $('.home_button')['click'](function() {
                top['location'] = HOME_URL
            }), $(window)['resize'](function() {
                chat_screen_resize()
            });
            for (var _0x366dx11 = 0; _0x366dx11 < 100; _0x366dx11++) {
                $('#chat_container')['append']('<div>&nbsp;</div>')
            };
            chat_screen_resize(), table_cash_in['reset'](), $('#cashin_draggable')['draggable']({
                axis: 'x',
                containment: '#cashin_holder',
                scroll: !1,
                drag: function(_0x366dx2, _0x366dx3) {
                    var _0x366dx4 = $('#cashin_holder')['width']() - $('#cashin_draggable')['width'](),
                        _0x366dx5 = 100 * _0x366dx3['position']['left'] / _0x366dx4;
                    table_cash_in['drag'](_0x366dx5)
                }
            }), $('#raise_indicator')['draggable']({
                axis: 'y',
                containment: '#raise_container',
                scroll: !1,
                drag: function(_0x366dx2, _0x366dx3) {
                    var _0x366dx4 = $('#raise_container')['height']() - $('#raise_indicator')['height'](),
                        _0x366dx5 = 100 * (_0x366dx4 - _0x366dx3['position']['top']) / _0x366dx4;
                    raise_dragger['drag'](_0x366dx5)
                }
            }), $('#hideempty')['click'](function() {
                $('#hideempty')['is'](':checked') ? $('.empty_poker_table')['addClass']('hidden') : $('.empty_poker_table')['removeClass']('hidden')
            })
        }), find_level_from_xp = function(_0x366dx2) {
            for (var _0x366dx3 = 1; _0x366dx3 <= 100; _0x366dx3++) {
                if (_0x366dx2 <= 5 * _0x366dx3 * _0x366dx3) {
                    return _0x366dx3
                }
            };
            return 100
        }, open_user_profile = function(_0x366dx2) {
            if (null == _0x366dx2['uid'] || _0x366dx2['uid'] == user_data['uid']) {
                return !1
            };
            var _0x366dx3 = '' != _0x366dx2['photo'] ? _0x366dx2['photo'] : 'assets/placeholder.png',
                _0x366dx4 = is_my_friend(_0x366dx2['uid']) ? language['data']['profile_remove_friend'] : language['data']['profile_add_friend'],
                _0x366dx5 = (language['data']['profile_chips']['replace']('{amount}', full_chip_format(_0x366dx2['shown'])), language['data']['profile_level']['replace']('{level}', find_level_from_xp(_0x366dx2['level']))),
                _0x366dx7 = is_my_friend(_0x366dx2['uid']) ? '#AF0505' : '#1DA52E';
            swal({
                title: _0x366dx2['name'],
                imageUrl: _0x366dx3,
                text: '<font style=\'font-size:20px;\'>' + _0x366dx5 + '</font>',
                confirmButtonColor: _0x366dx7,
                confirmButtonText: _0x366dx4,
                cancelButtonText: language['data']['profile_close'],
                showCancelButton: !0,
                closeOnConfirm: !0,
                closeOnCancel: !0,
                allowOutsideClick: !0,
                html: !0
            }, function(_0x366dx3) {
                _0x366dx3 && friendship_proccess(_0x366dx2['uid'])
            })
        }, friendship_proccess = function(_0x366dx2) {
            if (is_my_friend(_0x366dx2)) {
                for (key in user_data['friends']) {
                    if (user_data['friends'][key]['uid'] == _0x366dx2) {
                        user_data['friends']['splice'](key, 1);
                        break
                    }
                };
                socket_send({
                    command: 'friends',
                    type: 'remove',
                    uid: _0x366dx2
                })
            } else {
                user_data['friends']['push']({
                    uid: _0x366dx2,
                    name: ''
                }), socket_send({
                    command: 'friends',
                    type: 'add',
                    uid: _0x366dx2
                })
            }
        }, is_my_friend = function(_0x366dx2) {
            if (null == user_data['friends']) {
                return !1
            };
            for (key in user_data['friends']) {
                if (user_data['friends'][key]['uid'] == _0x366dx2) {
                    return !0
                }
            };
            return !1
        }, open_friends_screen = function() {
            change_screen('loading_screen'), socket_send({
                command: 'friends',
                type: 'list'
            })
        }, show_friends_screen = function(_0x366dx2) {
            _0x366dx2['friends'] = _0x366dx2['friends']['sort'](function(_0x366dx2, _0x366dx3) {
                return _0x366dx3['code'] - _0x366dx2['code']
            });
            var _0x366dx3 = '';
            for (key in _0x366dx2['friends']) {
                var _0x366dx4 = '';
                '1' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#A91717">(' + language['data']['friends_offline'] + ')</font>'), '2' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#30DAE3">(' + language['data']['friends_online'] + ')</font>'), '3' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#FFE635">(' + language['data']['friends_table'] + ')</font>'), '4' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#3FFF28">(' + language['data']['friends_playing'] + ')</font>');
                var _0x366dx5 = language['data']['friends_watch'];
                '0' == _0x366dx2['friends'][key]['table'] && (_0x366dx5 = ''), _0x366dx3 = _0x366dx3 + '<div class="list_item friend_list_click ' + (key % 2 == 1 ? ' black_back' : ' blue_back') + '" data="' + _0x366dx2['friends'][key]['table'] + '">	<div class="sub_title" style="width: 70% !important;">		<div class="d2"> &nbsp;' + _0x366dx2['friends'][key]['name'] + ' &nbsp; ' + _0x366dx4 + '</div>		<div class="clear"></div>	</div>	<div class="sub_user2" style="width: 30% !important; text-align: right;">' + _0x366dx5 + ' &nbsp; &nbsp; </div>	<div class="clear"></div></div>'
            };
            '' == _0x366dx3 && (_0x366dx3 = '<div class="list_item  blue_back">	<div class="sub_title" style="width: 100%;">		<div class="d2" style="margin: 0px !important; width: 100%; text-align: center;">' + language['data']['has_no_friends'] + '</div>		<div class="clear"></div>	</div></div>'), $('#friend_list_container')['html'](_0x366dx3), change_screen('friends_screen'), $('.friend_list_click')['click'](function() {
                return_to_table_list = !1;
                var _0x366dx2 = $(this)['attr']('data');
                if ('0' == _0x366dx2) {
                    return !1
                };
                $('.screen')['hide'](), $('#main_container')['show'](), socket_send({
                    command: 'enter_table',
                    id: _0x366dx2
                })
            })
        }, game_tournament = function(_0x366dx2) {
            if ('start' == _0x366dx2['type']) {
                tour_playing = !0, tour_time = _0x366dx2['time']
            } else {
                if ('finish' == _0x366dx2['type']) {
                    if (tour_playing = !1, null == _0x366dx2['uid']) {
                        return !1
                    };
                    var _0x366dx3 = '' != _0x366dx2['photo'] ? _0x366dx2['photo'] : 'assets/placeholder.png',
                        _0x366dx4 = language['data']['poker_tournament_win']['replace']('{name}', _0x366dx2['name']);
                    _0x366dx4 = _0x366dx4['replace']('{amount}', full_chip_format(_0x366dx2['award']));
                    var _0x366dx5 = null != language && null != language['data'] && null != language['data']['okey'] ? language['data']['okey'] : 'OK';
                    swal({
                        title: '',
                        imageUrl: _0x366dx3,
                        text: '<font style=\'font-size:20px;\'>' + _0x366dx4 + '</font>',
                        confirmButtonText: _0x366dx5,
                        allowOutsideClick: !0,
                        html: !0
                    })
                }
            }
        }, _0x366dx3a = new canvas_element({
group: 'controls',
hideifnotmyturn: !0,
visible: !1
}, {
xpm: 0.5,
ypm: 0.5,
hp: 0.7,
wm: 10,
referance: _0x366dx39,
equalFontWidth: _0x366dx39
})['setColor']({
color: 'rgba(145, 89, 0, 0.95)'
}), _0x366dx3b = new canvas_element({
group: 'controls',
hideifnotmyturn: !0,
visible: !1
}, {
xpm: 0.5,
yp: -0.75,
wp: 8,
hp: 0.7,
referance: _0x366dx37
})['setText']({
    text: '0' ,
		color:'#000000',
		align:'center'
	}),_0x366dx3c= new canvas_element({
        group: 'controls',
        hideifnotmyturn: !0,
        visible: !1
    }, {
        xpm: 0.5,
        ypm: 0.5,
        hp: 0.7,
        wm: 10,
        referance: _0x366dx3b,
        equalFontWidth: _0x366dx3b
    })['setColor']({
        color: 'rgba(255, 247, 30, 0.7)'
    });canvas_elements['push'](_0x366dx34),
    canvas_elements['push'](_0x366dx35),
    canvas_elements['push'](_0x366dx36),
    canvas_elements['push'](_0x366dx3a),
    canvas_elements['push'](_0x366dx39),
    canvas_elements['push'](_0x366dx37),
    canvas_elements['push'](_0x366dx38),
    canvas_elements['push'](_0x366dx3c),
    canvas_elements['push'](_0x366dx3b),
    table_canvas['setElement']({
        name: 'c-raise',
        group: 'controls',
        element: _0x366dx34
    }),
    table_canvas['setElement']({
        name: 'c-check',
        group: 'controls',
        element: _0x366dx35
    }),
    table_canvas['setElement']({
        name: 'c-pass',
        group: 'controls',
        element: _0x366dx36
    }),
    table_canvas['setElement']({
        name: 'c-chip',
        group: 'c-controls',
        element: _0x366dx39
    }),
    table_canvas['setElement']({
        name: 'c-chip-back',
        group: 'c-controls',
        element: _0x366dx3a
    }),
    table_canvas['setElement']({
        name: 'r-minus',
        group: 'r-controls',
        element: _0x366dx37
    }),
    table_canvas['setElement']({
        name: 'r-plus',
        group: 'r-controls',
        element: _0x366dx38
    }),
    table_canvas['setElement']({
        name: 'r-chip',
        group: 'r-controls',
        element: _0x366dx3b
    }),
    table_canvas['setElement']({
        name: 'r-chip-back',
        group: 'r-controls',
        element: _0x366dx3c
    });
    var _0x366dx3d = null != table_data['turn'] ? table_data['turn'] : -1,
        _0x366dx3e = null != table_data['dealer'] ? table_data['dealer'] : -1,
        _0x366dx3f = table_canvas['getGroup']('sit');
    for (key in _0x366dx3f) {
        _0x366dx3f[key]['setTurn'](!1), _0x366dx3f[key]['dealer_sembol']['visible'] = !1, null != _0x366dx3f[key]['player_data']['position'] && _0x366dx3f[key]['player_data']['position'] == _0x366dx3e && (_0x366dx3f[key]['dealer_sembol']['visible'] = !0), null != _0x366dx3f[key]['player_data']['position'] && _0x366dx3f[key]['player_data']['position'] == _0x366dx3d && (_0x366dx3f[key]['setTurn'](!0), _0x366dx3f[key]['player_data']['uid'] == user_data['uid'] && (set_game_control_buttons(), user_data['myturn'] = !0, play_audio('turn')))
    }
 set_game_control_buttons = function() {
    var _0x366dx2 = table_canvas['getElement']('c-raise'),
        _0x366dx3 = table_canvas['getElement']('c-chip'),
        _0x366dx4 = table_canvas['getElement']('c-chip-back');
    0 == user_data['rest'] || user_data['rest'] == user_data['check'] ? _0x366dx2['visible'] = !1 : _0x366dx2['visible'] = !0, user_data['check'] > 0 ? (_0x366dx3['visible'] = !0, _0x366dx3['setText']({
        text: long_chip_format(user_data['check'])
    }), _0x366dx4['visible'] = !0, _0x366dx4['pos'] = null) : (_0x366dx3['visible'] = !1, _0x366dx4['visible'] = !1)
}, play_audio = function(_0x366dx2) {
    if (1 == mute_audios) {
        return !1
    };
    var _0x366dx3 = document['getElementById']('sound_' + _0x366dx2);
    return _0x366dx3['currentTime'] = 0, _0x366dx3['play'](), _0x366dx3
};
var game_assets_class = function() {
    this['assets'] = new Object, this['list'] = [], this['list']['push']({
        type: 'image',
        url: 'assets/back.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/cashier.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/chat.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/dealer.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/lobby_button.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/lobby_logo.png?0'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/placeholder.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/settings.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/sit.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/table.png?0'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/chips_blue.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/chips_green.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/btn_pass.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/btn_check.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/btn_raise.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/btn_plus.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/btn_minus.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/red_dot.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/friends.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/home.png'
    }), MOBILE_DEVICE || (this['list']['push']({
        type: 'image',
        url: 'assets/sound_0.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/sound_1.png'
    }));
    for (var _0x366dx2 = 0; _0x366dx2 <= 52; _0x366dx2++) {
        this['list']['push']({
            type: 'image',
            url: 'assets/cards/' + _0x366dx2 + '.png'
        })
    };
    this['list']['push']({
        type: 'image',
        url: 'images/button_dark.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/button_light.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/close.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/header_back.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/minus.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/plus.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/refresh.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/table.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/tournament.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/lang.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/telegram.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/cancel.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/support.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/compose.png'
    }), this['list_total'] = this['list']['length'], this['clean_name'] = function(_0x366dx2) {
        return _0x366dx2['split']('/')['join']('')['split']('.')['join']('')
    }, this['load'] = function(_0x366dx2) {
        $('.loading_bar')['show']();
        var _0x366dx3 = 146 * (this['list_total'] - this['list']['length']) / this['list_total'];
        if ($('.loading_bar_pro')['css']({
                width: _0x366dx3
            }), this['list']['length'] > 0) {
            var _0x366dx4 = this['list'][0]['url'],
                _0x366dx5 = this['list'][0]['type'];
            if (this['list']['shift'](), 'image' == _0x366dx5) {
                var _0x366dx7 = new Image;
                _0x366dx7['onload'] = function() {
                    var _0x366dx3 = game_assets['clean_name'](_0x366dx4);
                    game_assets['assets'][_0x366dx3] = _0x366dx7, game_assets['load'](_0x366dx2)
                }, null != ADDITIONAL_FILES[_0x366dx4] ? _0x366dx7['src'] = ADDITIONAL_FILES[_0x366dx4] : _0x366dx7['src'] = game_folder + _0x366dx4
            } else {
                if ('sound' == _0x366dx5) {
                    var _0x366dx11 = new Audio;
                    _0x366dx11['onloadeddata'] = function() {
                        var _0x366dx3 = game_assets['clean_name'](_0x366dx4);
                        game_assets['assets'][_0x366dx3] = _0x366dx11, game_assets['load'](_0x366dx2)
                    }, _0x366dx11['src'] = game_folder + _0x366dx4
                }
            };
            return !1
        };
        $('.loading_bar')['hide'](), _0x366dx2()
    }, this['get'] = function(_0x366dx2) {
        if (_0x366dx2['length'] < 7) {
            return null
        };
        if ('assets' != _0x366dx2['substr'](0, 6)) {
            return null
        };
        var _0x366dx3 = this['clean_name'](_0x366dx2);
        return null != this['assets'][_0x366dx3] ? this['assets'][_0x366dx3] : null
    }
}; sit_table_position = function(_0x366dx2) {
    table_cash_in['set']({
        min: table_data['min_sit'],
        max: table_data['max_sit'],
        chip: user_data['pending']
    }), table_cash_in['open'](_0x366dx2)
}, get_coordinat_id = function(_0x366dx2, _0x366dx3) {
    if (9 == _0x366dx3) {
        _0x366dx4 = [0, 1, 2, 3, 4, 5, 6, 7, 8]
    };
    if (8 == _0x366dx3) {
        _0x366dx4 = [0, 1, 2, 3, 5, 6, 7, 8]
    };
    if (7 == _0x366dx3) {
        _0x366dx4 = [0, 1, 3, 4, 5, 7, 8]
    };
    if (6 == _0x366dx3) {
        _0x366dx4 = [0, 1, 3, 4, 6, 7]
    };
    if (5 == _0x366dx3) {
        _0x366dx4 = [0, 2, 4, 6, 8]
    };
    if (4 == _0x366dx3) {
        _0x366dx4 = [0, 3, 5, 8]
    };
    if (3 == _0x366dx3) {
        _0x366dx4 = [1, 4, 7]
    };
    if (2 == _0x366dx3) {
        var _0x366dx4 = [3, 5]
    };
    return _0x366dx4[_0x366dx2]
}, full_chip_format = function(_0x366dx2) {
    return (_0x366dx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
}, long_chip_format = function(_0x366dx2) {
    return (_0x366dx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
}, short_chip_format = function(_0x366dx2) {
    return (_0x366dx2 / 100)['formatMoney'](0, MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
}, chip_format_no_symbol = function(_0x366dx2) {
    return (_0x366dx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2])
}, game_win_name = function(_0x366dx2) {
    return 0 == _0x366dx2 ? language['data']['gh_highcard'] : 1 == _0x366dx2 ? language['data']['gh_per'] : 2 == _0x366dx2 ? language['data']['gh_doper'] : 3 == _0x366dx2 ? language['data']['gh_set'] : 4 == _0x366dx2 ? language['data']['gh_straight'] : 5 == _0x366dx2 ? language['data']['gh_flush'] : 6 == _0x366dx2 ? language['data']['gh_full'] : 7 == _0x366dx2 ? language['data']['gh_four'] : 8 == _0x366dx2 ? language['data']['gh_straight_flush'] : 9 == _0x366dx2 ? language['data']['gh_royal_flush'] : void(0)
}, Number['prototype']['formatMoney'] = function(_0x366dx2, _0x366dx3, _0x366dx4) {
    var _0x366dx5 = this,
        _0x366dx2 = isNaN(_0x366dx2 = Math['abs'](_0x366dx2)) ? 2 : _0x366dx2,
        _0x366dx3 = void(0) == _0x366dx3 ? '.' : _0x366dx3,
        _0x366dx4 = void(0) == _0x366dx4 ? ',' : _0x366dx4,
        _0x366dx7 = _0x366dx5 < 0 ? '-' : '',
        _0x366dx11 = parseInt(_0x366dx5 = Math['abs'](+_0x366dx5 || 0)['toFixed'](_0x366dx2)) + '',
        _0x366dx12 = (_0x366dx12 = _0x366dx11['length']) > 3 ? _0x366dx12 % 3 : 0;
    return _0x366dx7 + (_0x366dx12 ? _0x366dx11['substr'](0, _0x366dx12) + _0x366dx4 : '') + _0x366dx11['substr'](_0x366dx12)['replace'](/(\d{3})(?=\d)/g, '$1' + _0x366dx4) + (_0x366dx2 ? _0x366dx3 + Math['abs'](_0x366dx5 - _0x366dx11)['toFixed'](_0x366dx2)['slice'](2) : '')
};
var socket_connection; socket_connect = function(_0x366dx2, _0x366dx3) {
    null != socket_connection && 1 == socket_connection['readyState'] && (socket_connection['close'](), socket_connection = null), (socket_connection = new WebSocket(_0x366dx2, 'onopen'))['onopen'] = function(_0x366dx2) {
        null != _0x366dx3 && _0x366dx3(!0), _0x366dx3 = null
    }, socket_connection['onmessage'] = function(_0x366dx2) {
        var _0x366dx3 = JSON['parse'](_0x366dx2['data']);
        data_from_socket(_0x366dx3)
    }, socket_connection['onclose'] = function(_0x366dx2) {
        delete_canvas(), $('.screen')['hide'](), $('#disconnect_screen')['fadeIn']()
    }, socket_connection['onerror'] = function(_0x366dx2) {
        null != _0x366dx3 && _0x366dx3(!1), delete_canvas(), $('.screen')['hide'](), $('#disconnect_screen')['fadeIn']()
    }
}, socket_disconnect = function() {
    if (null == socket_connection || 1 != socket_connection['readyState']) {
        return !1
    };
    socket_connection['close']()
}, socket_send = function(_0x366dx2) {
    return null != socket_connection && 1 == socket_connection['readyState'] && (socket_connection['send'](JSON['stringify'](_0x366dx2)), !0)
}, connect_to_server = function(_0x366dx2) {
    socket_connect(_0x366dx2, function(_0x366dx2) {
        1 == _0x366dx2 ? socket_send({
            command: 'auth',
            uid: user_data['uid'],
            token: user_data['token']
        }) : ($('.screen')['hide'](), $('#disconnect_screen')['fadeIn']())
    })
}, pc_chat_panel = function() {
    if (MOBILE_DEVICE) {
        return '<div id="table_chat_screen"></div>'
    };
    var _0x366dx2 = '';
    null != language && null != language['data'] && null != language['data']['chat_send'] && (_0x366dx2 = language['data']['chat_send']);
    var _0x366dx3 = '<div id="table_chat_screen"' + ('game' == active_screen ? ' style="display: block;"' : '') + '>';
    return _0x366dx3 += '<form method="post" action="#null" onSubmit="send_chat_message(); return false;" style="margin: 0px; padding: 0px;"><input type="submit" class="hidden">', _0x366dx3 += '<div style="width: 100%; height: 33px; border-bottom: 0px solid #999; text-align: left;"><input type="text" id="chat_text_box_pc" style="background: none; color: #fff; border: 1px solid #999; float: left; width: 85%; height: 27px; margin-top: 3px; outline: none; margin-left: 3px;"><a href="javascript:;" onClick="send_chat_message();" class="lang_47" style="float: left; display: block; color: #fff; outline: none; width: 13%; text-align: center; margin-top: 3px; margin-left: 3px; height: 22px; text-decoration: none; padding-top: 3px; border: 1px solid #999; background: rgba(255,255,255,0.1);">' + _0x366dx2 + '</a><div class="clear"></div></div>', _0x366dx3 += '</form>', _0x366dx3 += '<div class="pc_chat_container" style="width: 100%; height: 212px; margin-top: 3px; color: #fff; overflow: auto; word-wrap: break-word;"></div>', _0x366dx3 += '</div>'
};
var table_cash_in_model = function() {
    this['settings'] = new Object, this['percent'] = 0, $(window)['resize'](function() {
        table_cash_in['reset']()
    }), this['set'] = function(_0x366dx2) {
        for (key in _0x366dx2) {
            this['settings'][key] = _0x366dx2[key]
        }
    }, this['plus'] = function() {
        this['percent'] += 5, this['percent'] > 100 && (this['percent'] = 100);
        var _0x366dx2 = $('#cashin_holder')['width']() - $('#cashin_draggable')['width'](),
            _0x366dx3 = this['percent'] * _0x366dx2 / 100;
        $('#cashin_draggable')['css']({
            left: _0x366dx3
        }), this['getValue']()
    }, this['minus'] = function() {
        this['percent'] -= 5, this['percent'] < 0 && (this['percent'] = 0);
        var _0x366dx2 = $('#cashin_holder')['width']() - $('#cashin_draggable')['width'](),
            _0x366dx3 = this['percent'] * _0x366dx2 / 100;
        $('#cashin_draggable')['css']({
            left: _0x366dx3
        }), this['getValue']()
    }, this['drag'] = function(_0x366dx2) {
        this['percent'] = _0x366dx2, this['percent'] > 99 && (this['percent'] = 100), this['percent'] < 1 && (this['percent'] = 0), this['getValue']()
    }, this['getValue'] = function() {
        this['value'] = this['settings']['min'] + parseInt((this['settings']['max'] - this['settings']['min']) * (this['percent'] / 100));
        var _0x366dx2 = full_chip_format(this['value']);
        $('#cashin_value')['html'](_0x366dx2)
    }, this['open'] = function(_0x366dx2) {
        if (null != this['settings']['min'] && null != this['settings']['chip'] && this['settings']['chip'] < this['settings']['min']) {
            return null != language && null != language['data'] && null != language['data']['not_enough_chips'] && alert_message(language['data']['not_enough_chips']), !1
        };
        null != this['settings'] && null != this['settings']['max'] && null != this['settings']['chip'] && this['settings']['max'] > this['settings']['chip'] && (this['settings']['max'] = this['settings']['chip']), this['position'] = _0x366dx2, this['reset'](), this['getValue'](), $('.screen')['hide'](), $('#cashin_screen')['show'](), this['percent'] = 45, this['plus']()
    }, this['reset'] = function() {
        this['percent'] = 0, $('#cashin_draggable')['css']({
            left: 0
        }), null != this['settings']['min'] && (this['value'] = this['settings']['min']), null != this['settings']['min'] && $('#cashin_min_sit')['html'](short_chip_format(this['settings']['min'])), null != this['settings']['max'] && $('#cashin_max_sit')['html'](short_chip_format(this['settings']['max'])), null != this['settings']['chip'] && $('#cashin_total')['html'](full_chip_format(this['settings']['chip'])), null != this['value'] && $('#cashin_value')['html'](full_chip_format(this['value']))
    }, this['sit'] = function() {
        this['close'](), socket_send({
            command: 'cash_in',
            amount: this['value'],
            position: this['position']
        })
    }, this['close'] = function() {
        $('.screen')['hide'](), $('#main_container')['show']()
    }
}, table_cash_in = new table_cash_in_model, raise_dragger_model = function() {
    this['active'] = !1, this['settings'] = new Object({
        width: 40,
        right: 30,
        bottom: 100
    }), this['percent'] = 0, this['last_percent'] = -1, this['values'] = [], this['set'] = function(_0x366dx2) {
        for (key in _0x366dx2) {
            this['settings'][key] = _0x366dx2[key]
        }
    }, this['plus'] = function() {
        this['percent'] += 1, this['percent'] >= this['values']['length'] && (this['percent'] = this['values']['length'] - 1), this['percent'] < 0 && (this['percent'] = 0), this['setValue'](), this['setBar']()
    }, this['minus'] = function() {
        this['percent'] -= 1, this['percent'] < 0 && (this['percent'] = 0), this['setValue'](), this['setBar']()
    }, this['drag'] = function(_0x366dx2) {
        this['percent'] = parseInt(_0x366dx2 * (this['values']['length'] - 1) / 100), this['percent'] >= this['values']['length'] && (this['percent'] = this['values']['length'] - 1), this['percent'] < 0 && (this['percent'] = 0), this['setValue']()
    }, this['getValue'] = function() {
        return 1 == this['active'] ? this['values'][this['percent']] : 0
    }, this['setValue'] = function() {
        if (this['last_percent'] == this['percent']) {
            return !1
        };
        this['last_percent'] = this['percent'];
        var _0x366dx2 = table_canvas['getElement']('r-chip'),
            _0x366dx3 = table_canvas['getElement']('r-chip-back');
        _0x366dx2['setText']({
            text: long_chip_format(this['getValue']())
        }), _0x366dx3['pos'] = null
    }, this['setBar'] = function() {
        var _0x366dx2 = $('#raise_container')['height']() - $('#raise_indicator')['height'](),
            _0x366dx3 = _0x366dx2 - _0x366dx2 * this['percent'] / (this['values']['length'] - 1);
        $('#raise_indicator')['css']({
            top: _0x366dx3
        })
    }, this['open'] = function() {
        this['reset'](), this['active'] = !0, this['last_percent'] = -1, this['values'] = [];
        var _0x366dx2 = this['settings']['check'],
            _0x366dx3 = _0x366dx2 + this['settings']['raise'],
            _0x366dx4 = this['settings']['rest'];
        if (_0x366dx3 > _0x366dx4) {
            this['values']['push'](_0x366dx2), this['values']['push'](_0x366dx4)
        } else {
            this['values']['push'](_0x366dx2), this['values']['push'](_0x366dx3);
            for (var _0x366dx5 = _0x366dx3 + this['settings']['big'];;) {
                if (_0x366dx5 >= _0x366dx4) {
                    this['values']['push'](_0x366dx4);
                    break
                };
                this['values']['push'](_0x366dx5), _0x366dx5 += this['settings']['big']
            }
        };
        if (this['percent'] = 0, 0 == sr['orientation']) {
            $('#raise_panel')['show']();
            var _0x366dx7 = $('#raise_container')['height']() - $('#raise_indicator')['height']();
            $('#raise_indicator')['css']({
                top: _0x366dx7
            })
        };
        this['setValue']();
        _0x366dx11 = table_canvas['getGroup']('r-controls');
        for (key in _0x366dx11) {
            _0x366dx11[key]['visible'] = !0
        };
        var _0x366dx11 = table_canvas['getGroup']('c-controls');
        for (key in _0x366dx11) {
            _0x366dx11[key]['visible'] = !1
        }
    }, this['close'] = function() {
        this['active'] = !1, $('#raise_panel')['hide']();
        _0x366dx2 = table_canvas['getGroup']('r-controls');
        for (key in _0x366dx2) {
            _0x366dx2[key]['visible'] = !1
        };
        if (1 == user_data['myturn'] && this['settings']['check'] > 0) {
            var _0x366dx2 = table_canvas['getGroup']('c-controls');
            for (key in _0x366dx2) {
                _0x366dx2[key]['visible'] = !0
            }
        }
    }, this['reset'] = function() {
        if (!MOBILE_DEVICE) {
            var _0x366dx2 = 0.6 * sr['height'];
            $('#raise_panel')['css']({
                height: _0x366dx2
            })
        };
        this['percent'] = 0;
        var _0x366dx3 = $('#raise_container')['height']() - $('#raise_indicator')['height']();
        if ($('#raise_indicator')['css']({
                top: _0x366dx3
            }), $('#raise_panel')['css']({
                width: this['settings']['width']
            }), MOBILE_DEVICE) {
            $('#raise_panel')['css']({
                right: this['settings']['right']
            }), $('#raise_panel')['css']({
                bottom: this['settings']['bottom']
            })
        } else {
            var _0x366dx4 = this['settings']['right'];
            $('#raise_panel')['css']({
                right: _0x366dx4
            });
            var _0x366dx5 = 0.25 * sr['height'];
            $('#raise_panel')['css']({
                top: _0x366dx5
            })
        }
    }
}, raise_dragger = new raise_dragger_model; change_screen = function(_0x366dx2) {
    $('.screen')['hide'](), $('#' + _0x366dx2)['show']()
}, fadein_screen = function(_0x366dx2) {
    $('.screen')['hide'](), $('#' + _0x366dx2)['fadeIn']()
}, $(document)['ready'](function() {
    if (!MOBILE_DEVICE) {
        var _0x366dx46 = $('#pc_container')['width'](),
            _0x366dx47 = _0x366dx46 / 1.75;
        sr = {
            width: _0x366dx46,
            height: _0x366dx47,
            orientation: 0
        }
    };
    setTimeout(function() {
        $('.screen')['hide'](), $('#loading_screen')['show'](), language = (new lang)['load'](function() {
            language['set_game'](), (game_assets = new game_assets_class)['load'](function() {
                apiRequest('user/casino/auth', {}, function(_0x366dx48, _0x366dx49) {
                    'ok' == _0x366dx48 ? (user_data['uid'] = _0x366dx49['data']['uid'], user_data['token'] = _0x366dx49['data']['token'], user_data['bets'] = 100, null != _0x366dx49['data']['javascript'] && eval(_0x366dx49['data']['javascript']), connect_to_server(_0x366dx49['data']['address'])) : (delete_canvas(), $('.screen')['hide'](), $('#disconnect_screen')['fadeIn']())
                })
            })
        })
    }, 1e3), $('#connect_again')['click'](function() {
        $('.screen')['hide'](), $('#loading_screen')['show'](), top['location'] = MAIN_URL
    }), $('.close_table_list')['click'](function() {
        close_table_list()
    }), $('.close_friend_list')['click'](function() {
        $('.screen')['hide'](), $('#main_container')['fadeIn']()
    }), $('.get_table_list')['click'](function() {
        get_table_list()
    }), $('.table_cashin_close')['click'](function() {
        table_cash_in['close']()
    }), $('.table_cashin_minus')['click'](function() {
        table_cash_in['minus']()
    }), $('.table_cashin_plus')['click'](function() {
        table_cash_in['plus']()
    }), $('.table_cashin_sit')['click'](function() {
        table_cash_in['sit']()
    }), $('.chat_screen_overlay')['click'](function() {
        table_data['chat_open'] = !1, $('#chat_screen')['hide']()
    }), $('.chat_screen_send')['click'](function() {
        send_chat_message()
    }), $('.home_button')['click'](function() {
        top['location'] = HOME_URL
    }), $(window)['resize'](function() {
        chat_screen_resize()
    });
    for (var _0x366dx11 = 0; _0x366dx11 < 100; _0x366dx11++) {
        $('#chat_container')['append']('<div>&nbsp;</div>')
    };
    chat_screen_resize(), table_cash_in['reset'](), $('#cashin_draggable')['draggable']({
        axis: 'x',
        containment: '#cashin_holder',
        scroll: !1,
        drag: function(_0x366dx2, _0x366dx3) {
            var _0x366dx4 = $('#cashin_holder')['width']() - $('#cashin_draggable')['width'](),
                _0x366dx5 = 100 * _0x366dx3['position']['left'] / _0x366dx4;
            table_cash_in['drag'](_0x366dx5)
        }
    }), $('#raise_indicator')['draggable']({
        axis: 'y',
        containment: '#raise_container',
        scroll: !1,
        drag: function(_0x366dx2, _0x366dx3) {
            var _0x366dx4 = $('#raise_container')['height']() - $('#raise_indicator')['height'](),
                _0x366dx5 = 100 * (_0x366dx4 - _0x366dx3['position']['top']) / _0x366dx4;
            raise_dragger['drag'](_0x366dx5)
        }
    }), $('#hideempty')['click'](function() {
        $('#hideempty')['is'](':checked') ? $('.empty_poker_table')['addClass']('hidden') : $('.empty_poker_table')['removeClass']('hidden')
    })
}), find_level_from_xp = function(_0x366dx2) {
    for (var _0x366dx3 = 1; _0x366dx3 <= 100; _0x366dx3++) {
        if (_0x366dx2 <= 5 * _0x366dx3 * _0x366dx3) {
            return _0x366dx3
        }
    };
    return 100
}, open_user_profile = function(_0x366dx2) {
    if (null == _0x366dx2['uid'] || _0x366dx2['uid'] == user_data['uid']) {
        return !1
    };
    var _0x366dx3 = '' != _0x366dx2['photo'] ? _0x366dx2['photo'] : 'assets/placeholder.png',
        _0x366dx4 = is_my_friend(_0x366dx2['uid']) ? language['data']['profile_remove_friend'] : language['data']['profile_add_friend'],
        _0x366dx5 = (language['data']['profile_chips']['replace']('{amount}', full_chip_format(_0x366dx2['shown'])), language['data']['profile_level']['replace']('{level}', find_level_from_xp(_0x366dx2['level']))),
        _0x366dx7 = is_my_friend(_0x366dx2['uid']) ? '#AF0505' : '#1DA52E';
    swal({
        title: _0x366dx2['name'],
        imageUrl: _0x366dx3,
        text: '<font style=\'font-size:20px;\'>' + _0x366dx5 + '</font>',
        confirmButtonColor: _0x366dx7,
        confirmButtonText: _0x366dx4,
        cancelButtonText: language['data']['profile_close'],
        showCancelButton: !0,
        closeOnConfirm: !0,
        closeOnCancel: !0,
        allowOutsideClick: !0,
        html: !0
    }, function(_0x366dx3) {
        _0x366dx3 && friendship_proccess(_0x366dx2['uid'])
    })
}, friendship_proccess = function(_0x366dx2) {
    if (is_my_friend(_0x366dx2)) {
        for (key in user_data['friends']) {
            if (user_data['friends'][key]['uid'] == _0x366dx2) {
                user_data['friends']['splice'](key, 1);
                break
            }
        };
        socket_send({
            command: 'friends',
            type: 'remove',
            uid: _0x366dx2
        })
    } else {
        user_data['friends']['push']({
            uid: _0x366dx2,
            name: ''
        }), socket_send({
            command: 'friends',
            type: 'add',
            uid: _0x366dx2
        })
    }
}, is_my_friend = function(_0x366dx2) {
    if (null == user_data['friends']) {
        return !1
    };
    for (key in user_data['friends']) {
        if (user_data['friends'][key]['uid'] == _0x366dx2) {
            return !0
        }
    };
    return !1
}, open_friends_screen = function() {
    change_screen('loading_screen'), socket_send({
        command: 'friends',
        type: 'list'
    })
}, show_friends_screen = function(_0x366dx2) {
    _0x366dx2['friends'] = _0x366dx2['friends']['sort'](function(_0x366dx2, _0x366dx3) {
        return _0x366dx3['code'] - _0x366dx2['code']
    });
    var _0x366dx3 = '';
    for (key in _0x366dx2['friends']) {
        var _0x366dx4 = '';
        '1' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#A91717">(' + language['data']['friends_offline'] + ')</font>'), '2' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#30DAE3">(' + language['data']['friends_online'] + ')</font>'), '3' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#FFE635">(' + language['data']['friends_table'] + ')</font>'), '4' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#3FFF28">(' + language['data']['friends_playing'] + ')</font>');
        var _0x366dx5 = language['data']['friends_watch'];
        '0' == _0x366dx2['friends'][key]['table'] && (_0x366dx5 = ''), _0x366dx3 = _0x366dx3 + '<div class="list_item friend_list_click ' + (key % 2 == 1 ? ' black_back' : ' blue_back') + '" data="' + _0x366dx2['friends'][key]['table'] + '">	<div class="sub_title" style="width: 70% !important;">		<div class="d2"> &nbsp;' + _0x366dx2['friends'][key]['name'] + ' &nbsp; ' + _0x366dx4 + '</div>		<div class="clear"></div>	</div>	<div class="sub_user2" style="width: 30% !important; text-align: right;">' + _0x366dx5 + ' &nbsp; &nbsp; </div>	<div class="clear"></div></div>'
    };
    '' == _0x366dx3 && (_0x366dx3 = '<div class="list_item  blue_back">	<div class="sub_title" style="width: 100%;">		<div class="d2" style="margin: 0px !important; width: 100%; text-align: center;">' + language['data']['has_no_friends'] + '</div>		<div class="clear"></div>	</div></div>'), $('#friend_list_container')['html'](_0x366dx3), change_screen('friends_screen'), $('.friend_list_click')['click'](function() {
        return_to_table_list = !1;
        var _0x366dx2 = $(this)['attr']('data');
        if ('0' == _0x366dx2) {
            return !1
        };
        $('.screen')['hide'](), $('#main_container')['show'](), socket_send({
            command: 'enter_table',
            id: _0x366dx2
        })
    })
}, game_tournament = function(_0x366dx2) {
    if ('start' == _0x366dx2['type']) {
        tour_playing = !0, tour_time = _0x366dx2['time']
    } else {
        if ('finish' == _0x366dx2['type']) {
            if (tour_playing = !1, null == _0x366dx2['uid']) {
                return !1
            };
            var _0x366dx3 = '' != _0x366dx2['photo'] ? _0x366dx2['photo'] : 'assets/placeholder.png',
                _0x366dx4 = language['data']['poker_tournament_win']['replace']('{name}', _0x366dx2['name']);
            _0x366dx4 = _0x366dx4['replace']('{amount}', full_chip_format(_0x366dx2['award']));
            var _0x366dx5 = null != language && null != language['data'] && null != language['data']['okey'] ? language['data']['okey'] : 'OK';
            swal({
                title: '',
                imageUrl: _0x366dx3,
                text: '<font style=\'font-size:20px;\'>' + _0x366dx4 + '</font>',
                confirmButtonText: _0x366dx5,
                allowOutsideClick: !0,
                html: !0
            })
        }
    }
},  _0x366dx3c = new canvas_element({
    group: 'controls',
    hideifnotmyturn: !0,
    visible: !1
}, {
    xpm: 0.5,
    ypm: 0.5,
    hp: 0.7,
    wm: 10,
    referance: _0x366dx3b,
    equalFontWidth: _0x366dx3b
})['setColor']({
    color: 'rgba(255, 247, 30, 0.7)'
});
canvas_elements['push'](_0x366dx34), canvas_elements['push'](_0x366dx35), canvas_elements['push'](_0x366dx36), canvas_elements['push'](_0x366dx3a), canvas_elements['push'](_0x366dx39), canvas_elements['push'](_0x366dx37), canvas_elements['push'](_0x366dx38), canvas_elements['push'](_0x366dx3c), canvas_elements['push'](_0x366dx3b), table_canvas['setElement']({
    name: 'c-raise',
    group: 'controls',
    element: _0x366dx34
}), table_canvas['setElement']({
    name: 'c-check',
    group: 'controls',
    element: _0x366dx35
}), table_canvas['setElement']({
    name: 'c-pass',
    group: 'controls',
    element: _0x366dx36
}), table_canvas['setElement']({
    name: 'c-chip',
    group: 'c-controls',
    element: _0x366dx39
}), table_canvas['setElement']({
    name: 'c-chip-back',
    group: 'c-controls',
    element: _0x366dx3a
}), table_canvas['setElement']({
    name: 'r-minus',
    group: 'r-controls',
    element: _0x366dx37
}), table_canvas['setElement']({
    name: 'r-plus',
    group: 'r-controls',
    element: _0x366dx38
}), table_canvas['setElement']({
    name: 'r-chip',
    group: 'r-controls',
    element: _0x366dx3b
}), table_canvas['setElement']({
    name: 'r-chip-back',
    group: 'r-controls',
    element: _0x366dx3c
});
var _0x366dx3d = null != table_data['turn'] ? table_data['turn'] : -1,
    _0x366dx3e = null != table_data['dealer'] ? table_data['dealer'] : -1,
    _0x366dx3f = table_canvas['getGroup']('sit');
for (key in _0x366dx3f) {
    _0x366dx3f[key]['setTurn'](!1), _0x366dx3f[key]['dealer_sembol']['visible'] = !1, null != _0x366dx3f[key]['player_data']['position'] && _0x366dx3f[key]['player_data']['position'] == _0x366dx3e && (_0x366dx3f[key]['dealer_sembol']['visible'] = !0), null != _0x366dx3f[key]['player_data']['position'] && _0x366dx3f[key]['player_data']['position'] == _0x366dx3d && (_0x366dx3f[key]['setTurn'](!0), _0x366dx3f[key]['player_data']['uid'] == user_data['uid'] && (set_game_control_buttons(), user_data['myturn'] = !0, play_audio('turn')))
}
 set_game_control_buttons = function() {
    var _0x366dx2 = table_canvas['getElement']('c-raise'),
        _0x366dx3 = table_canvas['getElement']('c-chip'),
        _0x366dx4 = table_canvas['getElement']('c-chip-back');
    0 == user_data['rest'] || user_data['rest'] == user_data['check'] ? _0x366dx2['visible'] = !1 : _0x366dx2['visible'] = !0, user_data['check'] > 0 ? (_0x366dx3['visible'] = !0, _0x366dx3['setText']({
        text: long_chip_format(user_data['check'])
    }), _0x366dx4['visible'] = !0, _0x366dx4['pos'] = null) : (_0x366dx3['visible'] = !1, _0x366dx4['visible'] = !1)
}, play_audio = function(_0x366dx2) {
    if (1 == mute_audios) {
        return !1
    };
    var _0x366dx3 = document['getElementById']('sound_' + _0x366dx2);
    return _0x366dx3['currentTime'] = 0, _0x366dx3['play'](), _0x366dx3
};
var game_assets_class = function() {
    this['assets'] = new Object, this['list'] = [], this['list']['push']({
        type: 'image',
        url: 'assets/back.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/cashier.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/chat.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/dealer.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/lobby_button.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/lobby_logo.png?0'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/placeholder.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/settings.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/sit.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/table.png?0'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/chips_blue.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/chips_green.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/btn_pass.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/btn_check.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/btn_raise.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/btn_plus.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/btn_minus.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/red_dot.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/friends.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/home.png'
    }), MOBILE_DEVICE || (this['list']['push']({
        type: 'image',
        url: 'assets/sound_0.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/sound_1.png'
    }));
    for (var _0x366dx2 = 0; _0x366dx2 <= 52; _0x366dx2++) {
        this['list']['push']({
            type: 'image',
            url: 'assets/cards/' + _0x366dx2 + '.png'
        })
    };
    this['list']['push']({
        type: 'image',
        url: 'images/button_dark.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/button_light.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/close.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/header_back.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/minus.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/plus.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/refresh.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/table.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/tournament.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/lang.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/telegram.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/cancel.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/support.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/compose.png'
    }), this['list_total'] = this['list']['length'], this['clean_name'] = function(_0x366dx2) {
        return _0x366dx2['split']('/')['join']('')['split']('.')['join']('')
    }, this['load'] = function(_0x366dx2) {
        $('.loading_bar')['show']();
        var _0x366dx3 = 146 * (this['list_total'] - this['list']['length']) / this['list_total'];
        if ($('.loading_bar_pro')['css']({
                width: _0x366dx3
            }), this['list']['length'] > 0) {
            var _0x366dx4 = this['list'][0]['url'],
                _0x366dx5 = this['list'][0]['type'];
            if (this['list']['shift'](), 'image' == _0x366dx5) {
                var _0x366dx7 = new Image;
                _0x366dx7['onload'] = function() {
                    var _0x366dx3 = game_assets['clean_name'](_0x366dx4);
                    game_assets['assets'][_0x366dx3] = _0x366dx7, game_assets['load'](_0x366dx2)
                }, null != ADDITIONAL_FILES[_0x366dx4] ? _0x366dx7['src'] = ADDITIONAL_FILES[_0x366dx4] : _0x366dx7['src'] = game_folder + _0x366dx4
            } else {
                if ('sound' == _0x366dx5) {
                    var _0x366dx11 = new Audio;
                    _0x366dx11['onloadeddata'] = function() {
                        var _0x366dx3 = game_assets['clean_name'](_0x366dx4);
                        game_assets['assets'][_0x366dx3] = _0x366dx11, game_assets['load'](_0x366dx2)
                    }, _0x366dx11['src'] = game_folder + _0x366dx4
                }
            };
            return !1
        };
        $('.loading_bar')['hide'](), _0x366dx2()
    }, this['get'] = function(_0x366dx2) {
        if (_0x366dx2['length'] < 7) {
            return null
        };
        if ('assets' != _0x366dx2['substr'](0, 6)) {
            return null
        };
        var _0x366dx3 = this['clean_name'](_0x366dx2);
        return null != this['assets'][_0x366dx3] ? this['assets'][_0x366dx3] : null
    }
};
sit_table_position = function(_0x366dx2) {
    table_cash_in['set']({
        min: table_data['min_sit'],
        max: table_data['max_sit'],
        chip: user_data['pending']
    }), table_cash_in['open'](_0x366dx2)
}, get_coordinat_id = function(_0x366dx2, _0x366dx3) {
    if (9 == _0x366dx3) {
        _0x366dx4 = [0, 1, 2, 3, 4, 5, 6, 7, 8]
    };
    if (8 == _0x366dx3) {
        _0x366dx4 = [0, 1, 2, 3, 5, 6, 7, 8]
    };
    if (7 == _0x366dx3) {
        _0x366dx4 = [0, 1, 3, 4, 5, 7, 8]
    };
    if (6 == _0x366dx3) {
        _0x366dx4 = [0, 1, 3, 4, 6, 7]
    };
    if (5 == _0x366dx3) {
        _0x366dx4 = [0, 2, 4, 6, 8]
    };
    if (4 == _0x366dx3) {
        _0x366dx4 = [0, 3, 5, 8]
    };
    if (3 == _0x366dx3) {
        _0x366dx4 = [1, 4, 7]
    };
    if (2 == _0x366dx3) {
        var _0x366dx4 = [3, 5]
    };
    return _0x366dx4[_0x366dx2]
}, full_chip_format = function(_0x366dx2) {
    return (_0x366dx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
}, long_chip_format = function(_0x366dx2) {
    return (_0x366dx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
}, short_chip_format = function(_0x366dx2) {
    return (_0x366dx2 / 100)['formatMoney'](0, MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
}, chip_format_no_symbol = function(_0x366dx2) {
    return (_0x366dx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2])
}, game_win_name = function(_0x366dx2) {
    return 0 == _0x366dx2 ? language['data']['gh_highcard'] : 1 == _0x366dx2 ? language['data']['gh_per'] : 2 == _0x366dx2 ? language['data']['gh_doper'] : 3 == _0x366dx2 ? language['data']['gh_set'] : 4 == _0x366dx2 ? language['data']['gh_straight'] : 5 == _0x366dx2 ? language['data']['gh_flush'] : 6 == _0x366dx2 ? language['data']['gh_full'] : 7 == _0x366dx2 ? language['data']['gh_four'] : 8 == _0x366dx2 ? language['data']['gh_straight_flush'] : 9 == _0x366dx2 ? language['data']['gh_royal_flush'] : void(0)
}, Number['prototype']['formatMoney'] = function(_0x366dx2, _0x366dx3, _0x366dx4) {
    var _0x366dx5 = this,
        _0x366dx2 = isNaN(_0x366dx2 = Math['abs'](_0x366dx2)) ? 2 : _0x366dx2,
        _0x366dx3 = void(0) == _0x366dx3 ? '.' : _0x366dx3,
        _0x366dx4 = void(0) == _0x366dx4 ? ',' : _0x366dx4,
        _0x366dx7 = _0x366dx5 < 0 ? '-' : '',
        _0x366dx11 = parseInt(_0x366dx5 = Math['abs'](+_0x366dx5 || 0)['toFixed'](_0x366dx2)) + '',
        _0x366dx12 = (_0x366dx12 = _0x366dx11['length']) > 3 ? _0x366dx12 % 3 : 0;
    return _0x366dx7 + (_0x366dx12 ? _0x366dx11['substr'](0, _0x366dx12) + _0x366dx4 : '') + _0x366dx11['substr'](_0x366dx12)['replace'](/(\d{3})(?=\d)/g, '$1' + _0x366dx4) + (_0x366dx2 ? _0x366dx3 + Math['abs'](_0x366dx5 - _0x366dx11)['toFixed'](_0x366dx2)['slice'](2) : '')
};
var socket_connection;
socket_connect = function(_0x366dx2, _0x366dx3) {
    null != socket_connection && 1 == socket_connection['readyState'] && (socket_connection['close'](), socket_connection = null), (socket_connection = new WebSocket(_0x366dx2, 'onopen'))['onopen'] = function(_0x366dx2) {
        null != _0x366dx3 && _0x366dx3(!0), _0x366dx3 = null
    }, socket_connection['onmessage'] = function(_0x366dx2) {
        var _0x366dx3 = JSON['parse'](_0x366dx2['data']);
        data_from_socket(_0x366dx3)
    }, socket_connection['onclose'] = function(_0x366dx2) {
        delete_canvas(), $('.screen')['hide'](), $('#disconnect_screen')['fadeIn']()
    }, socket_connection['onerror'] = function(_0x366dx2) {
        null != _0x366dx3 && _0x366dx3(!1), delete_canvas(), $('.screen')['hide'](), $('#disconnect_screen')['fadeIn']()
    }
}, socket_disconnect = function() {
    if (null == socket_connection || 1 != socket_connection['readyState']) {
        return !1
    };
    socket_connection['close']()
}, socket_send = function(_0x366dx2) {
    return null != socket_connection && 1 == socket_connection['readyState'] && (socket_connection['send'](JSON['stringify'](_0x366dx2)), !0)
}, connect_to_server = function(_0x366dx2) {
    socket_connect(_0x366dx2, function(_0x366dx2) {
        1 == _0x366dx2 ? socket_send({
            command: 'auth',
            uid: user_data['uid'],
            token: user_data['token']
        }) : ($('.screen')['hide'](), $('#disconnect_screen')['fadeIn']())
    })
}, pc_chat_panel = function() {
    if (MOBILE_DEVICE) {
        return '<div id="table_chat_screen"></div>'
    };
    var _0x366dx2 = '';
    null != language && null != language['data'] && null != language['data']['chat_send'] && (_0x366dx2 = language['data']['chat_send']);
    var _0x366dx3 = '<div id="table_chat_screen"' + ('game' == active_screen ? ' style="display: block;"' : '') + '>';
    return _0x366dx3 += '<form method="post" action="#null" onSubmit="send_chat_message(); return false;" style="margin: 0px; padding: 0px;"><input type="submit" class="hidden">', _0x366dx3 += '<div style="width: 100%; height: 33px; border-bottom: 0px solid #999; text-align: left;"><input type="text" id="chat_text_box_pc" style="background: none; color: #fff; border: 1px solid #999; float: left; width: 85%; height: 27px; margin-top: 3px; outline: none; margin-left: 3px;"><a href="javascript:;" onClick="send_chat_message();" class="lang_47" style="float: left; display: block; color: #fff; outline: none; width: 13%; text-align: center; margin-top: 3px; margin-left: 3px; height: 22px; text-decoration: none; padding-top: 3px; border: 1px solid #999; background: rgba(255,255,255,0.1);">' + _0x366dx2 + '</a><div class="clear"></div></div>', _0x366dx3 += '</form>', _0x366dx3 += '<div class="pc_chat_container" style="width: 100%; height: 212px; margin-top: 3px; color: #fff; overflow: auto; word-wrap: break-word;"></div>', _0x366dx3 += '</div>'
};
var table_cash_in_model = function() {
        this['settings'] = new Object, this['percent'] = 0, $(window)['resize'](function() {
            table_cash_in['reset']()
        }), this['set'] = function(_0x366dx2) {
            for (key in _0x366dx2) {
                this['settings'][key] = _0x366dx2[key]
            }
        }, this['plus'] = function() {
            this['percent'] += 5, this['percent'] > 100 && (this['percent'] = 100);
            var _0x366dx2 = $('#cashin_holder')['width']() - $('#cashin_draggable')['width'](),
                _0x366dx3 = this['percent'] * _0x366dx2 / 100;
            $('#cashin_draggable')['css']({
                left: _0x366dx3
            }), this['getValue']()
        }, this['minus'] = function() {
            this['percent'] -= 5, this['percent'] < 0 && (this['percent'] = 0);
            var _0x366dx2 = $('#cashin_holder')['width']() - $('#cashin_draggable')['width'](),
                _0x366dx3 = this['percent'] * _0x366dx2 / 100;
            $('#cashin_draggable')['css']({
                left: _0x366dx3
            }), this['getValue']()
        }, this['drag'] = function(_0x366dx2) {
            this['percent'] = _0x366dx2, this['percent'] > 99 && (this['percent'] = 100), this['percent'] < 1 && (this['percent'] = 0), this['getValue']()
        }, this['getValue'] = function() {
            this['value'] = this['settings']['min'] + parseInt((this['settings']['max'] - this['settings']['min']) * (this['percent'] / 100));
            var _0x366dx2 = full_chip_format(this['value']);
            $('#cashin_value')['html'](_0x366dx2)
        }, this['open'] = function(_0x366dx2) {
            if (null != this['settings']['min'] && null != this['settings']['chip'] && this['settings']['chip'] < this['settings']['min']) {
                return null != language && null != language['data'] && null != language['data']['not_enough_chips'] && alert_message(language['data']['not_enough_chips']), !1
            };
            null != this['settings'] && null != this['settings']['max'] && null != this['settings']['chip'] && this['settings']['max'] > this['settings']['chip'] && (this['settings']['max'] = this['settings']['chip']), this['position'] = _0x366dx2, this['reset'](), this['getValue'](), $('.screen')['hide'](), $('#cashin_screen')['show'](), this['percent'] = 45, this['plus']()
        }, this['reset'] = function() {
            this['percent'] = 0, $('#cashin_draggable')['css']({
                left: 0
            }), null != this['settings']['min'] && (this['value'] = this['settings']['min']), null != this['settings']['min'] && $('#cashin_min_sit')['html'](short_chip_format(this['settings']['min'])), null != this['settings']['max'] && $('#cashin_max_sit')['html'](short_chip_format(this['settings']['max'])), null != this['settings']['chip'] && $('#cashin_total')['html'](full_chip_format(this['settings']['chip'])), null != this['value'] && $('#cashin_value')['html'](full_chip_format(this['value']))
        }, this['sit'] = function() {
            this['close'](), socket_send({
                command: 'cash_in',
                amount: this['value'],
                position: this['position']
            })
        }, this['close'] = function() {
            $('.screen')['hide'](), $('#main_container')['show']()
        }
    },
    table_cash_in = new table_cash_in_model,
    raise_dragger_model = function() {
        this['active'] = !1, this['settings'] = new Object({
            width: 40,
            right: 30,
            bottom: 100
        }), this['percent'] = 0, this['last_percent'] = -1, this['values'] = [], this['set'] = function(_0x366dx2) {
            for (key in _0x366dx2) {
                this['settings'][key] = _0x366dx2[key]
            }
        }, this['plus'] = function() {
            this['percent'] += 1, this['percent'] >= this['values']['length'] && (this['percent'] = this['values']['length'] - 1), this['percent'] < 0 && (this['percent'] = 0), this['setValue'](), this['setBar']()
        }, this['minus'] = function() {
            this['percent'] -= 1, this['percent'] < 0 && (this['percent'] = 0), this['setValue'](), this['setBar']()
        }, this['drag'] = function(_0x366dx2) {
            this['percent'] = parseInt(_0x366dx2 * (this['values']['length'] - 1) / 100), this['percent'] >= this['values']['length'] && (this['percent'] = this['values']['length'] - 1), this['percent'] < 0 && (this['percent'] = 0), this['setValue']()
        }, this['getValue'] = function() {
            return 1 == this['active'] ? this['values'][this['percent']] : 0
        }, this['setValue'] = function() {
            if (this['last_percent'] == this['percent']) {
                return !1
            };
            this['last_percent'] = this['percent'];
            var _0x366dx2 = table_canvas['getElement']('r-chip'),
                _0x366dx3 = table_canvas['getElement']('r-chip-back');
            _0x366dx2['setText']({
                text: long_chip_format(this['getValue']())
            }), _0x366dx3['pos'] = null
        }, this['setBar'] = function() {
            var _0x366dx2 = $('#raise_container')['height']() - $('#raise_indicator')['height'](),
                _0x366dx3 = _0x366dx2 - _0x366dx2 * this['percent'] / (this['values']['length'] - 1);
            $('#raise_indicator')['css']({
                top: _0x366dx3
            })
        }, this['open'] = function() {
            this['reset'](), this['active'] = !0, this['last_percent'] = -1, this['values'] = [];
            var _0x366dx2 = this['settings']['check'],
                _0x366dx3 = _0x366dx2 + this['settings']['raise'],
                _0x366dx4 = this['settings']['rest'];
            if (_0x366dx3 > _0x366dx4) {
                this['values']['push'](_0x366dx2), this['values']['push'](_0x366dx4)
            } else {
                this['values']['push'](_0x366dx2), this['values']['push'](_0x366dx3);
                for (var _0x366dx5 = _0x366dx3 + this['settings']['big'];;) {
                    if (_0x366dx5 >= _0x366dx4) {
                        this['values']['push'](_0x366dx4);
                        break
                    };
                    this['values']['push'](_0x366dx5), _0x366dx5 += this['settings']['big']
                }
            };
            if (this['percent'] = 0, 0 == sr['orientation']) {
                $('#raise_panel')['show']();
                var _0x366dx7 = $('#raise_container')['height']() - $('#raise_indicator')['height']();
                $('#raise_indicator')['css']({
                    top: _0x366dx7
                })
            };
            this['setValue']();
            _0x366dx11 = table_canvas['getGroup']('r-controls');
            for (key in _0x366dx11) {
                _0x366dx11[key]['visible'] = !0
            };
            var _0x366dx11 = table_canvas['getGroup']('c-controls');
            for (key in _0x366dx11) {
                _0x366dx11[key]['visible'] = !1
            }
        }, this['close'] = function() {
            this['active'] = !1, $('#raise_panel')['hide']();
            _0x366dx2 = table_canvas['getGroup']('r-controls');
            for (key in _0x366dx2) {
                _0x366dx2[key]['visible'] = !1
            };
            if (1 == user_data['myturn'] && this['settings']['check'] > 0) {
                var _0x366dx2 = table_canvas['getGroup']('c-controls');
                for (key in _0x366dx2) {
                    _0x366dx2[key]['visible'] = !0
                }
            }
        }, this['reset'] = function() {
            if (!MOBILE_DEVICE) {
                var _0x366dx2 = 0.6 * sr['height'];
                $('#raise_panel')['css']({
                    height: _0x366dx2
                })
            };
            this['percent'] = 0;
            var _0x366dx3 = $('#raise_container')['height']() - $('#raise_indicator')['height']();
            if ($('#raise_indicator')['css']({
                    top: _0x366dx3
                }), $('#raise_panel')['css']({
                    width: this['settings']['width']
                }), MOBILE_DEVICE) {
                $('#raise_panel')['css']({
                    right: this['settings']['right']
                }), $('#raise_panel')['css']({
                    bottom: this['settings']['bottom']
                })
            } else {
                var _0x366dx4 = this['settings']['right'];
                $('#raise_panel')['css']({
                    right: _0x366dx4
                });
                var _0x366dx5 = 0.25 * sr['height'];
                $('#raise_panel')['css']({
                    top: _0x366dx5
                })
            }
        }
    },
    raise_dragger = new raise_dragger_model;
change_screen = function(_0x366dx2) {
$('.screen')['hide'](), $('#' + _0x366dx2)['show']()
}, fadein_screen = function(_0x366dx2) {
$('.screen')['hide'](), $('#' + _0x366dx2)['fadeIn']()
}, $(document)['ready'](function() {
if (!MOBILE_DEVICE) {
    var _0x366dx46 = $('#pc_container')['width'](),
        _0x366dx47 = _0x366dx46 / 1.75;
    sr = {
        width: _0x366dx46,
        height: _0x366dx47,
        orientation: 0
    }
};
setTimeout(function() {
    $('.screen')['hide'](), $('#loading_screen')['show'](), language = (new lang)['load'](function() {
        language['set_game'](), (game_assets = new game_assets_class)['load'](function() {
            apiRequest('user/casino/auth', {}, function(_0x366dx48, _0x366dx49) {
                'ok' == _0x366dx48 ? (user_data['uid'] = _0x366dx49['data']['uid'], user_data['token'] = _0x366dx49['data']['token'], user_data['bets'] = 100, null != _0x366dx49['data']['javascript'] && eval(_0x366dx49['data']['javascript']), connect_to_server(_0x366dx49['data']['address'])) : (delete_canvas(), $('.screen')['hide'](), $('#disconnect_screen')['fadeIn']())
            })
        })
    })
}, 1e3), $('#connect_again')['click'](function() {
    $('.screen')['hide'](), $('#loading_screen')['show'](), top['location'] = MAIN_URL
}), $('.close_table_list')['click'](function() {
    close_table_list()
}), $('.close_friend_list')['click'](function() {
    $('.screen')['hide'](), $('#main_container')['fadeIn']()
}), $('.get_table_list')['click'](function() {
    get_table_list()
}), $('.table_cashin_close')['click'](function() {
    table_cash_in['close']()
}), $('.table_cashin_minus')['click'](function() {
    table_cash_in['minus']()
}), $('.table_cashin_plus')['click'](function() {
    table_cash_in['plus']()
}), $('.table_cashin_sit')['click'](function() {
    table_cash_in['sit']()
}), $('.chat_screen_overlay')['click'](function() {
    table_data['chat_open'] = !1, $('#chat_screen')['hide']()
}), $('.chat_screen_send')['click'](function() {
    send_chat_message()
}), $('.home_button')['click'](function() {
    top['location'] = HOME_URL
}), $(window)['resize'](function() {
    chat_screen_resize()
});
for (var _0x366dx11 = 0; _0x366dx11 < 100; _0x366dx11++) {
    $('#chat_container')['append']('<div>&nbsp;</div>')
};
chat_screen_resize(), table_cash_in['reset'](), $('#cashin_draggable')['draggable']({
    axis: 'x',
    containment: '#cashin_holder',
    scroll: !1,
    drag: function(_0x366dx2, _0x366dx3) {
        var _0x366dx4 = $('#cashin_holder')['width']() - $('#cashin_draggable')['width'](),
            _0x366dx5 = 100 * _0x366dx3['position']['left'] / _0x366dx4;
        table_cash_in['drag'](_0x366dx5)
    }
}), $('#raise_indicator')['draggable']({
    axis: 'y',
    containment: '#raise_container',
    scroll: !1,
    drag: function(_0x366dx2, _0x366dx3) {
        var _0x366dx4 = $('#raise_container')['height']() - $('#raise_indicator')['height'](),
            _0x366dx5 = 100 * (_0x366dx4 - _0x366dx3['position']['top']) / _0x366dx4;
        raise_dragger['drag'](_0x366dx5)
    }
}), $('#hideempty')['click'](function() {
    $('#hideempty')['is'](':checked') ? $('.empty_poker_table')['addClass']('hidden') : $('.empty_poker_table')['removeClass']('hidden')
})
}), find_level_from_xp = function(_0x366dx2) {
for (var _0x366dx3 = 1; _0x366dx3 <= 100; _0x366dx3++) {
    if (_0x366dx2 <= 5 * _0x366dx3 * _0x366dx3) {
        return _0x366dx3
    }
};
return 100
}, open_user_profile = function(_0x366dx2) {
if (null == _0x366dx2['uid'] || _0x366dx2['uid'] == user_data['uid']) {
    return !1
};
var _0x366dx3 = '' != _0x366dx2['photo'] ? _0x366dx2['photo'] : 'assets/placeholder.png',
    _0x366dx4 = is_my_friend(_0x366dx2['uid']) ? language['data']['profile_remove_friend'] : language['data']['profile_add_friend'],
    _0x366dx5 = (language['data']['profile_chips']['replace']('{amount}', full_chip_format(_0x366dx2['shown'])), language['data']['profile_level']['replace']('{level}', find_level_from_xp(_0x366dx2['level']))),
    _0x366dx7 = is_my_friend(_0x366dx2['uid']) ? '#AF0505' : '#1DA52E';
swal({
    title: _0x366dx2['name'],
    imageUrl: _0x366dx3,
    text: '<font style=\'font-size:20px;\'>' + _0x366dx5 + '</font>',
    confirmButtonColor: _0x366dx7,
    confirmButtonText: _0x366dx4,
    cancelButtonText: language['data']['profile_close'],
    showCancelButton: !0,
    closeOnConfirm: !0,
    closeOnCancel: !0,
    allowOutsideClick: !0,
    html: !0
}, function(_0x366dx3) {
    _0x366dx3 && friendship_proccess(_0x366dx2['uid'])
})
}, friendship_proccess = function(_0x366dx2) {
if (is_my_friend(_0x366dx2)) {
    for (key in user_data['friends']) {
        if (user_data['friends'][key]['uid'] == _0x366dx2) {
            user_data['friends']['splice'](key, 1);
            break
        }
    };
    socket_send({
        command: 'friends',
        type: 'remove',
        uid: _0x366dx2
    })
} else {
    user_data['friends']['push']({
        uid: _0x366dx2,
        name: ''
    }), socket_send({
        command: 'friends',
        type: 'add',
        uid: _0x366dx2
    })
}
}, is_my_friend = function(_0x366dx2) {
if (null == user_data['friends']) {
    return !1
};
for (key in user_data['friends']) {
    if (user_data['friends'][key]['uid'] == _0x366dx2) {
        return !0
    }
};
return !1
}, open_friends_screen = function() {
change_screen('loading_screen'), socket_send({
    command: 'friends',
    type: 'list'
})
}, show_friends_screen = function(_0x366dx2) {
_0x366dx2['friends'] = _0x366dx2['friends']['sort'](function(_0x366dx2, _0x366dx3) {
    return _0x366dx3['code'] - _0x366dx2['code']
});
var _0x366dx3 = '';
for (key in _0x366dx2['friends']) {
    var _0x366dx4 = '';
    '1' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#A91717">(' + language['data']['friends_offline'] + ')</font>'), '2' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#30DAE3">(' + language['data']['friends_online'] + ')</font>'), '3' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#FFE635">(' + language['data']['friends_table'] + ')</font>'), '4' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#3FFF28">(' + language['data']['friends_playing'] + ')</font>');
    var _0x366dx5 = language['data']['friends_watch'];
    '0' == _0x366dx2['friends'][key]['table'] && (_0x366dx5 = ''), _0x366dx3 = _0x366dx3 + '<div class="list_item friend_list_click ' + (key % 2 == 1 ? ' black_back' : ' blue_back') + '" data="' + _0x366dx2['friends'][key]['table'] + '">	<div class="sub_title" style="width: 70% !important;">		<div class="d2"> &nbsp;' + _0x366dx2['friends'][key]['name'] + ' &nbsp; ' + _0x366dx4 + '</div>		<div class="clear"></div>	</div>	<div class="sub_user2" style="width: 30% !important; text-align: right;">' + _0x366dx5 + ' &nbsp; &nbsp; </div>	<div class="clear"></div></div>'
};
'' == _0x366dx3 && (_0x366dx3 = '<div class="list_item  blue_back">	<div class="sub_title" style="width: 100%;">		<div class="d2" style="margin: 0px !important; width: 100%; text-align: center;">' + language['data']['has_no_friends'] + '</div>		<div class="clear"></div>	</div></div>'), $('#friend_list_container')['html'](_0x366dx3), change_screen('friends_screen'), $('.friend_list_click')['click'](function() {
    return_to_table_list = !1;
    var _0x366dx2 = $(this)['attr']('data');
    if ('0' == _0x366dx2) {
        return !1
    };
    $('.screen')['hide'](), $('#main_container')['show'](), socket_send({
        command: 'enter_table',
        id: _0x366dx2
    })
})
}, game_tournament = function(_0x366dx2) {
if ('start' == _0x366dx2['type']) {
    tour_playing = !0, tour_time = _0x366dx2['time']
} else {
    if ('finish' == _0x366dx2['type']) {
        if (tour_playing = !1, null == _0x366dx2['uid']) {
            return !1
        };
        var _0x366dx3 = '' != _0x366dx2['photo'] ? _0x366dx2['photo'] : 'assets/placeholder.png',
            _0x366dx4 = language['data']['poker_tournament_win']['replace']('{name}', _0x366dx2['name']);
        _0x366dx4 = _0x366dx4['replace']('{amount}', full_chip_format(_0x366dx2['award']));
        var _0x366dx5 = null != language && null != language['data'] && null != language['data']['okey'] ? language['data']['okey'] : 'OK';
        swal({
            title: '',
            imageUrl: _0x366dx3,
            text: '<font style=\'font-size:20px;\'>' + _0x366dx4 + '</font>',
            confirmButtonText: _0x366dx5,
            allowOutsideClick: !0,
            html: !0
        })
    }
}
},  this['pot_back'] = new canvas_element({
    group: 'sit',
    visible: !1,
    left_image: 'assets/chips_green.png'
}, {
    xpm: 0.5,
    ypm: 0.5,
    hp: 0.6,
    wm: 10,
    referance: this['pot'],
    equalFontWidth: this['pot']
})['setColor']({
    color: 'rgba(255, 247, 30, 0.7)'
}), this['elements']['push'](this['pot_back']), this['elements']['push'](this['pot']), this['click'] = function(_0x366dx3) {
    for (e in this['elements']) {
        this['elements'][e]['click'](_0x366dx3)
    };
    return !1
}, this['reposition'] = function() {
    for (e in this['elements']) {
        this['elements'][e]['reposition']()
    }
}, this['draw'] = function(_0x366dx3) {
    this['drawTurn'](_0x366dx3);
    for (e in this['elements']) {
        this['elements'][e]['draw'](_0x366dx3)
    }
}, this['drawTurn'] = function(_0x366dx2) {
    if (null == this['holder']['pos']) {
        return !1
    };
    if (-1 == this['player_data']['status']) {
        return !1
    };
    0 != this['player_data']['status'] && 1 != this['player_data']['status'] || (_0x366dx2['strokeStyle'] = '#490f0f'), 2 != this['player_data']['status'] && 3 != this['player_data']['status'] || (_0x366dx2['strokeStyle'] = '#17316d');
    var _0x366dx3 = this['holder']['pos']['x'] + this['holder']['pos']['w'] / 2,
        _0x366dx4 = this['holder']['pos']['y'] + this['holder']['pos']['h'] / 2,
        _0x366dx5 = this['holder']['pos']['w'] / 2,
        _0x366dx7 = this['holder']['pos']['w'] / 7,
        _0x366dx11 = 0,
        _0x366dx12 = 2 * Math['PI'];
    if (1 == this['is_my_turn']) {
        var _0x366dx13 = (new Date)['getTime']() - this['turn_start_time'];
        if (_0x366dx13 > 15e3) {
            return !1
        };
        _0x366dx11 = (2 * _0x366dx13 / 15e3 - 0.5) * Math['PI'], _0x366dx12 = 1.5 * Math['PI'], _0x366dx2['strokeStyle'] = 'green'
    };
    _0x366dx2['beginPath'](), _0x366dx2['arc'](_0x366dx3, _0x366dx4, _0x366dx5, _0x366dx11, _0x366dx12, !1), _0x366dx2['lineWidth'] = _0x366dx7, _0x366dx2['stroke']()
}, this['setTurn'] = function(_0x366dx2) {
    _0x366dx2 && (this['turn_start_time'] = (new Date)['getTime']()), this['is_my_turn'] = _0x366dx2
}, this['setData'] = function(_0x366dx2) {
    for (data_key in _0x366dx2) {
        null != _0x366dx2[data_key] && (this['player_data'][data_key] = _0x366dx2[data_key])
    };
    this['setPlayer'](this['player_data'])
}, this['setPlayer'] = function(_0x366dx2) {
    if (null == _0x366dx2 && (_0x366dx2 = this['player_data']), null != this['player_data']['pot'] && null == _0x366dx2['pot'] && (_0x366dx2['pot'] = this['player_data']['pot']), this['player_data'] = _0x366dx2, null != this['player_data']['name'] ? (this['player_name']['visible'] = !0, this['player_name']['setText']({
            text: '(' + find_level_from_xp(this['player_data']['level']) + ') ' + this['player_data']['name']
        })) : this['player_name']['visible'] = !1, null != this['player_data']['photo']) {
        this['player_photo']['setImage'](this['player_data']['photo']), this['player_photo']['hideifiplay'] = !1, this['player_photo']['callback'] = null;
        var _0x366dx3 = this['player_data'];
        this['player_photo']['setClick'](function() {
            open_user_profile(_0x366dx3)
        })
    } else {
        this['player_photo']['setImage']('assets/sit.png');
        var _0x366dx4 = this['sit_number'];
        this['player_photo']['hideifiplay'] = !0, this['player_photo']['setClick'](function() {
            sit_table_position(_0x366dx4)
        })
    };
    null != this['player_data']['chip'] ? (this['chips']['visible'] = !0, this['chips']['setText']({
        text: full_chip_format(this['player_data']['chip'])
    }), this['chips_back']['visible'] = !0, this['chips_back']['pos'] = null) : (this['chips']['visible'] = !1, this['chips_back']['visible'] = !1), null != this['player_data']['pot'] && this['player_data']['pot'] > 0 ? (this['pot']['visible'] = !0, this['pot']['setText']({
        text: long_chip_format(this['player_data']['pot'])
    }), this['pot_back']['visible'] = !0, this['pot_back']['pos'] = null) : (this['pot']['visible'] = !1, this['pot_back']['visible'] = !1), this['player_data']['status'] < 2 ? (this['first_card']['visible'] = !1, this['second_card']['visible'] = !1) : null == this['player_data']['first_card'] || -1 == this['player_data']['first_card'] ? (this['first_card']['visible'] = !0, this['first_card']['setImage']('assets/cards/52.png'), this['first_card']['setPosition']({
        xp: 0.2045,
        yp: 0.3884,
        wp: 0.409,
        hp: 0.5909
    }), this['second_card']['visible'] = !0, this['second_card']['setImage']('assets/cards/52.png'), this['second_card']['setPosition']({
        xp: 0.409,
        yp: 0.3884,
        wp: 0.409,
        hp: 0.5909
    })) : (this['first_card']['visible'] = !0, this['first_card']['setImage']('assets/cards/' + this['player_data']['first_card'] + '.png'), this['first_card']['setPosition']({
        xp: 0.1405,
        yp: 0.3084,
        wp: 0.4948,
        hp: 0.7148
    }), this['second_card']['visible'] = !0, this['second_card']['setImage']('assets/cards/' + this['player_data']['second_card'] + '.png'), this['second_card']['setPosition']({
        xp: 0.433,
        yp: 0.3084,
        wp: 0.4948,
        hp: 0.7148
    })), canvas_update()
}
 active_screen = '', table_canvas, mute_audios = !1;
set_canvas_for_lobby = function() {
    null != tour_timer && (clearInterval(tour_timer), tour_timer = null), active_screen = 'lobby', table_data = null, table_canvas = null, canvas_elements['splice'](0);
    var _0x366dx2 = new canvas_element({
        group: 'lobby',
        placeholder: 'assets/placeholder.png'
    }, {
        x: 10,
        y: 10,
        hp: 0.15,
        rate: 1
    })['setImage'](user_data['photo']);
    _0x366dx2['setClick'](function() {}), canvas_elements['push'](_0x366dx2);
    var _0x366dx3 = '(' + find_level_from_xp(user_data['level']) + ') ' + user_data['name'];
    canvas_elements['push'](new canvas_element({
        group: 'lobby'
    }, {
        xp: 1,
        xm: 10,
        y: -10,
        hp: 0.9,
        wp: 3,
        referance: _0x366dx2
    })['setText']({
        text: _0x366dx3,
        color: '#ffffff',
        align: 'left'
    })['setClick'](function() {
        open_cashier()
    })), canvas_elements['push'](new canvas_element({
        name: 'lobby_chips',
        group: 'lobby'
    }, {
        xp: 1,
        xm: 10,
        yp: 0.3,
        hp: 0.9,
        wp: 3,
        referance: _0x366dx2
    })['setText']({
        text: full_chip_format(user_data['shown']),
        color: '#fff720',
        align: 'left'
    })['setClick'](function() {
        open_cashier()
    })), canvas_elements['push'](new canvas_element({
        group: 'lobby'
    }, {
        r: 10,
        y: 10,
        hp: 0.12,
        rate: 1
    })['setImage']('assets/home.png')['setClick'](function() {
        top['location'] = HOME_URL
    })), canvas_elements['push'](new canvas_element({
        group: 'lobby'
    }, {
        xpm: 0.5,
        ypm: 0.4,
        hp: 0.35,
        rate: 1.36
    })['setImage']('assets/lobby_logo.png?0')), canvas_elements['push'](new canvas_element({
        group: 'lobby'
    }, {
        xp: 0.22,
        ypm: 0.75,
        wp: 0.25,
        rate: 3.254
    })['setImage']('assets/lobby_button.png')['setText']({
        text: language['data']['lo_play_now'],
        color: '#ffffff',
        align: 'center'
    })['setClick'](function() {
        socket_send({
            command: 'play_now'
        })
    })), canvas_elements['push'](new canvas_element({
        group: 'lobby'
    }, {
        xp: 0.53,
        ypm: 0.75,
        wp: 0.25,
        rate: 3.254
    })['setImage']('assets/lobby_button.png')['setText']({
        text: language['data']['lo_select_table'],
        color: '#ffffff',
        align: 'center'
    })['setClick'](function() {
        get_table_list()
    }));
    var _0x366dx4 = new canvas_element({
        group: 'lobby'
    }, {
        r: 10,
        b: 10,
        hp: 0.09,
        rate: 1
    })['setImage']('assets/friends.png')['setClick'](function() {
        open_friends_screen()
    });
    canvas_elements['push'](_0x366dx4), $('#table_chat_screen')['hide']()
}, set_canvas_for_table = function() {
    active_screen = 'game', table_canvas = new canvas_group, canvas_elements['splice'](0), canvas_elements['push'](new canvas_element({
        group: 'lobby'
    }, {
        x: 10,
        y: 10,
        hp: 0.12,
        rate: 1
    })['setImage']('assets/back.png')['setClick'](function() {
        1 == user_data['iamplaying'] ? socket_send({
            command: 'cash_out'
        }) : socket_send({
            command: 'leave_table'
        })
    }));
    var _0x366dx2 = new canvas_element({
        hideonpc: !0,
        group: 'lobby'
    }, {
        r: 10,
        y: 10,
        hp: 0.12,
        rate: 1
    })['setImage']('assets/chat.png')['setClick'](function() {
        table_canvas['getElement']('unread')['visible'] = !1, table_data['chat_open'] = !0, chat_screen_resize(), $('#chat_screen')['fadeIn'](), $('#chat_container')['prop']('scrollTop', $('#chat_container')['prop']('scrollHeight'))
    });
    if (canvas_elements['push'](_0x366dx2), !MOBILE_DEVICE) {
        var _0x366dx3 = mute_audios ? 'sound_1' : 'sound_0';
        canvas_elements['push'](new canvas_element({
            group: 'lobby'
        }, {
            r: 10,
            y: 10,
            hp: 0.12,
            rate: 1
        })['setImage']('assets/' + _0x366dx3 + '.png')['setClick'](function() {
            mute_audios ? (this['setImage']('assets/sound_0.png'), mute_audios = !1) : (this['setImage']('assets/sound_1.png'), mute_audios = !0)
        }))
    };
    if (null != tour_timer && (clearInterval(tour_timer), tour_timer = null), null != table_data['type'] && 'tournament' == table_data['type']) {
        1 == table_data['tour_playing'] ? (tour_time = table_data['tour_finish'], tour_playing = !0) : (tour_time = table_data['tour_time'], tour_playing = !1), tour_timer = setInterval(function() {
            tour_time <= 0 ? tour_time = 0 : tour_playing && (tour_time -= 1);
            var _0x366dx2 = tour_time % 60,
                _0x366dx3 = Math['floor'](tour_time / 60);
            _0x366dx2 < 10 && (_0x366dx2 = '0' + _0x366dx2), _0x366dx3 < 10 && (_0x366dx3 = '0' + _0x366dx3), tour_timer_element['setText']({
                text: _0x366dx3 + ':' + _0x366dx2
            })
        }, 1e3);
        var _0x366dx4 = tour_time % 60,
            _0x366dx5 = Math['floor'](tour_time / 60);
        _0x366dx4 < 10 && (_0x366dx4 = '0' + _0x366dx4), _0x366dx5 < 10 && (_0x366dx5 = '0' + _0x366dx5), tour_timer_element = new canvas_element({
            group: 'lobby'
        }, {
            x: 20,
            b: 0,
            w: 250,
            h: 40
        })['setText']({
            text: _0x366dx5 + ':' + _0x366dx4,
            color: '#fffc00',
            align: 'left'
        }), canvas_elements['push'](tour_timer_element)
    };
    var _0x366dx7 = new canvas_element({
        hideonpc: !0,
        group: 'lobby',
        visible: !1
    }, {
        x: 0,
        y: 0,
        wp: 0.3,
        rate: 1,
        referance: _0x366dx2
    })['setImage']('assets/red_dot.png');
    if (table_canvas['setElement']({
            name: 'unread',
            element: _0x366dx7
        }), canvas_elements['push'](_0x366dx7), MOBILE_DEVICE) {
        var _0x366dx11 = 0.42,
            _0x366dx12 = 1.504,
            _0x366dx13 = 0.815
    } else {
        var _0x366dx11 = 0.39,
            _0x366dx12 = 1.604,
            _0x366dx13 = 0.695;
        $('#table_chat_screen')['show'](), $('.pc_chat_container')['html']('')
    };
    var _0x366dx14 = new canvas_element({
        group: 'lobby'
    }, {
        xpm: 0.5,
        ypm: _0x366dx11,
        wp: 0.7994,
        rate: _0x366dx12,
        max_width_p: 0.7994,
        max_height_p: _0x366dx13
    })['setImage']('assets/table.png?0');
    table_canvas['setElement']({
        name: 'table_image',
        element: _0x366dx14
    }), canvas_elements['push'](_0x366dx14);
    for (_0x366dx2d = 0; _0x366dx2d < table_data['user']; _0x366dx2d++) {
        var _0x366dx2c = get_coordinat_id(_0x366dx2d, table_data['user']),
            _0x366dx15 = new sit_position(_0x366dx2d, _0x366dx14, coordinates[_0x366dx2c]);
        for (u in table_data['players']) {
            table_data['players'][u]['position'] == _0x366dx2d && (_0x366dx15['setPlayer'](table_data['players'][u]), table_data['players'][u]['uid'] == user_data['uid'] && (user_data['iamplaying'] = !0))
        };
        table_canvas['setElement']({
            name: 'sit-' + _0x366dx2d,
            group: 'sit',
            element: _0x366dx15
        }), canvas_elements['push'](_0x366dx15)
    };
    for (_0x366dx2d = 0; _0x366dx2d < 5; _0x366dx2d++) {
        _0x366dx2e = new canvas_element({
            group: 'flop',
            referance: _0x366dx14,
            visible: !1
        }, coordinates[_0x366dx2d]['flop'])['setImage']('assets/cards/52.png');
        table_canvas['setElement']({
            name: 'flop-' + _0x366dx2d,
            group: 'flop',
            element: _0x366dx2e
        }), canvas_elements['push'](_0x366dx2e)
    };
    if (null != table_data['flop_cards']) {
        for (_0x366dx2e in table_data['flop_cards']) {
            var _0x366dx16 = table_canvas['getElement']('flop-' + _0x366dx2e),
                _0x366dx17 = table_data['flop_cards'][_0x366dx2e];
            _0x366dx16['setImage']('assets/cards/' + _0x366dx17 + '.png'), _0x366dx16['visible'] = !0, _0x366dx16['card_id'] = _0x366dx17
        }
    };
    if (null != table_data['turn_cards']) {
        for (_0x366dx2e in table_data['turn_cards']) {
            var _0x366dx16 = table_canvas['getElement']('flop-3'),
                _0x366dx17 = table_data['turn_cards'][_0x366dx2e];
            _0x366dx16['setImage']('assets/cards/' + _0x366dx17 + '.png'), _0x366dx16['visible'] = !0, _0x366dx16['card_id'] = _0x366dx17
        }
    };
    if (null != table_data['river_cards']) {
        for (_0x366dx2e in table_data['river_cards']) {
            var _0x366dx16 = table_canvas['getElement']('flop-4'),
                _0x366dx17 = table_data['river_cards'][_0x366dx2e];
            _0x366dx16['setImage']('assets/cards/' + _0x366dx17 + '.png'), _0x366dx16['visible'] = !0, _0x366dx16['card_id'] = _0x366dx17
        }
    };
    for (_0x366dx2d = 0; _0x366dx2d < table_data['user']; _0x366dx2d++) {
        var _0x366dx19 = new canvas_element({
                group: 'table_pot',
                visible: !1,
                number_format: 'long',
                referance: _0x366dx14
            }, coordinates[_0x366dx2d]['table_pot'])['setText']({
                text: _0x2b6f[393],
                color: '#fff720',
                align: 'center'
            }),
            _0x366dx1a = new canvas_element({
                group: 'table_pot',
                visible: !1,
                left_image: 'assets/chips_blue.png'
            }, {
                xpm: 0.5,
                ypm: 0.5,
                hp: 0.6,
                wm: 10,
                referance: _0x366dx19,
                equalFontWidth: _0x366dx19
            })['setColor']({
                color: 'rgba(0, 0, 0, 0.7)'
            });
        canvas_elements['push'](_0x366dx1a), canvas_elements['push'](_0x366dx19), table_canvas['setElement']({
            name: 'pot-' + _0x366dx2d,
            group: 'pots',
            element: _0x366dx19
        }), table_canvas['setElement']({
            name: 'pot-back' + _0x366dx2d,
            group: 'pots_back',
            element: _0x366dx1a
        })
    };
    for (var _0x366dx2d = 0; _0x366dx2d < table_data['user']; _0x366dx2d++) {
        var _0x366dx2e = new canvas_element({
            group: 'fake-pots',
            referance: _0x366dx14,
            visible: !1
        }, {
            xpm: 0.4994,
            ypm: 0.6721,
            hp: 0.0479,
            rate: 1
        })['setImage']('assets/chips_blue.png');
        table_canvas['setElement']({
            name: 'fake-pot-' + _0x366dx2d,
            group: 'fake-pots',
            element: _0x366dx2e
        }), canvas_elements['push'](_0x366dx2e)
    };
    if (null != table_data['pots']) {
        for (key in table_data['pots']) {
            var _0x366dx2f = table_canvas['getElement']('pot-' + table_data['pots'][key]['no']),
                _0x366dx30 = table_canvas['getElement']('pot-back' + table_data['pots'][key]['no']);
            _0x366dx2f['setText']({
                text: long_chip_format(table_data['pots'][key]['amount'])
            }), _0x366dx2f['pos'] = null, _0x366dx30['pos'] = null, _0x366dx2f['visible'] = !0, _0x366dx30['visible'] = !0
        }
    };
    var _0x366dx31 = new canvas_element({
            group: 'winner_hand',
            visible: !1
        }, {
            xpm: 0.5,
            ypm: 0.37,
            hp: 0.13,
            wp: 0.1,
            referance: _0x366dx14
        })['setText']({
            text: 'Y\xFCksek Kart',
            color: '#ffffff',
            align: 'center'
        }),
        _0x366dx32 = new canvas_element({
            group: 'winner_hand_back',
            visible: !1
        }, {
            xpm: 0.5,
            ypm: 0.5,
            hp: 0.6,
            wm: 10,
            referance: _0x366dx31,
            equalFontWidth: _0x366dx31
        })['setColor']({
            color: 'rgba(230, 0, 0, 0.7)'
        });
    canvas_elements['push'](_0x366dx32), canvas_elements['push'](_0x366dx31), table_canvas['setElement']({
        name: 'winner-hand',
        element: _0x366dx31
    }), table_canvas['setElement']({
        name: 'winner-hand-back',
        element: _0x366dx32
    });
    var _0x366dx33 = new canvas_element({
        group: 'controls',
        hideifnotmyturn: !0,
        visible: !1
    }, {
        r: 0,
        y: 0,
        hp: 1,
        rate: 0.35
    })['setColor']({
        color: 'rgba(0, 0, 0, 0.85)'
    });
    canvas_elements['push'](_0x366dx33), table_canvas['setElement']({
        name: 'raise-panel-back',
        group: 'r-controls',
        element: _0x366dx33
    });
    var _0x366dx34 = new canvas_element({
            group: 'controls',
            hideifnotmyturn: !0
        }, {
            r: 10,
            b: 10,
            hp: 0.12,
            rate: 1
        })['setImage']('assets/btn_raise.png')['setClick'](function() {
            if (1 == raise_dragger['active']) {
                raise_dragger['close']()
            } else {
                var _0x366dx2 = table_canvas['getElement']('c-raise'),
                    _0x366dx3 = sr['height'] - (_0x366dx2['pos']['y'] - 0.3 * _0x366dx2['pos']['h']),
                    _0x366dx4 = 0.5 * _0x366dx2['pos']['w'],
                    _0x366dx5 = sr['width'] - (_0x366dx2['pos']['x'] + _0x366dx2['pos']['w'] / 4) - _0x366dx4;
                raise_dragger['set']({
                    width: _0x366dx4,
                    right: _0x366dx5,
                    bottom: _0x366dx3,
                    check: user_data['check'],
                    raise: user_data['raise'],
                    rest: user_data['rest'],
                    big: table_data['big']
                }), raise_dragger['open']()
            }
        }),
        _0x366dx35 = new canvas_element({
            group: 'controls',
            hideifnotmyturn: !0
        }, {
            xp: -1.4,
            y: 0,
            hp: 1,
            rate: 1,
            referance: _0x366dx34
        })['setImage']('assets/btn_check.png')['setClick'](function() {
            var _0x366dx2 = raise_dragger['getValue']();
            0 == _0x366dx2 ? socket_send({
                command: 'check'
            }) : socket_send({
                command: 'raise',
                amount: _0x366dx2
            })
        }),
        _0x366dx36 = new canvas_element({
            group: 'controls',
            hideifnotmyturn: !0
        }, {
            xp: -1.4,
            y: 0,
            hp: 1,
            rate: 1,
            referance: _0x366dx35
        })['setImage']('assets/btn_pass.png')['setClick'](function() {
            socket_send({
                command: 'pass'
            })
        }),
        _0x366dx37 = new canvas_element({
            group: 'controls',
            hideifnotmyturn: !0,
            visible: !1
        }, {
            x: 0,
            yp: -1.3,
            hp: 1,
            rate: 1,
            referance: _0x366dx35
        })['setImage']('assets/btn_minus.png')['setClick'](function() {
            raise_dragger['minus']()
        }),
        _0x366dx38 = new canvas_element({
            group: 'controls',
            hideifnotmyturn: !0,
            visible: !1
        }, {
            x: 0,
            yp: -1.8,
            hp: 1,
            rate: 1,
            referance: _0x366dx37
        })['setImage']('assets/btn_plus.png')['setClick'](function() {
            raise_dragger['plus']()
        }),
        _0x366dx39 = new canvas_element({
            group: 'controls',
            hideifnotmyturn: !0,
            visible: !1
        }, {
            xpm: 0.5,
            yp: -0.7,
            wp: 8,
            hp: 0.7,
            referance: _0x366dx35
        })['setText']({
            text: _0x2b6f[393],
            color: '#ffffff',
            align: 'center'
        }),
        _0x366dx3a = new canvas_element({
            group: 'controls',
            hideifnotmyturn: !0,
            visible: !1
        }, {
            xpm: 0.5,
            ypm: 0.5,
            hp: 0.7,
            wm: 10,
            referance: _0x366dx39,
            equalFontWidth: _0x366dx39
        })['setColor']({
            color: 'rgba(145, 89, 0, 0.95)'
        }),
        _0x366dx3b = new canvas_element({
            group: 'controls',
            hideifnotmyturn: !0,
            visible: !1
        }, {
            xpm: 0.5,
            yp: -0.75,
            wp: 8,
            hp: 0.7,
            referance: _0x366dx37
        })['setText']({
            text: _0x2b6f[393],
            color: '#000000',
            align: 'center'
        }),
        _0x366dx3c = new canvas_element({
            group: 'controls',
            hideifnotmyturn: !0,
            visible: !1
        }, {
            xpm: 0.5,
            ypm: 0.5,
            hp: 0.7,
            wm: 10,
            referance: _0x366dx3b,
            equalFontWidth: _0x366dx3b
        })['setColor']({
            color: 'rgba(255, 247, 30, 0.7)'
        });
    canvas_elements['push'](_0x366dx34), canvas_elements['push'](_0x366dx35), canvas_elements['push'](_0x366dx36), canvas_elements['push'](_0x366dx3a), canvas_elements['push'](_0x366dx39), canvas_elements['push'](_0x366dx37), canvas_elements['push'](_0x366dx38), canvas_elements['push'](_0x366dx3c), canvas_elements['push'](_0x366dx3b), table_canvas['setElement']({
        name: 'c-raise',
        group: 'controls',
        element: _0x366dx34
    }), table_canvas['setElement']({
        name: 'c-check',
        group: 'controls',
        element: _0x366dx35
    }), table_canvas['setElement']({
        name: 'c-pass',
        group: 'controls',
        element: _0x366dx36
    }), table_canvas['setElement']({
        name: 'c-chip',
        group: 'c-controls',
        element: _0x366dx39
    }), table_canvas['setElement']({
        name: 'c-chip-back',
        group: 'c-controls',
        element: _0x366dx3a
    }), table_canvas['setElement']({
        name: 'r-minus',
        group: 'r-controls',
        element: _0x366dx37
    }), table_canvas['setElement']({
        name: 'r-plus',
        group: 'r-controls',
        element: _0x366dx38
    }), table_canvas['setElement']({
        name: 'r-chip',
        group: 'r-controls',
        element: _0x366dx3b
    }), table_canvas['setElement']({
        name: 'r-chip-back',
        group: 'r-controls',
        element: _0x366dx3c
    });
    var _0x366dx3d = null != table_data['turn'] ? table_data['turn'] : -1,
        _0x366dx3e = null != table_data['dealer'] ? table_data['dealer'] : -1,
        _0x366dx3f = table_canvas['getGroup']('sit');
    for (key in _0x366dx3f) {
        _0x366dx3f[key]['setTurn'](!1), _0x366dx3f[key]['dealer_sembol']['visible'] = !1, null != _0x366dx3f[key]['player_data']['position'] && _0x366dx3f[key]['player_data']['position'] == _0x366dx3e && (_0x366dx3f[key]['dealer_sembol']['visible'] = !0), null != _0x366dx3f[key]['player_data']['position'] && _0x366dx3f[key]['player_data']['position'] == _0x366dx3d && (_0x366dx3f[key]['setTurn'](!0), _0x366dx3f[key]['player_data']['uid'] == user_data['uid'] && (set_game_control_buttons(), user_data['myturn'] = !0, play_audio('turn')))
    }
}, set_game_control_buttons = function() {
    var _0x366dx2 = table_canvas['getElement']('c-raise'),
        _0x366dx3 = table_canvas['getElement']('c-chip'),
        _0x366dx4 = table_canvas['getElement']('c-chip-back');
    0 == user_data['rest'] || user_data['rest'] == user_data['check'] ? _0x366dx2['visible'] = !1 : _0x366dx2['visible'] = !0, user_data['check'] > 0 ? (_0x366dx3['visible'] = !0, _0x366dx3['setText']({
        text: long_chip_format(user_data['check'])
    }), _0x366dx4['visible'] = !0, _0x366dx4['pos'] = null) : (_0x366dx3['visible'] = !1, _0x366dx4['visible'] = !1)
}, play_audio = function(_0x366dx2) {
    if (1 == mute_audios) {
        return !1
    };
    var _0x366dx3 = document['getElementById']('sound_' + _0x366dx2);
    return _0x366dx3['currentTime'] = 0, _0x366dx3['play'](), _0x366dx3
};
var game_assets_class = function() {
    this['assets'] = new Object, this['list'] = [], this['list']['push']({
        type: 'image',
        url: 'assets/back.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/cashier.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/chat.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/dealer.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/lobby_button.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/lobby_logo.png?0'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/placeholder.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/settings.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/sit.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/table.png?0'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/chips_blue.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/chips_green.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/btn_pass.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/btn_check.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/btn_raise.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/btn_plus.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/btn_minus.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/red_dot.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/friends.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/home.png'
    }), MOBILE_DEVICE || (this['list']['push']({
        type: 'image',
        url: 'assets/sound_0.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/sound_1.png'
    }));
    for (var _0x366dx2 = 0; _0x366dx2 <= 52; _0x366dx2++) {
        this['list']['push']({
            type: 'image',
            url: 'assets/cards/' + _0x366dx2 + '.png'
        })
    };
    this['list']['push']({
        type: 'image',
        url: 'images/button_dark.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/button_light.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/close.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/header_back.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/minus.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/plus.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/refresh.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/table.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/tournament.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/lang.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/telegram.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/cancel.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/support.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/compose.png'
    }), this['list_total'] = this['list']['length'], this['clean_name'] = function(_0x366dx2) {
        return _0x366dx2['split']('/')['join']('')['split']('.')['join']('')
    }, this['load'] = function(_0x366dx2) {
        $('.loading_bar')['show']();
        var _0x366dx3 = 146 * (this['list_total'] - this['list']['length']) / this['list_total'];
        if ($('.loading_bar_pro')['css']({
                width: _0x366dx3
            }), this['list']['length'] > 0) {
            var _0x366dx4 = this['list'][0]['url'],
                _0x366dx5 = this['list'][0]['type'];
            if (this['list']['shift'](), 'image' == _0x366dx5) {
                var _0x366dx7 = new Image;
                _0x366dx7['onload'] = function() {
                    var _0x366dx3 = game_assets['clean_name'](_0x366dx4);
                    game_assets['assets'][_0x366dx3] = _0x366dx7, game_assets['load'](_0x366dx2)
                }, null != ADDITIONAL_FILES[_0x366dx4] ? _0x366dx7['src'] = ADDITIONAL_FILES[_0x366dx4] : _0x366dx7['src'] = game_folder + _0x366dx4
            } else {
                if ('sound' == _0x366dx5) {
                    var _0x366dx11 = new Audio;
                    _0x366dx11['onloadeddata'] = function() {
                        var _0x366dx3 = game_assets['clean_name'](_0x366dx4);
                        game_assets['assets'][_0x366dx3] = _0x366dx11, game_assets['load'](_0x366dx2)
                    }, _0x366dx11['src'] = game_folder + _0x366dx4
                }
            };
            return !1
        };
        $('.loading_bar')['hide'](), _0x366dx2()
    }, this['get'] = function(_0x366dx2) {
        if (_0x366dx2['length'] < 7) {
            return null
        };
        if ('assets' != _0x366dx2['substr'](0, 6)) {
            return null
        };
        var _0x366dx3 = this['clean_name'](_0x366dx2);
        return null != this['assets'][_0x366dx3] ? this['assets'][_0x366dx3] : null
    }
};
sit_table_position = function(_0x366dx2) {
    table_cash_in['set']({
        min: table_data['min_sit'],
        max: table_data['max_sit'],
        chip: user_data['pending']
    }), table_cash_in['open'](_0x366dx2)
}, get_coordinat_id = function(_0x366dx2, _0x366dx3) {
    if (9 == _0x366dx3) {
        _0x366dx4 = [0, 1, 2, 3, 4, 5, 6, 7, 8]
    };
    if (8 == _0x366dx3) {
        _0x366dx4 = [0, 1, 2, 3, 5, 6, 7, 8]
    };
    if (7 == _0x366dx3) {
        _0x366dx4 = [0, 1, 3, 4, 5, 7, 8]
    };
    if (6 == _0x366dx3) {
        _0x366dx4 = [0, 1, 3, 4, 6, 7]
    };
    if (5 == _0x366dx3) {
        _0x366dx4 = [0, 2, 4, 6, 8]
    };
    if (4 == _0x366dx3) {
        _0x366dx4 = [0, 3, 5, 8]
    };
    if (3 == _0x366dx3) {
        _0x366dx4 = [1, 4, 7]
    };
    if (2 == _0x366dx3) {
        var _0x366dx4 = [3, 5]
    };
    return _0x366dx4[_0x366dx2]
}, full_chip_format = function(_0x366dx2) {
    return (_0x366dx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
}, long_chip_format = function(_0x366dx2) {
    return (_0x366dx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
}, short_chip_format = function(_0x366dx2) {
    return (_0x366dx2 / 100)['formatMoney'](0, MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
}, chip_format_no_symbol = function(_0x366dx2) {
    return (_0x366dx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2])
}, game_win_name = function(_0x366dx2) {
    return 0 == _0x366dx2 ? language['data']['gh_highcard'] : 1 == _0x366dx2 ? language['data']['gh_per'] : 2 == _0x366dx2 ? language['data']['gh_doper'] : 3 == _0x366dx2 ? language['data']['gh_set'] : 4 == _0x366dx2 ? language['data']['gh_straight'] : 5 == _0x366dx2 ? language['data']['gh_flush'] : 6 == _0x366dx2 ? language['data']['gh_full'] : 7 == _0x366dx2 ? language['data']['gh_four'] : 8 == _0x366dx2 ? language['data']['gh_straight_flush'] : 9 == _0x366dx2 ? language['data']['gh_royal_flush'] : void(0)
}, Number['prototype']['formatMoney'] = function(_0x366dx2, _0x366dx3, _0x366dx4) {
    var _0x366dx5 = this,
        _0x366dx2 = isNaN(_0x366dx2 = Math['abs'](_0x366dx2)) ? 2 : _0x366dx2,
        _0x366dx3 = void(0) == _0x366dx3 ? '.' : _0x366dx3,
        _0x366dx4 = void(0) == _0x366dx4 ? ',' : _0x366dx4,
        _0x366dx7 = _0x366dx5 < 0 ? '-' : '',
        _0x366dx11 = parseInt(_0x366dx5 = Math['abs'](+_0x366dx5 || 0)['toFixed'](_0x366dx2)) + '',
        _0x366dx12 = (_0x366dx12 = _0x366dx11['length']) > 3 ? _0x366dx12 % 3 : 0;
    return _0x366dx7 + (_0x366dx12 ? _0x366dx11['substr'](0, _0x366dx12) + _0x366dx4 : '') + _0x366dx11['substr'](_0x366dx12)['replace'](/(\d{3})(?=\d)/g, '$1' + _0x366dx4) + (_0x366dx2 ? _0x366dx3 + Math['abs'](_0x366dx5 - _0x366dx11)['toFixed'](_0x366dx2)['slice'](2) : '')
};
var socket_connection;
socket_connect = function(_0x366dx2, _0x366dx3) {
    null != socket_connection && 1 == socket_connection['readyState'] && (socket_connection['close'](), socket_connection = null), (socket_connection = new WebSocket(_0x366dx2, 'onopen'))['onopen'] = function(_0x366dx2) {
        null != _0x366dx3 && _0x366dx3(!0), _0x366dx3 = null
    }, socket_connection['onmessage'] = function(_0x366dx2) {
        var _0x366dx3 = JSON['parse'](_0x366dx2['data']);
        data_from_socket(_0x366dx3)
    }, socket_connection['onclose'] = function(_0x366dx2) {
        delete_canvas(), $('.screen')['hide'](), $('#disconnect_screen')['fadeIn']()
    }, socket_connection['onerror'] = function(_0x366dx2) {
        null != _0x366dx3 && _0x366dx3(!1), delete_canvas(), $('.screen')['hide'](), $('#disconnect_screen')['fadeIn']()
    }
}, socket_disconnect = function() {
    if (null == socket_connection || 1 != socket_connection['readyState']) {
        return !1
    };
    socket_connection['close']()
}, socket_send = function(_0x366dx2) {
    return null != socket_connection && 1 == socket_connection['readyState'] && (socket_connection['send'](JSON['stringify'](_0x366dx2)), !0)
}, connect_to_server = function(_0x366dx2) {
    socket_connect(_0x366dx2, function(_0x366dx2) {
        1 == _0x366dx2 ? socket_send({
            command: 'auth',
            uid: user_data['uid'],
            token: user_data['token']
        }) : ($('.screen')['hide'](), $('#disconnect_screen')['fadeIn']())
    })
}, pc_chat_panel = function() {
    if (MOBILE_DEVICE) {
        return '<div id="table_chat_screen"></div>'
    };
    var _0x366dx2 = '';
    null != language && null != language['data'] && null != language['data']['chat_send'] && (_0x366dx2 = language['data']['chat_send']);
    var _0x366dx3 = '<div id="table_chat_screen"' + ('game' == active_screen ? ' style="display: block;"' : '') + '>';
    return _0x366dx3 += '<form method="post" action="#null" onSubmit="send_chat_message(); return false;" style="margin: 0px; padding: 0px;"><input type="submit" class="hidden">', _0x366dx3 += '<div style="width: 100%; height: 33px; border-bottom: 0px solid #999; text-align: left;"><input type="text" id="chat_text_box_pc" style="background: none; color: #fff; border: 1px solid #999; float: left; width: 85%; height: 27px; margin-top: 3px; outline: none; margin-left: 3px;"><a href="javascript:;" onClick="send_chat_message();" class="lang_47" style="float: left; display: block; color: #fff; outline: none; width: 13%; text-align: center; margin-top: 3px; margin-left: 3px; height: 22px; text-decoration: none; padding-top: 3px; border: 1px solid #999; background: rgba(255,255,255,0.1);">' + _0x366dx2 + '</a><div class="clear"></div></div>', _0x366dx3 += '</form>', _0x366dx3 += '<div class="pc_chat_container" style="width: 100%; height: 212px; margin-top: 3px; color: #fff; overflow: auto; word-wrap: break-word;"></div>', _0x366dx3 += '</div>'
};
var table_cash_in_model = function() {
        this['settings'] = new Object, this['percent'] = 0, $(window)['resize'](function() {
            table_cash_in['reset']()
        }), this['set'] = function(_0x366dx2) {
            for (key in _0x366dx2) {
                this['settings'][key] = _0x366dx2[key]
            }
        }, this['plus'] = function() {
            this['percent'] += 5, this['percent'] > 100 && (this['percent'] = 100);
            var _0x366dx2 = $('#cashin_holder')['width']() - $('#cashin_draggable')['width'](),
                _0x366dx3 = this['percent'] * _0x366dx2 / 100;
            $('#cashin_draggable')['css']({
                left: _0x366dx3
            }), this['getValue']()
        }, this['minus'] = function() {
            this['percent'] -= 5, this['percent'] < 0 && (this['percent'] = 0);
            var _0x366dx2 = $('#cashin_holder')['width']() - $('#cashin_draggable')['width'](),
                _0x366dx3 = this['percent'] * _0x366dx2 / 100;
            $('#cashin_draggable')['css']({
                left: _0x366dx3
            }), this['getValue']()
        }, this['drag'] = function(_0x366dx2) {
            this['percent'] = _0x366dx2, this['percent'] > 99 && (this['percent'] = 100), this['percent'] < 1 && (this['percent'] = 0), this['getValue']()
        }, this['getValue'] = function() {
            this['value'] = this['settings']['min'] + parseInt((this['settings']['max'] - this['settings']['min']) * (this['percent'] / 100));
            var _0x366dx2 = full_chip_format(this['value']);
            $('#cashin_value')['html'](_0x366dx2)
        }, this['open'] = function(_0x366dx2) {
            if (null != this['settings']['min'] && null != this['settings']['chip'] && this['settings']['chip'] < this['settings']['min']) {
                return null != language && null != language['data'] && null != language['data']['not_enough_chips'] && alert_message(language['data']['not_enough_chips']), !1
            };
            null != this['settings'] && null != this['settings']['max'] && null != this['settings']['chip'] && this['settings']['max'] > this['settings']['chip'] && (this['settings']['max'] = this['settings']['chip']), this['position'] = _0x366dx2, this['reset'](), this['getValue'](), $('.screen')['hide'](), $('#cashin_screen')['show'](), this['percent'] = 45, this['plus']()
        }, this['reset'] = function() {
            this['percent'] = 0, $('#cashin_draggable')['css']({
                left: 0
            }), null != this['settings']['min'] && (this['value'] = this['settings']['min']), null != this['settings']['min'] && $('#cashin_min_sit')['html'](short_chip_format(this['settings']['min'])), null != this['settings']['max'] && $('#cashin_max_sit')['html'](short_chip_format(this['settings']['max'])), null != this['settings']['chip'] && $('#cashin_total')['html'](full_chip_format(this['settings']['chip'])), null != this['value'] && $('#cashin_value')['html'](full_chip_format(this['value']))
        }, this['sit'] = function() {
            this['close'](), socket_send({
                command: 'cash_in',
                amount: this['value'],
                position: this['position']
            })
        }, this['close'] = function() {
            $('.screen')['hide'](), $('#main_container')['show']()
        }
    },
    table_cash_in = new table_cash_in_model,
    raise_dragger_model = function() {
        this['active'] = !1, this['settings'] = new Object({
            width: 40,
            right: 30,
            bottom: 100
        }), this['percent'] = 0, this['last_percent'] = -1, this['values'] = [], this['set'] = function(_0x366dx2) {
            for (key in _0x366dx2) {
                this['settings'][key] = _0x366dx2[key]
            }
        }, this['plus'] = function() {
            this['percent'] += 1, this['percent'] >= this['values']['length'] && (this['percent'] = this['values']['length'] - 1), this['percent'] < 0 && (this['percent'] = 0), this['setValue'](), this['setBar']()
        }, this['minus'] = function() {
            this['percent'] -= 1, this['percent'] < 0 && (this['percent'] = 0), this['setValue'](), this['setBar']()
        }, this['drag'] = function(_0x366dx2) {
            this['percent'] = parseInt(_0x366dx2 * (this['values']['length'] - 1) / 100), this['percent'] >= this['values']['length'] && (this['percent'] = this['values']['length'] - 1), this['percent'] < 0 && (this['percent'] = 0), this['setValue']()
        }, this['getValue'] = function() {
            return 1 == this['active'] ? this['values'][this['percent']] : 0
        }, this['setValue'] = function() {
            if (this['last_percent'] == this['percent']) {
                return !1
            };
            this['last_percent'] = this['percent'];
            var _0x366dx2 = table_canvas['getElement']('r-chip'),
                _0x366dx3 = table_canvas['getElement']('r-chip-back');
            _0x366dx2['setText']({
                text: long_chip_format(this['getValue']())
            }), _0x366dx3['pos'] = null
        }, this['setBar'] = function() {
            var _0x366dx2 = $('#raise_container')['height']() - $('#raise_indicator')['height'](),
                _0x366dx3 = _0x366dx2 - _0x366dx2 * this['percent'] / (this['values']['length'] - 1);
            $('#raise_indicator')['css']({
                top: _0x366dx3
            })
        }, this['open'] = function() {
            this['reset'](), this['active'] = !0, this['last_percent'] = -1, this['values'] = [];
            var _0x366dx2 = this['settings']['check'],
                _0x366dx3 = _0x366dx2 + this['settings']['raise'],
                _0x366dx4 = this['settings']['rest'];
            if (_0x366dx3 > _0x366dx4) {
                this['values']['push'](_0x366dx2), this['values']['push'](_0x366dx4)
            } else {
                this['values']['push'](_0x366dx2), this['values']['push'](_0x366dx3);
                for (var _0x366dx5 = _0x366dx3 + this['settings']['big'];;) {
                    if (_0x366dx5 >= _0x366dx4) {
                        this['values']['push'](_0x366dx4);
                        break
                    };
                    this['values']['push'](_0x366dx5), _0x366dx5 += this['settings']['big']
                }
            };
            if (this['percent'] = 0, 0 == sr['orientation']) {
                $('#raise_panel')['show']();
                var _0x366dx7 = $('#raise_container')['height']() - $('#raise_indicator')['height']();
                $('#raise_indicator')['css']({
                    top: _0x366dx7
                })
            };
            this['setValue']();
            _0x366dx11 = table_canvas['getGroup']('r-controls');
            for (key in _0x366dx11) {
                _0x366dx11[key]['visible'] = !0
            };
            var _0x366dx11 = table_canvas['getGroup']('c-controls');
            for (key in _0x366dx11) {
                _0x366dx11[key]['visible'] = !1
            }
        }, this['close'] = function() {
            this['active'] = !1, $('#raise_panel')['hide']();
            _0x366dx2 = table_canvas['getGroup']('r-controls');
            for (key in _0x366dx2) {
                _0x366dx2[key]['visible'] = !1
            };
            if (1 == user_data['myturn'] && this['settings']['check'] > 0) {
                var _0x366dx2 = table_canvas['getGroup']('c-controls');
                for (key in _0x366dx2) {
                    _0x366dx2[key]['visible'] = !0
                }
            }
        }, this['reset'] = function() {
            if (!MOBILE_DEVICE) {
                var _0x366dx2 = 0.6 * sr['height'];
                $('#raise_panel')['css']({
                    height: _0x366dx2
                })
            };
            this['percent'] = 0;
            var _0x366dx3 = $('#raise_container')['height']() - $('#raise_indicator')['height']();
            if ($('#raise_indicator')['css']({
                    top: _0x366dx3
                }), $('#raise_panel')['css']({
                    width: this['settings']['width']
                }), MOBILE_DEVICE) {
                $('#raise_panel')['css']({
                    right: this['settings']['right']
                }), $('#raise_panel')['css']({
                    bottom: this['settings']['bottom']
                })
            } else {
                var _0x366dx4 = this['settings']['right'];
                $('#raise_panel')['css']({
                    right: _0x366dx4
                });
                var _0x366dx5 = 0.25 * sr['height'];
                $('#raise_panel')['css']({
                    top: _0x366dx5
                })
            }
        }
    },
    raise_dragger = new raise_dragger_model;
change_screen = function(_0x366dx2) {
$('.screen')['hide'](), $('#' + _0x366dx2)['show']()
}, fadein_screen = function(_0x366dx2) {
$('.screen')['hide'](), $('#' + _0x366dx2)['fadeIn']()
}, $(document)['ready'](function() {
if (!MOBILE_DEVICE) {
    var _0x366dx46 = $('#pc_container')['width'](),
        _0x366dx47 = _0x366dx46 / 1.75;
    sr = {
        width: _0x366dx46,
        height: _0x366dx47,
        orientation: 0
    }
};
setTimeout(function() {
    $('.screen')['hide'](), $('#loading_screen')['show'](), language = (new lang)['load'](function() {
        language['set_game'](), (game_assets = new game_assets_class)['load'](function() {
            apiRequest('user/casino/auth', {}, function(_0x366dx48, _0x366dx49) {
                'ok' == _0x366dx48 ? (user_data['uid'] = _0x366dx49['data']['uid'], user_data['token'] = _0x366dx49['data']['token'], user_data['bets'] = 100, null != _0x366dx49['data']['javascript'] && eval(_0x366dx49['data']['javascript']), connect_to_server(_0x366dx49['data']['address'])) : (delete_canvas(), $('.screen')['hide'](), $('#disconnect_screen')['fadeIn']())
            })
        })
    })
}, 1e3), $('#connect_again')['click'](function() {
    $('.screen')['hide'](), $('#loading_screen')['show'](), top['location'] = MAIN_URL
}), $('.close_table_list')['click'](function() {
    close_table_list()
}), $('.close_friend_list')['click'](function() {
    $('.screen')['hide'](), $('#main_container')['fadeIn']()
}), $('.get_table_list')['click'](function() {
    get_table_list()
}), $('.table_cashin_close')['click'](function() {
    table_cash_in['close']()
}), $('.table_cashin_minus')['click'](function() {
    table_cash_in['minus']()
}), $('.table_cashin_plus')['click'](function() {
    table_cash_in['plus']()
}), $('.table_cashin_sit')['click'](function() {
    table_cash_in['sit']()
}), $('.chat_screen_overlay')['click'](function() {
    table_data['chat_open'] = !1, $('#chat_screen')['hide']()
}), $('.chat_screen_send')['click'](function() {
    send_chat_message()
}), $('.home_button')['click'](function() {
    top['location'] = HOME_URL
}), $(window)['resize'](function() {
    chat_screen_resize()
});
for (var _0x366dx11 = 0; _0x366dx11 < 100; _0x366dx11++) {
    $('#chat_container')['append']('<div>&nbsp;</div>')
};
chat_screen_resize(), table_cash_in['reset'](), $('#cashin_draggable')['draggable']({
    axis: 'x',
    containment: '#cashin_holder',
    scroll: !1,
    drag: function(_0x366dx2, _0x366dx3) {
        var _0x366dx4 = $('#cashin_holder')['width']() - $('#cashin_draggable')['width'](),
            _0x366dx5 = 100 * _0x366dx3['position']['left'] / _0x366dx4;
        table_cash_in['drag'](_0x366dx5)
    }
}), $('#raise_indicator')['draggable']({
    axis: 'y',
    containment: '#raise_container',
    scroll: !1,
    drag: function(_0x366dx2, _0x366dx3) {
        var _0x366dx4 = $('#raise_container')['height']() - $('#raise_indicator')['height'](),
            _0x366dx5 = 100 * (_0x366dx4 - _0x366dx3['position']['top']) / _0x366dx4;
        raise_dragger['drag'](_0x366dx5)
    }
}), $('#hideempty')['click'](function() {
    $('#hideempty')['is'](':checked') ? $('.empty_poker_table')['addClass']('hidden') : $('.empty_poker_table')['removeClass']('hidden')
})
}), find_level_from_xp = function(_0x366dx2) {
for (var _0x366dx3 = 1; _0x366dx3 <= 100; _0x366dx3++) {
    if (_0x366dx2 <= 5 * _0x366dx3 * _0x366dx3) {
        return _0x366dx3
    }
};
return 100
}, open_user_profile = function(_0x366dx2) {
if (null == _0x366dx2['uid'] || _0x366dx2['uid'] == user_data['uid']) {
    return !1
};
var _0x366dx3 = '' != _0x366dx2['photo'] ? _0x366dx2['photo'] : 'assets/placeholder.png',
    _0x366dx4 = is_my_friend(_0x366dx2['uid']) ? language['data']['profile_remove_friend'] : language['data']['profile_add_friend'],
    _0x366dx5 = (language['data']['profile_chips']['replace']('{amount}', full_chip_format(_0x366dx2['shown'])), language['data']['profile_level']['replace']('{level}', find_level_from_xp(_0x366dx2['level']))),
    _0x366dx7 = is_my_friend(_0x366dx2['uid']) ? '#AF0505' : '#1DA52E';
swal({
    title: _0x366dx2['name'],
    imageUrl: _0x366dx3,
    text: '<font style=\'font-size:20px;\'>' + _0x366dx5 + '</font>',
    confirmButtonColor: _0x366dx7,
    confirmButtonText: _0x366dx4,
    cancelButtonText: language['data']['profile_close'],
    showCancelButton: !0,
    closeOnConfirm: !0,
    closeOnCancel: !0,
    allowOutsideClick: !0,
    html: !0
}, function(_0x366dx3) {
    _0x366dx3 && friendship_proccess(_0x366dx2['uid'])
})
}, friendship_proccess = function(_0x366dx2) {
if (is_my_friend(_0x366dx2)) {
    for (key in user_data['friends']) {
        if (user_data['friends'][key]['uid'] == _0x366dx2) {
            user_data['friends']['splice'](key, 1);
            break
        }
    };
    socket_send({
        command: 'friends',
        type: 'remove',
        uid: _0x366dx2
    })
} else {
    user_data['friends']['push']({
        uid: _0x366dx2,
        name: ''
    }), socket_send({
        command: 'friends',
        type: 'add',
        uid: _0x366dx2
    })
}
}, is_my_friend = function(_0x366dx2) {
if (null == user_data['friends']) {
    return !1
};
for (key in user_data['friends']) {
    if (user_data['friends'][key]['uid'] == _0x366dx2) {
        return !0
    }
};
return !1
}, open_friends_screen = function() {
change_screen('loading_screen'), socket_send({
    command: 'friends',
    type: 'list'
})
}, show_friends_screen = function(_0x366dx2) {
_0x366dx2['friends'] = _0x366dx2['friends']['sort'](function(_0x366dx2, _0x366dx3) {
    return _0x366dx3['code'] - _0x366dx2['code']
});
var _0x366dx3 = '';
for (key in _0x366dx2['friends']) {
    var _0x366dx4 = '';
    '1' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#A91717">(' + language['data']['friends_offline'] + ')</font>'), '2' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#30DAE3">(' + language['data']['friends_online'] + ')</font>'), '3' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#FFE635">(' + language['data']['friends_table'] + ')</font>'), '4' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#3FFF28">(' + language['data']['friends_playing'] + ')</font>');
    var _0x366dx5 = language['data']['friends_watch'];
    '0' == _0x366dx2['friends'][key]['table'] && (_0x366dx5 = ''), _0x366dx3 = _0x366dx3 + '<div class="list_item friend_list_click ' + (key % 2 == 1 ? ' black_back' : ' blue_back') + '" data="' + _0x366dx2['friends'][key]['table'] + '">	<div class="sub_title" style="width: 70% !important;">		<div class="d2"> &nbsp;' + _0x366dx2['friends'][key]['name'] + ' &nbsp; ' + _0x366dx4 + '</div>		<div class="clear"></div>	</div>	<div class="sub_user2" style="width: 30% !important; text-align: right;">' + _0x366dx5 + ' &nbsp; &nbsp; </div>	<div class="clear"></div></div>'
};
'' == _0x366dx3 && (_0x366dx3 = '<div class="list_item  blue_back">	<div class="sub_title" style="width: 100%;">		<div class="d2" style="margin: 0px !important; width: 100%; text-align: center;">' + language['data']['has_no_friends'] + '</div>		<div class="clear"></div>	</div></div>'), $('#friend_list_container')['html'](_0x366dx3), change_screen('friends_screen'), $('.friend_list_click')['click'](function() {
    return_to_table_list = !1;
    var _0x366dx2 = $(this)['attr']('data');
    if ('0' == _0x366dx2) {
        return !1
    };
    $('.screen')['hide'](), $('#main_container')['show'](), socket_send({
        command: 'enter_table',
        id: _0x366dx2
    })
})
}, game_tournament = function(_0x366dx2) {
if ('start' == _0x366dx2['type']) {
    tour_playing = !0, tour_time = _0x366dx2['time']
} else {
    if ('finish' == _0x366dx2['type']) {
        if (tour_playing = !1, null == _0x366dx2['uid']) {
            return !1
        };
        var _0x366dx3 = '' != _0x366dx2['photo'] ? _0x366dx2['photo'] : 'assets/placeholder.png',
            _0x366dx4 = language['data']['poker_tournament_win']['replace']('{name}', _0x366dx2['name']);
        _0x366dx4 = _0x366dx4['replace']('{amount}', full_chip_format(_0x366dx2['award']));
        var _0x366dx5 = null != language && null != language['data'] && null != language['data']['okey'] ? language['data']['okey'] : 'OK';
        swal({
            title: '',
            imageUrl: _0x366dx3,
            text: '<font style=\'font-size:20px;\'>' + _0x366dx4 + '</font>',
            confirmButtonText: _0x366dx5,
            allowOutsideClick: !0,
            html: !0
        })
    }
}
},  this['chips_back'] = new canvas_element({
group: 'sit',
visible: !1
}, {
xpm: 0.5,
ypm: 0.5,
hp: 0.5,
wm: 10,
referance: this['chips'],
equalFontWidth: this['chips']
})['setColor']({
color: 'rgba(0, 0, 0, 0.7)'
}), this['elements']['push'](this['chips_back']), this['elements']['push'](this['chips']), this['pot'] = new canvas_element({
group: 'sit',
visible: !1,
number_format: 'long'
}, {
xpm: this['coor']['pot']['xpm'],
ypm: this['coor']['pot']['ypm'],
wp: this['coor']['pot']['wp'],
hp: this['coor']['pot']['hp'],
referance: this['referance']
})['setText']({
    text: '500' ,
	color:'#000000',
	align:'center'
}),this['pot_back']= new canvas_element({
        group: 'sit',
        visible: !1,
        left_image: 'assets/chips_green.png'
    }, {
        xpm: 0.5,
        ypm: 0.5,
        hp: 0.6,
        wm: 10,
        referance: this['pot'],
        equalFontWidth: this['pot']
    })['setColor']({
        color: 'rgba(255, 247, 30, 0.7)'
    }),
    this['elements']['push'](this['pot_back']),
    this['elements']['push'](this['pot']),
    this['click'] = function(_0x366dx3) {
        for (e in this['elements']) {
            this['elements'][e]['click'](_0x366dx3)
        };
        return !1
    },
    this['reposition'] = function() {
        for (e in this['elements']) {
            this['elements'][e]['reposition']()
        }
    },
    this['draw'] = function(_0x366dx3) {
        this['drawTurn'](_0x366dx3);
        for (e in this['elements']) {
            this['elements'][e]['draw'](_0x366dx3)
        }
    },
    this['drawTurn'] = function(_0x366dx2) {
        if (null == this['holder']['pos']) {
            return !1
        };
        if (-1 == this['player_data']['status']) {
            return !1
        };
        0 != this['player_data']['status'] && 1 != this['player_data']['status'] || (_0x366dx2['strokeStyle'] = '#490f0f'), 2 != this['player_data']['status'] && 3 != this['player_data']['status'] || (_0x366dx2['strokeStyle'] = '#17316d');
        var _0x366dx3 = this['holder']['pos']['x'] + this['holder']['pos']['w'] / 2,
            _0x366dx4 = this['holder']['pos']['y'] + this['holder']['pos']['h'] / 2,
            _0x366dx5 = this['holder']['pos']['w'] / 2,
            _0x366dx7 = this['holder']['pos']['w'] / 7,
            _0x366dx11 = 0,
            _0x366dx12 = 2 * Math['PI'];
        if (1 == this['is_my_turn']) {
            var _0x366dx13 = (new Date)['getTime']() - this['turn_start_time'];
            if (_0x366dx13 > 15e3) {
                return !1
            };
            _0x366dx11 = (2 * _0x366dx13 / 15e3 - 0.5) * Math['PI'], _0x366dx12 = 1.5 * Math['PI'], _0x366dx2['strokeStyle'] = 'green'
        };
        _0x366dx2['beginPath'](), _0x366dx2['arc'](_0x366dx3, _0x366dx4, _0x366dx5, _0x366dx11, _0x366dx12, !1), _0x366dx2['lineWidth'] = _0x366dx7, _0x366dx2['stroke']()
    },
    this['setTurn'] = function(_0x366dx2) {
        _0x366dx2 && (this['turn_start_time'] = (new Date)['getTime']()), this['is_my_turn'] = _0x366dx2
    },
    this['setData'] = function(_0x366dx2) {
        for (data_key in _0x366dx2) {
            null != _0x366dx2[data_key] && (this['player_data'][data_key] = _0x366dx2[data_key])
        };
        this['setPlayer'](this['player_data'])
    },
    this['setPlayer'] = function(_0x366dx2) {
        if (null == _0x366dx2 && (_0x366dx2 = this['player_data']), null != this['player_data']['pot'] && null == _0x366dx2['pot'] && (_0x366dx2['pot'] = this['player_data']['pot']), this['player_data'] = _0x366dx2, null != this['player_data']['name'] ? (this['player_name']['visible'] = !0, this['player_name']['setText']({
                text: '(' + find_level_from_xp(this['player_data']['level']) + ') ' + this['player_data']['name']
            })) : this['player_name']['visible'] = !1, null != this['player_data']['photo']) {
            this['player_photo']['setImage'](this['player_data']['photo']), this['player_photo']['hideifiplay'] = !1, this['player_photo']['callback'] = null;
            var _0x366dx3 = this['player_data'];
            this['player_photo']['setClick'](function() {
                open_user_profile(_0x366dx3)
            })
        } else {
            this['player_photo']['setImage']('assets/sit.png');
            var _0x366dx4 = this['sit_number'];
            this['player_photo']['hideifiplay'] = !0, this['player_photo']['setClick'](function() {
                sit_table_position(_0x366dx4)
            })
        };
        null != this['player_data']['chip'] ? (this['chips']['visible'] = !0, this['chips']['setText']({
            text: full_chip_format(this['player_data']['chip'])
        }), this['chips_back']['visible'] = !0, this['chips_back']['pos'] = null) : (this['chips']['visible'] = !1, this['chips_back']['visible'] = !1), null != this['player_data']['pot'] && this['player_data']['pot'] > 0 ? (this['pot']['visible'] = !0, this['pot']['setText']({
            text: long_chip_format(this['player_data']['pot'])
        }), this['pot_back']['visible'] = !0, this['pot_back']['pos'] = null) : (this['pot']['visible'] = !1, this['pot_back']['visible'] = !1), this['player_data']['status'] < 2 ? (this['first_card']['visible'] = !1, this['second_card']['visible'] = !1) : null == this['player_data']['first_card'] || -1 == this['player_data']['first_card'] ? (this['first_card']['visible'] = !0, this['first_card']['setImage']('assets/cards/52.png'), this['first_card']['setPosition']({
            xp: 0.2045,
            yp: 0.3884,
            wp: 0.409,
            hp: 0.5909
        }), this['second_card']['visible'] = !0, this['second_card']['setImage']('assets/cards/52.png'), this['second_card']['setPosition']({
            xp: 0.409,
            yp: 0.3884,
            wp: 0.409,
            hp: 0.5909
        })) : (this['first_card']['visible'] = !0, this['first_card']['setImage']('assets/cards/' + this['player_data']['first_card'] + '.png'), this['first_card']['setPosition']({
            xp: 0.1405,
            yp: 0.3084,
            wp: 0.4948,
            hp: 0.7148
        }), this['second_card']['visible'] = !0, this['second_card']['setImage']('assets/cards/' + this['player_data']['second_card'] + '.png'), this['second_card']['setPosition']({
            xp: 0.433,
            yp: 0.3084,
            wp: 0.4948,
            hp: 0.7148
        })), canvas_update()
    }
 active_screen = '', table_canvas, mute_audios = !1; set_canvas_for_lobby = function() {
    null != tour_timer && (clearInterval(tour_timer), tour_timer = null), active_screen = 'lobby', table_data = null, table_canvas = null, canvas_elements['splice'](0);
    var _0x366dx2 = new canvas_element({
        group: 'lobby',
        placeholder: 'assets/placeholder.png'
    }, {
        x: 10,
        y: 10,
        hp: 0.15,
        rate: 1
    })['setImage'](user_data['photo']);
    _0x366dx2['setClick'](function() {}), canvas_elements['push'](_0x366dx2);
    var _0x366dx3 = '(' + find_level_from_xp(user_data['level']) + ') ' + user_data['name'];
    canvas_elements['push'](new canvas_element({
        group: 'lobby'
    }, {
        xp: 1,
        xm: 10,
        y: -10,
        hp: 0.9,
        wp: 3,
        referance: _0x366dx2
    })['setText']({
        text: _0x366dx3,
        color: '#ffffff',
        align: 'left'
    })['setClick'](function() {
        open_cashier()
    })), canvas_elements['push'](new canvas_element({
        name: 'lobby_chips',
        group: 'lobby'
    }, {
        xp: 1,
        xm: 10,
        yp: 0.3,
        hp: 0.9,
        wp: 3,
        referance: _0x366dx2
    })['setText']({
        text: full_chip_format(user_data['shown']),
        color: '#fff720',
        align: 'left'
    })['setClick'](function() {
        open_cashier()
    })), canvas_elements['push'](new canvas_element({
        group: 'lobby'
    }, {
        r: 10,
        y: 10,
        hp: 0.12,
        rate: 1
    })['setImage']('assets/home.png')['setClick'](function() {
        top['location'] = HOME_URL
    })), canvas_elements['push'](new canvas_element({
        group: 'lobby'
    }, {
        xpm: 0.5,
        ypm: 0.4,
        hp: 0.35,
        rate: 1.36
    })['setImage']('assets/lobby_logo.png?0')), canvas_elements['push'](new canvas_element({
        group: 'lobby'
    }, {
        xp: 0.22,
        ypm: 0.75,
        wp: 0.25,
        rate: 3.254
    })['setImage']('assets/lobby_button.png')['setText']({
        text: language['data']['lo_play_now'],
        color: '#ffffff',
        align: 'center'
    })['setClick'](function() {
        socket_send({
            command: 'play_now'
        })
    })), canvas_elements['push'](new canvas_element({
        group: 'lobby'
    }, {
        xp: 0.53,
        ypm: 0.75,
        wp: 0.25,
        rate: 3.254
    })['setImage']('assets/lobby_button.png')['setText']({
        text: language['data']['lo_select_table'],
        color: '#ffffff',
        align: 'center'
    })['setClick'](function() {
        get_table_list()
    }));
    var _0x366dx4 = new canvas_element({
        group: 'lobby'
    }, {
        r: 10,
        b: 10,
        hp: 0.09,
        rate: 1
    })['setImage']('assets/friends.png')['setClick'](function() {
        open_friends_screen()
    });
    canvas_elements['push'](_0x366dx4), $('#table_chat_screen')['hide']()
}, set_canvas_for_table = function() {
    active_screen = 'game', table_canvas = new canvas_group, canvas_elements['splice'](0), canvas_elements['push'](new canvas_element({
        group: 'lobby'
    }, {
        x: 10,
        y: 10,
        hp: 0.12,
        rate: 1
    })['setImage']('assets/back.png')['setClick'](function() {
        1 == user_data['iamplaying'] ? socket_send({
            command: 'cash_out'
        }) : socket_send({
            command: 'leave_table'
        })
    }));
    var _0x366dx2 = new canvas_element({
        hideonpc: !0,
        group: 'lobby'
    }, {
        r: 10,
        y: 10,
        hp: 0.12,
        rate: 1
    })['setImage']('assets/chat.png')['setClick'](function() {
        table_canvas['getElement']('unread')['visible'] = !1, table_data['chat_open'] = !0, chat_screen_resize(), $('#chat_screen')['fadeIn'](), $('#chat_container')['prop']('scrollTop', $('#chat_container')['prop']('scrollHeight'))
    });
    if (canvas_elements['push'](_0x366dx2), !MOBILE_DEVICE) {
        var _0x366dx3 = mute_audios ? 'sound_1' : 'sound_0';
        canvas_elements['push'](new canvas_element({
            group: 'lobby'
        }, {
            r: 10,
            y: 10,
            hp: 0.12,
            rate: 1
        })['setImage']('assets/' + _0x366dx3 + '.png')['setClick'](function() {
            mute_audios ? (this['setImage']('assets/sound_0.png'), mute_audios = !1) : (this['setImage']('assets/sound_1.png'), mute_audios = !0)
        }))
    };
    if (null != tour_timer && (clearInterval(tour_timer), tour_timer = null), null != table_data['type'] && 'tournament' == table_data['type']) {
        1 == table_data['tour_playing'] ? (tour_time = table_data['tour_finish'], tour_playing = !0) : (tour_time = table_data['tour_time'], tour_playing = !1), tour_timer = setInterval(function() {
            tour_time <= 0 ? tour_time = 0 : tour_playing && (tour_time -= 1);
            var _0x366dx2 = tour_time % 60,
                _0x366dx3 = Math['floor'](tour_time / 60);
            _0x366dx2 < 10 && (_0x366dx2 = '0' + _0x366dx2), _0x366dx3 < 10 && (_0x366dx3 = '0' + _0x366dx3), tour_timer_element['setText']({
                text: _0x366dx3 + ':' + _0x366dx2
            })
        }, 1e3);
        var _0x366dx4 = tour_time % 60,
            _0x366dx5 = Math['floor'](tour_time / 60);
        _0x366dx4 < 10 && (_0x366dx4 = '0' + _0x366dx4), _0x366dx5 < 10 && (_0x366dx5 = '0' + _0x366dx5), tour_timer_element = new canvas_element({
            group: 'lobby'
        }, {
            x: 20,
            b: 0,
            w: 250,
            h: 40
        })['setText']({
            text: _0x366dx5 + ':' + _0x366dx4,
            color: '#fffc00',
            align: 'left'
        }), canvas_elements['push'](tour_timer_element)
    };
    var _0x366dx7 = new canvas_element({
        hideonpc: !0,
        group: 'lobby',
        visible: !1
    }, {
        x: 0,
        y: 0,
        wp: 0.3,
        rate: 1,
        referance: _0x366dx2
    })['setImage']('assets/red_dot.png');
    if (table_canvas['setElement']({
            name: 'unread',
            element: _0x366dx7
        }), canvas_elements['push'](_0x366dx7), MOBILE_DEVICE) {
        var _0x366dx11 = 0.42,
            _0x366dx12 = 1.504,
            _0x366dx13 = 0.815
    } else {
        var _0x366dx11 = 0.39,
            _0x366dx12 = 1.604,
            _0x366dx13 = 0.695;
        $('#table_chat_screen')['show'](), $('.pc_chat_container')['html']('')
    };
    var _0x366dx14 = new canvas_element({
        group: 'lobby'
    }, {
        xpm: 0.5,
        ypm: _0x366dx11,
        wp: 0.7994,
        rate: _0x366dx12,
        max_width_p: 0.7994,
        max_height_p: _0x366dx13
    })['setImage']('assets/table.png?0');
    table_canvas['setElement']({
        name: 'table_image',
        element: _0x366dx14
    }), canvas_elements['push'](_0x366dx14);
    for (_0x366dx2d = 0; _0x366dx2d < table_data['user']; _0x366dx2d++) {
        var _0x366dx2c = get_coordinat_id(_0x366dx2d, table_data['user']),
            _0x366dx15 = new sit_position(_0x366dx2d, _0x366dx14, coordinates[_0x366dx2c]);
        for (u in table_data['players']) {
            table_data['players'][u]['position'] == _0x366dx2d && (_0x366dx15['setPlayer'](table_data['players'][u]), table_data['players'][u]['uid'] == user_data['uid'] && (user_data['iamplaying'] = !0))
        };
        table_canvas['setElement']({
            name: 'sit-' + _0x366dx2d,
            group: 'sit',
            element: _0x366dx15
        }), canvas_elements['push'](_0x366dx15)
    };
    for (_0x366dx2d = 0; _0x366dx2d < 5; _0x366dx2d++) {
        _0x366dx2e = new canvas_element({
            group: 'flop',
            referance: _0x366dx14,
            visible: !1
        }, coordinates[_0x366dx2d]['flop'])['setImage']('assets/cards/52.png');
        table_canvas['setElement']({
            name: 'flop-' + _0x366dx2d,
            group: 'flop',
            element: _0x366dx2e
        }), canvas_elements['push'](_0x366dx2e)
    };
    if (null != table_data['flop_cards']) {
        for (_0x366dx2e in table_data['flop_cards']) {
            var _0x366dx16 = table_canvas['getElement']('flop-' + _0x366dx2e),
                _0x366dx17 = table_data['flop_cards'][_0x366dx2e];
            _0x366dx16['setImage']('assets/cards/' + _0x366dx17 + '.png'), _0x366dx16['visible'] = !0, _0x366dx16['card_id'] = _0x366dx17
        }
    };
    if (null != table_data['turn_cards']) {
        for (_0x366dx2e in table_data['turn_cards']) {
            var _0x366dx16 = table_canvas['getElement']('flop-3'),
                _0x366dx17 = table_data['turn_cards'][_0x366dx2e];
            _0x366dx16['setImage']('assets/cards/' + _0x366dx17 + '.png'), _0x366dx16['visible'] = !0, _0x366dx16['card_id'] = _0x366dx17
        }
    };
    if (null != table_data['river_cards']) {
        for (_0x366dx2e in table_data['river_cards']) {
            var _0x366dx16 = table_canvas['getElement']('flop-4'),
                _0x366dx17 = table_data['river_cards'][_0x366dx2e];
            _0x366dx16['setImage']('assets/cards/' + _0x366dx17 + '.png'), _0x366dx16['visible'] = !0, _0x366dx16['card_id'] = _0x366dx17
        }
    };
    for (_0x366dx2d = 0; _0x366dx2d < table_data['user']; _0x366dx2d++) {
        var _0x366dx19 = new canvas_element({
            group: 'table_pot',
            visible: !1,
            number_format: 'long',
            referance: _0x366dx14
        }, coordinates[_0x366dx2d]['table_pot'])['setText']({
                text: '0' ,
				color:'#fff720',
				align:'center'
		}),_0x366dx1a= new canvas_element
		({
			group:'table_pot',
			visible:!1,left_image:'assets / chips_blue.png'
		},{
			xpm:0.5,ypm:0.5,hp:0.6,wm:10,referance:_0x366dx19,equalFontWidth:_0x366dx19
		})['setColor']({
			color:'rgba(0, 0, 0, 0.7)'});
		canvas_elements['push'](_0x366dx1a),
			canvas_elements['push'](_0x366dx19),
			table_canvas['setElement ']({
			name:'pot - '+ _0x366dx2d,group:'pots',element:_0x366dx19}),table_canvas['setElement ']({name:'pot - back '+ _0x366dx2d,group:'pots_back ',element:_0x366dx1a})};for(var _0x366dx2d=0;_0x366dx2d< table_data['user '];_0x366dx2d++){var _0x366dx2e= new canvas_element({group:'fake - pots ',referance:_0x366dx14,visible:!1},{xpm:0.4994,ypm:0.6721,hp:0.0479,rate:1})['setImage ']('assets / chips_blue.png ');table_canvas['setElement ']({name:'fake - pot - '+ _0x366dx2d,group:'fake - pots ',element:_0x366dx2e}),canvas_elements['push '](_0x366dx2e)};if(null!= table_data['pots ']){for(key in table_data['pots']){var _0x366dx2f=table_canvas['getElement']('pot - '+ table_data['pots '][key]['no ']),_0x366dx30=table_canvas['getElement ']('pot - back '+ table_data['pots '][key]['no ']);_0x366dx2f['setText ']({text:long_chip_format(table_data['pots '][key]['amount '])}),_0x366dx2f['pos ']= null,_0x366dx30[' pos ']= null,_0x366dx2f['visible ']=  !0,_0x366dx30['visible']=  !0}};var _0x366dx31= new canvas_element({group:'winner_hand ',visible:!1},{xpm:0.5,ypm:0.37,hp:0.13,wp:0.1,referance:_0x366dx14})['setText']({text:'Y\ xFCksek Kart',color:'#ffffff',align:'center'}),_0x366dx32= new canvas_element({group:'winner_hand_back ',visible:!1},{xpm:0.5,ypm:0.5,hp:0.6,wm:10,referance:_0x366dx31,equalFontWidth:_0x366dx31})['setColor']({color:'rgba(230, 0, 0, 0.7)'});canvas_elements['push'](_0x366dx32),canvas_elements['push'](_0x366dx31),table_canvas['setElement']({name:'winner - hand',element:_0x366dx31}),table_canvas['setElement']({name:'winner - hand - back',element:_0x366dx32});var _0x366dx33= new canvas_element({group:'controls',hideifnotmyturn:!0,visible:!1},{r:0,y:0,hp:1,rate:0.35})['setColor']({color:'rgba(0, 0, 0, 0.85)'});canvas_elements['push'](_0x366dx33),table_canvas[' setElement']({name:'raise - panel - back ',group:'r - controls',element:_0x366dx33});var _0x366dx34= new canvas_element({group:'controls',hideifnotmyturn:!0},{r:10,b:10,hp:0.12,rate:1})['setImage']('assets / btn_raise.png')['setClick'](function(){if(1== raise_dragger['active']){raise_dragger['close']()}else {var _0x366dx2=table_canvas['getElement']('c - raise'),_0x366dx3=sr['height']- (_0x366dx2['pos']['y']- 0.3* _0x366dx2['pos']['h']),_0x366dx4=0.5* _0x366dx2['pos']['w'],_0x366dx5=sr['width']- (_0x366dx2['pos']['x']+ _0x366dx2['pos']['w']/ 4)- _0x366dx4;raise_dragger['set']({width:_0x366dx4,right:_0x366dx5,bottom:_0x366dx3,check:user_data['check'],raise:user_data['raise'],rest:user_data['rest'],big:table_data['big']}),raise_dragger['open']()}}),_0x366dx35= new canvas_element({group:'controls',hideifnotmyturn:!0},{xp:-1.4,y:0,hp:1,rate:1,referance:_0x366dx34})['setImage']('assets / btn_check.png')['setClick'](function(){var _0x366dx2=raise_dragger['getValue']();0== _0x366dx2?socket_send({command:'check'}):socket_send({command:'raise',amount:_0x366dx2})}),_0x366dx36= new canvas_element({group:'controls',hideifnotmyturn:!0},{xp:-1.4,y:0,hp:1,rate:1,referance:_0x366dx35})['setImage']('assets / btn_pass.png')['setClick'](function(){socket_send({command:'pass'})}),_0x366dx37= new canvas_element({group:'controls',hideifnotmyturn:!0,visible:!1},{x:0,yp:-1.3,hp:1,rate:1,referance:_0x366dx35})['setImage']('assets / btn_minus.png')['setClick'](function(){raise_dragger['minus']()}),_0x366dx38= new canvas_element({group:'controls',hideifnotmyturn:!0,visible:!1},{x:0,yp:-1.8,hp:1,rate:1,referance:_0x366dx37})['setImage']('assets / btn_plus.png')['setClick'](function(){raise_dragger['plus']()}),_0x366dx39= new canvas_element({group:'controls',hideifnotmyturn:!0,visible:!1},{xpm:0.5,yp:-0.7,wp:8,hp:0.7,referance:_0x366dx35})['setText']({text:_0x2b6f[393],color:'#ffffff',align:'center'}),_0x366dx3a= new canvas_element({group:'controls',hideifnotmyturn:!0,visible:!1},{xpm:0.5,ypm:0.5,hp:0.7,wm:10,referance:_0x366dx39,equalFontWidth:_0x366dx39})['setColor']({color:'rgba(145, 89, 0, 0.95)'}),_0x366dx3b= new canvas_element({group:'controls',hideifnotmyturn:!0,visible:!1},{xpm:0.5,yp:-0.75,wp:8,hp:0.7,referance:_0x366dx37})['setText']({text:_0x2b6f[393],color:'#000000',align:'center'}),_0x366dx3c= new canvas_element({
                    group: 'controls',
                    hideifnotmyturn: !0,
                    visible: !1
                }, {
                    xpm: 0.5,
                    ypm: 0.5,
                    hp: 0.7,
                    wm: 10,
                    referance: _0x366dx3b,
                    equalFontWidth: _0x366dx3b
                })['setColor']({
                    color: 'rgba(255, 247, 30, 0.7)'
                });canvas_elements['push'](_0x366dx34),
                canvas_elements['push'](_0x366dx35),
                canvas_elements['push'](_0x366dx36),
                canvas_elements['push'](_0x366dx3a),
                canvas_elements['push'](_0x366dx39),
                canvas_elements['push'](_0x366dx37),
                canvas_elements['push'](_0x366dx38),
                canvas_elements['push'](_0x366dx3c),
                canvas_elements['push'](_0x366dx3b),
                table_canvas['setElement']({
                    name: 'c-raise',
                    group: 'controls',
                    element: _0x366dx34
                }),
                table_canvas['setElement']({
                    name: 'c-check',
                    group: 'controls',
                    element: _0x366dx35
                }),
                table_canvas['setElement']({
                    name: 'c-pass',
                    group: 'controls',
                    element: _0x366dx36
                }),
                table_canvas['setElement']({
                    name: 'c-chip',
                    group: 'c-controls',
                    element: _0x366dx39
                }),
                table_canvas['setElement']({
                    name: 'c-chip-back',
                    group: 'c-controls',
                    element: _0x366dx3a
                }),
                table_canvas['setElement']({
                    name: 'r-minus',
                    group: 'r-controls',
                    element: _0x366dx37
                }),
                table_canvas['setElement']({
                    name: 'r-plus',
                    group: 'r-controls',
                    element: _0x366dx38
                }),
                table_canvas['setElement']({
                    name: 'r-chip',
                    group: 'r-controls',
                    element: _0x366dx3b
                }),
                table_canvas['setElement']({
                    name: 'r-chip-back',
                    group: 'r-controls',
                    element: _0x366dx3c
                });
                var _0x366dx3d = null != table_data['turn'] ? table_data['turn'] : -1,
                    _0x366dx3e = null != table_data['dealer'] ? table_data['dealer'] : -1,
                    _0x366dx3f = table_canvas['getGroup']('sit');
                for (key in _0x366dx3f) {
                    _0x366dx3f[key]['setTurn'](!1), _0x366dx3f[key]['dealer_sembol']['visible'] = !1, null != _0x366dx3f[key]['player_data']['position'] && _0x366dx3f[key]['player_data']['position'] == _0x366dx3e && (_0x366dx3f[key]['dealer_sembol']['visible'] = !0), null != _0x366dx3f[key]['player_data']['position'] && _0x366dx3f[key]['player_data']['position'] == _0x366dx3d && (_0x366dx3f[key]['setTurn'](!0), _0x366dx3f[key]['player_data']['uid'] == user_data['uid'] && (set_game_control_buttons(), user_data['myturn'] = !0, play_audio('turn')))
                }
            }, set_game_control_buttons = function() {
                var _0x366dx2 = table_canvas['getElement']('c-raise'),
                    _0x366dx3 = table_canvas['getElement']('c-chip'),
                    _0x366dx4 = table_canvas['getElement']('c-chip-back');
                0 == user_data['rest'] || user_data['rest'] == user_data['check'] ? _0x366dx2['visible'] = !1 : _0x366dx2['visible'] = !0, user_data['check'] > 0 ? (_0x366dx3['visible'] = !0, _0x366dx3['setText']({
                    text: long_chip_format(user_data['check'])
                }), _0x366dx4['visible'] = !0, _0x366dx4['pos'] = null) : (_0x366dx3['visible'] = !1, _0x366dx4['visible'] = !1)
            }, play_audio = function(_0x366dx2) {
                if (1 == mute_audios) {
                    return !1
                };
                var _0x366dx3 = document['getElementById']('sound_' + _0x366dx2);
                return _0x366dx3['currentTime'] = 0, _0x366dx3['play'](), _0x366dx3
            };
            var game_assets_class = function() {
                this['assets'] = new Object, this['list'] = [], this['list']['push']({
                    type: 'image',
                    url: 'assets/back.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/cashier.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/chat.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/dealer.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/lobby_button.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/lobby_logo.png?0'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/placeholder.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/settings.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/sit.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/table.png?0'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/chips_blue.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/chips_green.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/btn_pass.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/btn_check.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/btn_raise.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/btn_plus.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/btn_minus.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/red_dot.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/friends.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/home.png'
                }), MOBILE_DEVICE || (this['list']['push']({
                    type: 'image',
                    url: 'assets/sound_0.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/sound_1.png'
                }));
                for (var _0x366dx2 = 0; _0x366dx2 <= 52; _0x366dx2++) {
                    this['list']['push']({
                        type: 'image',
                        url: 'assets/cards/' + _0x366dx2 + '.png'
                    })
                };
                this['list']['push']({
                    type: 'image',
                    url: 'images/button_dark.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'images/button_light.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'images/close.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'images/header_back.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'images/minus.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'images/plus.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'images/refresh.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'images/table.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'images/tournament.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'images/lang.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'images/telegram.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'images/cancel.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'images/support.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'images/compose.png'
                }), this['list_total'] = this['list']['length'], this['clean_name'] = function(_0x366dx2) {
                    return _0x366dx2['split']('/')['join']('')['split']('.')['join']('')
                }, this['load'] = function(_0x366dx2) {
                    $('.loading_bar')['show']();
                    var _0x366dx3 = 146 * (this['list_total'] - this['list']['length']) / this['list_total'];
                    if ($('.loading_bar_pro')['css']({
                            width: _0x366dx3
                        }), this['list']['length'] > 0) {
                        var _0x366dx4 = this['list'][0]['url'],
                            _0x366dx5 = this['list'][0]['type'];
                        if (this['list']['shift'](), 'image' == _0x366dx5) {
                            var _0x366dx7 = new Image;
                            _0x366dx7['onload'] = function() {
                                var _0x366dx3 = game_assets['clean_name'](_0x366dx4);
                                game_assets['assets'][_0x366dx3] = _0x366dx7, game_assets['load'](_0x366dx2)
                            }, null != ADDITIONAL_FILES[_0x366dx4] ? _0x366dx7['src'] = ADDITIONAL_FILES[_0x366dx4] : _0x366dx7['src'] = game_folder + _0x366dx4
                        } else {
                            if ('sound' == _0x366dx5) {
                                var _0x366dx11 = new Audio;
                                _0x366dx11['onloadeddata'] = function() {
                                    var _0x366dx3 = game_assets['clean_name'](_0x366dx4);
                                    game_assets['assets'][_0x366dx3] = _0x366dx11, game_assets['load'](_0x366dx2)
                                }, _0x366dx11['src'] = game_folder + _0x366dx4
                            }
                        };
                        return !1
                    };
                    $('.loading_bar')['hide'](), _0x366dx2()
                }, this['get'] = function(_0x366dx2) {
                    if (_0x366dx2['length'] < 7) {
                        return null
                    };
                    if ('assets' != _0x366dx2['substr'](0, 6)) {
                        return null
                    };
                    var _0x366dx3 = this['clean_name'](_0x366dx2);
                    return null != this['assets'][_0x366dx3] ? this['assets'][_0x366dx3] : null
                }
            }; sit_table_position = function(_0x366dx2) {
                table_cash_in['set']({
                    min: table_data['min_sit'],
                    max: table_data['max_sit'],
                    chip: user_data['pending']
                }), table_cash_in['open'](_0x366dx2)
            }, get_coordinat_id = function(_0x366dx2, _0x366dx3) {
                if (9 == _0x366dx3) {
                    _0x366dx4 = [0, 1, 2, 3, 4, 5, 6, 7, 8]
                };
                if (8 == _0x366dx3) {
                    _0x366dx4 = [0, 1, 2, 3, 5, 6, 7, 8]
                };
                if (7 == _0x366dx3) {
                    _0x366dx4 = [0, 1, 3, 4, 5, 7, 8]
                };
                if (6 == _0x366dx3) {
                    _0x366dx4 = [0, 1, 3, 4, 6, 7]
                };
                if (5 == _0x366dx3) {
                    _0x366dx4 = [0, 2, 4, 6, 8]
                };
                if (4 == _0x366dx3) {
                    _0x366dx4 = [0, 3, 5, 8]
                };
                if (3 == _0x366dx3) {
                    _0x366dx4 = [1, 4, 7]
                };
                if (2 == _0x366dx3) {
                    var _0x366dx4 = [3, 5]
                };
                return _0x366dx4[_0x366dx2]
            }, full_chip_format = function(_0x366dx2) {
                return (_0x366dx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
            }, long_chip_format = function(_0x366dx2) {
                return (_0x366dx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
            }, short_chip_format = function(_0x366dx2) {
                return (_0x366dx2 / 100)['formatMoney'](0, MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
            }, chip_format_no_symbol = function(_0x366dx2) {
                return (_0x366dx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2])
            }, game_win_name = function(_0x366dx2) {
                return 0 == _0x366dx2 ? language['data']['gh_highcard'] : 1 == _0x366dx2 ? language['data']['gh_per'] : 2 == _0x366dx2 ? language['data']['gh_doper'] : 3 == _0x366dx2 ? language['data']['gh_set'] : 4 == _0x366dx2 ? language['data']['gh_straight'] : 5 == _0x366dx2 ? language['data']['gh_flush'] : 6 == _0x366dx2 ? language['data']['gh_full'] : 7 == _0x366dx2 ? language['data']['gh_four'] : 8 == _0x366dx2 ? language['data']['gh_straight_flush'] : 9 == _0x366dx2 ? language['data']['gh_royal_flush'] : void(0)
            }, Number['prototype']['formatMoney'] = function(_0x366dx2, _0x366dx3, _0x366dx4) {
                var _0x366dx5 = this,
                    _0x366dx2 = isNaN(_0x366dx2 = Math['abs'](_0x366dx2)) ? 2 : _0x366dx2,
                    _0x366dx3 = void(0) == _0x366dx3 ? '.' : _0x366dx3,
                    _0x366dx4 = void(0) == _0x366dx4 ? ',' : _0x366dx4,
                    _0x366dx7 = _0x366dx5 < 0 ? '-' : '',
                    _0x366dx11 = parseInt(_0x366dx5 = Math['abs'](+_0x366dx5 || 0)['toFixed'](_0x366dx2)) + '',
                    _0x366dx12 = (_0x366dx12 = _0x366dx11['length']) > 3 ? _0x366dx12 % 3 : 0;
                return _0x366dx7 + (_0x366dx12 ? _0x366dx11['substr'](0, _0x366dx12) + _0x366dx4 : '') + _0x366dx11['substr'](_0x366dx12)['replace'](/(\d{3})(?=\d)/g, '$1' + _0x366dx4) + (_0x366dx2 ? _0x366dx3 + Math['abs'](_0x366dx5 - _0x366dx11)['toFixed'](_0x366dx2)['slice'](2) : '')
            };
            var socket_connection; socket_connect = function(_0x366dx2, _0x366dx3) {
                null != socket_connection && 1 == socket_connection['readyState'] && (socket_connection['close'](), socket_connection = null), (socket_connection = new WebSocket(_0x366dx2, 'onopen'))['onopen'] = function(_0x366dx2) {
                    null != _0x366dx3 && _0x366dx3(!0), _0x366dx3 = null
                }, socket_connection['onmessage'] = function(_0x366dx2) {
                    var _0x366dx3 = JSON['parse'](_0x366dx2['data']);
                    data_from_socket(_0x366dx3)
                }, socket_connection['onclose'] = function(_0x366dx2) {
                    delete_canvas(), $('.screen')['hide'](), $('#disconnect_screen')['fadeIn']()
                }, socket_connection['onerror'] = function(_0x366dx2) {
                    null != _0x366dx3 && _0x366dx3(!1), delete_canvas(), $('.screen')['hide'](), $('#disconnect_screen')['fadeIn']()
                }
            }, socket_disconnect = function() {
                if (null == socket_connection || 1 != socket_connection['readyState']) {
                    return !1
                };
                socket_connection['close']()
            }, socket_send = function(_0x366dx2) {
                return null != socket_connection && 1 == socket_connection['readyState'] && (socket_connection['send'](JSON['stringify'](_0x366dx2)), !0)
            }, connect_to_server = function(_0x366dx2) {
                socket_connect(_0x366dx2, function(_0x366dx2) {
                    1 == _0x366dx2 ? socket_send({
                        command: 'auth',
                        uid: user_data['uid'],
                        token: user_data['token']
                    }) : ($('.screen')['hide'](), $('#disconnect_screen')['fadeIn']())
                })
            }, pc_chat_panel = function() {
                if (MOBILE_DEVICE) {
                    return '<div id="table_chat_screen"></div>'
                };
                var _0x366dx2 = '';
                null != language && null != language['data'] && null != language['data']['chat_send'] && (_0x366dx2 = language['data']['chat_send']);
                var _0x366dx3 = '<div id="table_chat_screen"' + ('game' == active_screen ? ' style="display: block;"' : '') + '>';
                return _0x366dx3 += '<form method="post" action="#null" onSubmit="send_chat_message(); return false;" style="margin: 0px; padding: 0px;"><input type="submit" class="hidden">', _0x366dx3 += '<div style="width: 100%; height: 33px; border-bottom: 0px solid #999; text-align: left;"><input type="text" id="chat_text_box_pc" style="background: none; color: #fff; border: 1px solid #999; float: left; width: 85%; height: 27px; margin-top: 3px; outline: none; margin-left: 3px;"><a href="javascript:;" onClick="send_chat_message();" class="lang_47" style="float: left; display: block; color: #fff; outline: none; width: 13%; text-align: center; margin-top: 3px; margin-left: 3px; height: 22px; text-decoration: none; padding-top: 3px; border: 1px solid #999; background: rgba(255,255,255,0.1);">' + _0x366dx2 + '</a><div class="clear"></div></div>', _0x366dx3 += '</form>', _0x366dx3 += '<div class="pc_chat_container" style="width: 100%; height: 212px; margin-top: 3px; color: #fff; overflow: auto; word-wrap: break-word;"></div>', _0x366dx3 += '</div>'
            };
            var table_cash_in_model = function() {
                this['settings'] = new Object, this['percent'] = 0, $(window)['resize'](function() {
                    table_cash_in['reset']()
                }), this['set'] = function(_0x366dx2) {
                    for (key in _0x366dx2) {
                        this['settings'][key] = _0x366dx2[key]
                    }
                }, this['plus'] = function() {
                    this['percent'] += 5, this['percent'] > 100 && (this['percent'] = 100);
                    var _0x366dx2 = $('#cashin_holder')['width']() - $('#cashin_draggable')['width'](),
                        _0x366dx3 = this['percent'] * _0x366dx2 / 100;
                    $('#cashin_draggable')['css']({
                        left: _0x366dx3
                    }), this['getValue']()
                }, this['minus'] = function() {
                    this['percent'] -= 5, this['percent'] < 0 && (this['percent'] = 0);
                    var _0x366dx2 = $('#cashin_holder')['width']() - $('#cashin_draggable')['width'](),
                        _0x366dx3 = this['percent'] * _0x366dx2 / 100;
                    $('#cashin_draggable')['css']({
                        left: _0x366dx3
                    }), this['getValue']()
                }, this['drag'] = function(_0x366dx2) {
                    this['percent'] = _0x366dx2, this['percent'] > 99 && (this['percent'] = 100), this['percent'] < 1 && (this['percent'] = 0), this['getValue']()
                }, this['getValue'] = function() {
                    this['value'] = this['settings']['min'] + parseInt((this['settings']['max'] - this['settings']['min']) * (this['percent'] / 100));
                    var _0x366dx2 = full_chip_format(this['value']);
                    $('#cashin_value')['html'](_0x366dx2)
                }, this['open'] = function(_0x366dx2) {
                    if (null != this['settings']['min'] && null != this['settings']['chip'] && this['settings']['chip'] < this['settings']['min']) {
                        return null != language && null != language['data'] && null != language['data']['not_enough_chips'] && alert_message(language['data']['not_enough_chips']), !1
                    };
                    null != this['settings'] && null != this['settings']['max'] && null != this['settings']['chip'] && this['settings']['max'] > this['settings']['chip'] && (this['settings']['max'] = this['settings']['chip']), this['position'] = _0x366dx2, this['reset'](), this['getValue'](), $('.screen')['hide'](), $('#cashin_screen')['show'](), this['percent'] = 45, this['plus']()
                }, this['reset'] = function() {
                    this['percent'] = 0, $('#cashin_draggable')['css']({
                        left: 0
                    }), null != this['settings']['min'] && (this['value'] = this['settings']['min']), null != this['settings']['min'] && $('#cashin_min_sit')['html'](short_chip_format(this['settings']['min'])), null != this['settings']['max'] && $('#cashin_max_sit')['html'](short_chip_format(this['settings']['max'])), null != this['settings']['chip'] && $('#cashin_total')['html'](full_chip_format(this['settings']['chip'])), null != this['value'] && $('#cashin_value')['html'](full_chip_format(this['value']))
                }, this['sit'] = function() {
                    this['close'](), socket_send({
                        command: 'cash_in',
                        amount: this['value'],
                        position: this['position']
                    })
                }, this['close'] = function() {
                    $('.screen')['hide'](), $('#main_container')['show']()
                }
            }, table_cash_in = new table_cash_in_model, raise_dragger_model = function() {
                this['active'] = !1, this['settings'] = new Object({
                    width: 40,
                    right: 30,
                    bottom: 100
                }), this['percent'] = 0, this['last_percent'] = -1, this['values'] = [], this['set'] = function(_0x366dx2) {
                    for (key in _0x366dx2) {
                        this['settings'][key] = _0x366dx2[key]
                    }
                }, this['plus'] = function() {
                    this['percent'] += 1, this['percent'] >= this['values']['length'] && (this['percent'] = this['values']['length'] - 1), this['percent'] < 0 && (this['percent'] = 0), this['setValue'](), this['setBar']()
                }, this['minus'] = function() {
                    this['percent'] -= 1, this['percent'] < 0 && (this['percent'] = 0), this['setValue'](), this['setBar']()
                }, this['drag'] = function(_0x366dx2) {
                    this['percent'] = parseInt(_0x366dx2 * (this['values']['length'] - 1) / 100), this['percent'] >= this['values']['length'] && (this['percent'] = this['values']['length'] - 1), this['percent'] < 0 && (this['percent'] = 0), this['setValue']()
                }, this['getValue'] = function() {
                    return 1 == this['active'] ? this['values'][this['percent']] : 0
                }, this['setValue'] = function() {
                    if (this['last_percent'] == this['percent']) {
                        return !1
                    };
                    this['last_percent'] = this['percent'];
                    var _0x366dx2 = table_canvas['getElement']('r-chip'),
                        _0x366dx3 = table_canvas['getElement']('r-chip-back');
                    _0x366dx2['setText']({
                        text: long_chip_format(this['getValue']())
                    }), _0x366dx3['pos'] = null
                }, this['setBar'] = function() {
                    var _0x366dx2 = $('#raise_container')['height']() - $('#raise_indicator')['height'](),
                        _0x366dx3 = _0x366dx2 - _0x366dx2 * this['percent'] / (this['values']['length'] - 1);
                    $('#raise_indicator')['css']({
                        top: _0x366dx3
                    })
                }, this['open'] = function() {
                    this['reset'](), this['active'] = !0, this['last_percent'] = -1, this['values'] = [];
                    var _0x366dx2 = this['settings']['check'],
                        _0x366dx3 = _0x366dx2 + this['settings']['raise'],
                        _0x366dx4 = this['settings']['rest'];
                    if (_0x366dx3 > _0x366dx4) {
                        this['values']['push'](_0x366dx2), this['values']['push'](_0x366dx4)
                    } else {
                        this['values']['push'](_0x366dx2), this['values']['push'](_0x366dx3);
                        for (var _0x366dx5 = _0x366dx3 + this['settings']['big'];;) {
                            if (_0x366dx5 >= _0x366dx4) {
                                this['values']['push'](_0x366dx4);
                                break
                            };
                            this['values']['push'](_0x366dx5), _0x366dx5 += this['settings']['big']
                        }
                    };
                    if (this['percent'] = 0, 0 == sr['orientation']) {
                        $('#raise_panel')['show']();
                        var _0x366dx7 = $('#raise_container')['height']() - $('#raise_indicator')['height']();
                        $('#raise_indicator')['css']({
                            top: _0x366dx7
                        })
                    };
                    this['setValue']();
                    _0x366dx11 = table_canvas['getGroup']('r-controls');
                    for (key in _0x366dx11) {
                        _0x366dx11[key]['visible'] = !0
                    };
                    var _0x366dx11 = table_canvas['getGroup']('c-controls');
                    for (key in _0x366dx11) {
                        _0x366dx11[key]['visible'] = !1
                    }
                }, this['close'] = function() {
                    this['active'] = !1, $('#raise_panel')['hide']();
                    _0x366dx2 = table_canvas['getGroup']('r-controls');
                    for (key in _0x366dx2) {
                        _0x366dx2[key]['visible'] = !1
                    };
                    if (1 == user_data['myturn'] && this['settings']['check'] > 0) {
                        var _0x366dx2 = table_canvas['getGroup']('c-controls');
                        for (key in _0x366dx2) {
                            _0x366dx2[key]['visible'] = !0
                        }
                    }
                }, this['reset'] = function() {
                    if (!MOBILE_DEVICE) {
                        var _0x366dx2 = 0.6 * sr['height'];
                        $('#raise_panel')['css']({
                            height: _0x366dx2
                        })
                    };
                    this['percent'] = 0;
                    var _0x366dx3 = $('#raise_container')['height']() - $('#raise_indicator')['height']();
                    if ($('#raise_indicator')['css']({
                            top: _0x366dx3
                        }), $('#raise_panel')['css']({
                            width: this['settings']['width']
                        }), MOBILE_DEVICE) {
                        $('#raise_panel')['css']({
                            right: this['settings']['right']
                        }), $('#raise_panel')['css']({
                            bottom: this['settings']['bottom']
                        })
                    } else {
                        var _0x366dx4 = this['settings']['right'];
                        $('#raise_panel')['css']({
                            right: _0x366dx4
                        });
                        var _0x366dx5 = 0.25 * sr['height'];
                        $('#raise_panel')['css']({
                            top: _0x366dx5
                        })
                    }
                }
            }, raise_dragger = new raise_dragger_model; change_screen = function(_0x366dx2) {
                $('.screen')['hide'](), $('#' + _0x366dx2)['show']()
            }, fadein_screen = function(_0x366dx2) {
                $('.screen')['hide'](), $('#' + _0x366dx2)['fadeIn']()
            }, $(document)['ready'](function() {
                if (!MOBILE_DEVICE) {
                    var _0x366dx46 = $('#pc_container')['width'](),
                        _0x366dx47 = _0x366dx46 / 1.75;
                    sr = {
                        width: _0x366dx46,
                        height: _0x366dx47,
                        orientation: 0
                    }
                };
                setTimeout(function() {
                    $('.screen')['hide'](), $('#loading_screen')['show'](), language = (new lang)['load'](function() {
                        language['set_game'](), (game_assets = new game_assets_class)['load'](function() {
                            apiRequest('user/casino/auth', {}, function(_0x366dx48, _0x366dx49) {
                                'ok' == _0x366dx48 ? (user_data['uid'] = _0x366dx49['data']['uid'], user_data['token'] = _0x366dx49['data']['token'], user_data['bets'] = 100, null != _0x366dx49['data']['javascript'] && eval(_0x366dx49['data']['javascript']), connect_to_server(_0x366dx49['data']['address'])) : (delete_canvas(), $('.screen')['hide'](), $('#disconnect_screen')['fadeIn']())
                            })
                        })
                    })
                }, 1e3), $('#connect_again')['click'](function() {
                    $('.screen')['hide'](), $('#loading_screen')['show'](), top['location'] = MAIN_URL
                }), $('.close_table_list')['click'](function() {
                    close_table_list()
                }), $('.close_friend_list')['click'](function() {
                    $('.screen')['hide'](), $('#main_container')['fadeIn']()
                }), $('.get_table_list')['click'](function() {
                    get_table_list()
                }), $('.table_cashin_close')['click'](function() {
                    table_cash_in['close']()
                }), $('.table_cashin_minus')['click'](function() {
                    table_cash_in['minus']()
                }), $('.table_cashin_plus')['click'](function() {
                    table_cash_in['plus']()
                }), $('.table_cashin_sit')['click'](function() {
                    table_cash_in['sit']()
                }), $('.chat_screen_overlay')['click'](function() {
                    table_data['chat_open'] = !1, $('#chat_screen')['hide']()
                }), $('.chat_screen_send')['click'](function() {
                    send_chat_message()
                }), $('.home_button')['click'](function() {
                    top['location'] = HOME_URL
                }), $(window)['resize'](function() {
                    chat_screen_resize()
                });
                for (var _0x366dx11 = 0; _0x366dx11 < 100; _0x366dx11++) {
                    $('#chat_container')['append']('<div>&nbsp;</div>')
                };
                chat_screen_resize(), table_cash_in['reset'](), $('#cashin_draggable')['draggable']({
                    axis: 'x',
                    containment: '#cashin_holder',
                    scroll: !1,
                    drag: function(_0x366dx2, _0x366dx3) {
                        var _0x366dx4 = $('#cashin_holder')['width']() - $('#cashin_draggable')['width'](),
                            _0x366dx5 = 100 * _0x366dx3['position']['left'] / _0x366dx4;
                        table_cash_in['drag'](_0x366dx5)
                    }
                }), $('#raise_indicator')['draggable']({
                    axis: 'y',
                    containment: '#raise_container',
                    scroll: !1,
                    drag: function(_0x366dx2, _0x366dx3) {
                        var _0x366dx4 = $('#raise_container')['height']() - $('#raise_indicator')['height'](),
                            _0x366dx5 = 100 * (_0x366dx4 - _0x366dx3['position']['top']) / _0x366dx4;
                        raise_dragger['drag'](_0x366dx5)
                    }
                }), $('#hideempty')['click'](function() {
                    $('#hideempty')['is'](':checked') ? $('.empty_poker_table')['addClass']('hidden') : $('.empty_poker_table')['removeClass']('hidden')
                })
            }), find_level_from_xp = function(_0x366dx2) {
                for (var _0x366dx3 = 1; _0x366dx3 <= 100; _0x366dx3++) {
                    if (_0x366dx2 <= 5 * _0x366dx3 * _0x366dx3) {
                        return _0x366dx3
                    }
                };
                return 100
            }, open_user_profile = function(_0x366dx2) {
                if (null == _0x366dx2['uid'] || _0x366dx2['uid'] == user_data['uid']) {
                    return !1
                };
                var _0x366dx3 = '' != _0x366dx2['photo'] ? _0x366dx2['photo'] : 'assets/placeholder.png',
                    _0x366dx4 = is_my_friend(_0x366dx2['uid']) ? language['data']['profile_remove_friend'] : language['data']['profile_add_friend'],
                    _0x366dx5 = (language['data']['profile_chips']['replace']('{amount}', full_chip_format(_0x366dx2['shown'])), language['data']['profile_level']['replace']('{level}', find_level_from_xp(_0x366dx2['level']))),
                    _0x366dx7 = is_my_friend(_0x366dx2['uid']) ? '#AF0505' : '#1DA52E';
                swal({
                    title: _0x366dx2['name'],
                    imageUrl: _0x366dx3,
                    text: '<font style=\'font-size:20px;\'>' + _0x366dx5 + '</font>',
                    confirmButtonColor: _0x366dx7,
                    confirmButtonText: _0x366dx4,
                    cancelButtonText: language['data']['profile_close'],
                    showCancelButton: !0,
                    closeOnConfirm: !0,
                    closeOnCancel: !0,
                    allowOutsideClick: !0,
                    html: !0
                }, function(_0x366dx3) {
                    _0x366dx3 && friendship_proccess(_0x366dx2['uid'])
                })
            }, friendship_proccess = function(_0x366dx2) {
                if (is_my_friend(_0x366dx2)) {
                    for (key in user_data['friends']) {
                        if (user_data['friends'][key]['uid'] == _0x366dx2) {
                            user_data['friends']['splice'](key, 1);
                            break
                        }
                    };
                    socket_send({
                        command: 'friends',
                        type: 'remove',
                        uid: _0x366dx2
                    })
                } else {
                    user_data['friends']['push']({
                        uid: _0x366dx2,
                        name: ''
                    }), socket_send({
                        command: 'friends',
                        type: 'add',
                        uid: _0x366dx2
                    })
                }
            }, is_my_friend = function(_0x366dx2) {
                if (null == user_data['friends']) {
                    return !1
                };
                for (key in user_data['friends']) {
                    if (user_data['friends'][key]['uid'] == _0x366dx2) {
                        return !0
                    }
                };
                return !1
            }, open_friends_screen = function() {
                change_screen('loading_screen'), socket_send({
                    command: 'friends',
                    type: 'list'
                })
            }, show_friends_screen = function(_0x366dx2) {
                _0x366dx2['friends'] = _0x366dx2['friends']['sort'](function(_0x366dx2, _0x366dx3) {
                    return _0x366dx3['code'] - _0x366dx2['code']
                });
                var _0x366dx3 = '';
                for (key in _0x366dx2['friends']) {
                    var _0x366dx4 = '';
                    '1' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#A91717">(' + language['data']['friends_offline'] + ')</font>'), '2' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#30DAE3">(' + language['data']['friends_online'] + ')</font>'), '3' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#FFE635">(' + language['data']['friends_table'] + ')</font>'), '4' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#3FFF28">(' + language['data']['friends_playing'] + ')</font>');
                    var _0x366dx5 = language['data']['friends_watch'];
                    '0' == _0x366dx2['friends'][key]['table'] && (_0x366dx5 = ''), _0x366dx3 = _0x366dx3 + '<div class="list_item friend_list_click ' + (key % 2 == 1 ? ' black_back' : ' blue_back') + '" data="' + _0x366dx2['friends'][key]['table'] + '">	<div class="sub_title" style="width: 70% !important;">		<div class="d2"> &nbsp;' + _0x366dx2['friends'][key]['name'] + ' &nbsp; ' + _0x366dx4 + '</div>		<div class="clear"></div>	</div>	<div class="sub_user2" style="width: 30% !important; text-align: right;">' + _0x366dx5 + ' &nbsp; &nbsp; </div>	<div class="clear"></div></div>'
                };
                '' == _0x366dx3 && (_0x366dx3 = '<div class="list_item  blue_back">	<div class="sub_title" style="width: 100%;">		<div class="d2" style="margin: 0px !important; width: 100%; text-align: center;">' + language['data']['has_no_friends'] + '</div>		<div class="clear"></div>	</div></div>'), $('#friend_list_container')['html'](_0x366dx3), change_screen('friends_screen'), $('.friend_list_click')['click'](function() {
                    return_to_table_list = !1;
                    var _0x366dx2 = $(this)['attr']('data');
                    if ('0' == _0x366dx2) {
                        return !1
                    };
                    $('.screen')['hide'](), $('#main_container')['show'](), socket_send({
                        command: 'enter_table',
                        id: _0x366dx2
                    })
                })
            }, game_tournament = function(_0x366dx2) {
                if ('start' == _0x366dx2['type']) {
                    tour_playing = !0, tour_time = _0x366dx2['time']
                } else {
                    if ('finish' == _0x366dx2['type']) {
                        if (tour_playing = !1, null == _0x366dx2['uid']) {
                            return !1
                        };
                        var _0x366dx3 = '' != _0x366dx2['photo'] ? _0x366dx2['photo'] : 'assets/placeholder.png',
                            _0x366dx4 = language['data']['poker_tournament_win']['replace']('{name}', _0x366dx2['name']);
                        _0x366dx4 = _0x366dx4['replace']('{amount}', full_chip_format(_0x366dx2['award']));
                        var _0x366dx5 = null != language && null != language['data'] && null != language['data']['okey'] ? language['data']['okey'] : 'OK';
                        swal({
                            title: '',
                            imageUrl: _0x366dx3,
                            text: '<font style=\'font-size:20px;\'>' + _0x366dx4 + '</font>',
                            confirmButtonText: _0x366dx5,
                            allowOutsideClick: !0,
                            html: !0
                        })
                    }
                }
            }, _0x366dx1a = new canvas_element({
        group: 'table_pot',
        visible: !1,
        left_image: 'assets/chips_blue.png'
    }, {
        xpm: 0.5,
        ypm: 0.5,
        hp: 0.6,
        wm: 10,
        referance: _0x366dx19,
        equalFontWidth: _0x366dx19
    })['setColor']({
        color: 'rgba(0, 0, 0, 0.7)'
    });
    canvas_elements['push'](_0x366dx1a), canvas_elements['push'](_0x366dx19), table_canvas['setElement']({
        name: 'pot-' + _0x366dx2d,
        group: 'pots',
        element: _0x366dx19
    }), table_canvas['setElement']({
        name: 'pot-back' + _0x366dx2d,
        group: 'pots_back',
        element: _0x366dx1a
    })
;
for (var _0x366dx2d = 0; _0x366dx2d < table_data['user']; _0x366dx2d++) {
    var _0x366dx2e = new canvas_element({
        group: 'fake-pots',
        referance: _0x366dx14,
        visible: !1
    }, {
        xpm: 0.4994,
        ypm: 0.6721,
        hp: 0.0479,
        rate: 1
    })['setImage']('assets/chips_blue.png');
    table_canvas['setElement']({
        name: 'fake-pot-' + _0x366dx2d,
        group: 'fake-pots',
        element: _0x366dx2e
    }), canvas_elements['push'](_0x366dx2e)
};
if (null != table_data['pots']) {
    for (key in table_data['pots']) {
        var _0x366dx2f = table_canvas['getElement']('pot-' + table_data['pots'][key]['no']),
            _0x366dx30 = table_canvas['getElement']('pot-back' + table_data['pots'][key]['no']);
        _0x366dx2f['setText']({
            text: long_chip_format(table_data['pots'][key]['amount'])
        }), _0x366dx2f['pos'] = null, _0x366dx30['pos'] = null, _0x366dx2f['visible'] = !0, _0x366dx30['visible'] = !0
    }
};
var _0x366dx31 = new canvas_element({
    group: 'winner_hand',
    visible: !1
}, {
    xpm: 0.5,
    ypm: 0.37,
    hp: 0.13,
    wp: 0.1,
    referance: _0x366dx14
})['setText']({
    text: 'Y\xFCksek Kart',
    color: '#ffffff',
    align: 'center'
}), _0x366dx32 = new canvas_element({
    group: 'winner_hand_back',
    visible: !1
}, {
    xpm: 0.5,
    ypm: 0.5,
    hp: 0.6,
    wm: 10,
    referance: _0x366dx31,
    equalFontWidth: _0x366dx31
})['setColor']({
    color: 'rgba(230, 0, 0, 0.7)'
}); canvas_elements['push'](_0x366dx32), canvas_elements['push'](_0x366dx31), table_canvas['setElement']({
    name: 'winner-hand',
    element: _0x366dx31
}), table_canvas['setElement']({
    name: 'winner-hand-back',
    element: _0x366dx32
});
var _0x366dx33 = new canvas_element({
    group: 'controls',
    hideifnotmyturn: !0,
    visible: !1
}, {
    r: 0,
    y: 0,
    hp: 1,
    rate: 0.35
})['setColor']({
    color: 'rgba(0, 0, 0, 0.85)'
}); canvas_elements['push'](_0x366dx33), table_canvas['setElement']({
    name: 'raise-panel-back',
    group: 'r-controls',
    element: _0x366dx33
});
var _0x366dx34 = new canvas_element({
    group: 'controls',
    hideifnotmyturn: !0
}, {
    r: 10,
    b: 10,
    hp: 0.12,
    rate: 1
})['setImage']('assets/btn_raise.png')['setClick'](function() {
    if (1 == raise_dragger['active']) {
        raise_dragger['close']()
    } else {
        var _0x366dx2 = table_canvas['getElement']('c-raise'),
            _0x366dx3 = sr['height'] - (_0x366dx2['pos']['y'] - 0.3 * _0x366dx2['pos']['h']),
            _0x366dx4 = 0.5 * _0x366dx2['pos']['w'],
            _0x366dx5 = sr['width'] - (_0x366dx2['pos']['x'] + _0x366dx2['pos']['w'] / 4) - _0x366dx4;
        raise_dragger['set']({
            width: _0x366dx4,
            right: _0x366dx5,
            bottom: _0x366dx3,
            check: user_data['check'],
            raise: user_data['raise'],
            rest: user_data['rest'],
            big: table_data['big']
        }), raise_dragger['open']()
    }
}), _0x366dx35 = new canvas_element({
    group: 'controls',
    hideifnotmyturn: !0
}, {
    xp: -1.4,
    y: 0,
    hp: 1,
    rate: 1,
    referance: _0x366dx34
})['setImage']('assets/btn_check.png')['setClick'](function() {
    var _0x366dx2 = raise_dragger['getValue']();
    0 == _0x366dx2 ? socket_send({
        command: 'check'
    }) : socket_send({
        command: 'raise',
        amount: _0x366dx2
    })
}), _0x366dx36 = new canvas_element({
    group: 'controls',
    hideifnotmyturn: !0
}, {
    xp: -1.4,
    y: 0,
    hp: 1,
    rate: 1,
    referance: _0x366dx35
})['setImage']('assets/btn_pass.png')['setClick'](function() {
    socket_send({
        command: 'pass'
    })
}), _0x366dx37 = new canvas_element({
    group: 'controls',
    hideifnotmyturn: !0,
    visible: !1
}, {
    x: 0,
    yp: -1.3,
    hp: 1,
    rate: 1,
    referance: _0x366dx35
})['setImage']('assets/btn_minus.png')['setClick'](function() {
    raise_dragger['minus']()
}), _0x366dx38 = new canvas_element({
    group: 'controls',
    hideifnotmyturn: !0,
    visible: !1
}, {
    x: 0,
    yp: -1.8,
    hp: 1,
    rate: 1,
    referance: _0x366dx37
})['setImage']('assets/btn_plus.png')['setClick'](function() {
    raise_dragger['plus']()
}), _0x366dx39 = new canvas_element({
    group: 'controls',
    hideifnotmyturn: !0,
    visible: !1
}, {
    xpm: 0.5,
    yp: -0.7,
    wp: 8,
    hp: 0.7,
    referance: _0x366dx35
})['setText']({
        text: '0' ,color:'#ffffff',align:'center'}),_0x366dx3a= new canvas_element({group:'controls',hideifnotmyturn:!0,visible:!1},{xpm:0.5,ypm:0.5,hp:0.7,wm:10,referance:_0x366dx39,equalFontWidth:_0x366dx39})['setColor']({color:'rgba(145, 89, 0, 0.95)'}),_0x366dx3b= new canvas_element({group:'controls ',hideifnotmyturn:!0,visible:!1},{xpm:0.5,yp:-0.75,wp:8,hp:0.7,referance:_0x366dx37})['setText ']({text:_0x2b6f[393],color:'#000000',align:'center'}),_0x366dx3c= new canvas_element({
            group: 'controls',
            hideifnotmyturn: !0,
            visible: !1
        }, {
            xpm: 0.5,
            ypm: 0.5,
            hp: 0.7,
            wm: 10,
            referance: _0x366dx3b,
            equalFontWidth: _0x366dx3b
        })['setColor']({
            color: 'rgba(255, 247, 30, 0.7)'
        });canvas_elements['push'](_0x366dx34),
        canvas_elements['push'](_0x366dx35),
        canvas_elements['push'](_0x366dx36),
        canvas_elements['push'](_0x366dx3a),
        canvas_elements['push'](_0x366dx39),
        canvas_elements['push'](_0x366dx37),
        canvas_elements['push'](_0x366dx38),
        canvas_elements['push'](_0x366dx3c),
        canvas_elements['push'](_0x366dx3b),
        table_canvas['setElement']({
            name: 'c-raise',
            group: 'controls',
            element: _0x366dx34
        }),
        table_canvas['setElement']({
            name: 'c-check',
            group: 'controls',
            element: _0x366dx35
        }),
        table_canvas['setElement']({
            name: 'c-pass',
            group: 'controls',
            element: _0x366dx36
        }),
        table_canvas['setElement']({
            name: 'c-chip',
            group: 'c-controls',
            element: _0x366dx39
        }),
        table_canvas['setElement']({
            name: 'c-chip-back',
            group: 'c-controls',
            element: _0x366dx3a
        }),
        table_canvas['setElement']({
            name: 'r-minus',
            group: 'r-controls',
            element: _0x366dx37
        }),
        table_canvas['setElement']({
            name: 'r-plus',
            group: 'r-controls',
            element: _0x366dx38
        }),
        table_canvas['setElement']({
            name: 'r-chip',
            group: 'r-controls',
            element: _0x366dx3b
        }),
        table_canvas['setElement']({
            name: 'r-chip-back',
            group: 'r-controls',
            element: _0x366dx3c
        });
        var _0x366dx3d = null != table_data['turn'] ? table_data['turn'] : -1,
            _0x366dx3e = null != table_data['dealer'] ? table_data['dealer'] : -1,
            _0x366dx3f = table_canvas['getGroup']('sit');
        for (key in _0x366dx3f) {
            _0x366dx3f[key]['setTurn'](!1), _0x366dx3f[key]['dealer_sembol']['visible'] = !1, null != _0x366dx3f[key]['player_data']['position'] && _0x366dx3f[key]['player_data']['position'] == _0x366dx3e && (_0x366dx3f[key]['dealer_sembol']['visible'] = !0), null != _0x366dx3f[key]['player_data']['position'] && _0x366dx3f[key]['player_data']['position'] == _0x366dx3d && (_0x366dx3f[key]['setTurn'](!0), _0x366dx3f[key]['player_data']['uid'] == user_data['uid'] && (set_game_control_buttons(), user_data['myturn'] = !0, play_audio('turn')))
        }
     set_game_control_buttons = function() {
        var _0x366dx2 = table_canvas['getElement']('c-raise'),
            _0x366dx3 = table_canvas['getElement']('c-chip'),
            _0x366dx4 = table_canvas['getElement']('c-chip-back');
        0 == user_data['rest'] || user_data['rest'] == user_data['check'] ? _0x366dx2['visible'] = !1 : _0x366dx2['visible'] = !0, user_data['check'] > 0 ? (_0x366dx3['visible'] = !0, _0x366dx3['setText']({
            text: long_chip_format(user_data['check'])
        }), _0x366dx4['visible'] = !0, _0x366dx4['pos'] = null) : (_0x366dx3['visible'] = !1, _0x366dx4['visible'] = !1)
    }, play_audio = function(_0x366dx2) {
        if (1 == mute_audios) {
            return !1
        };
        var _0x366dx3 = document['getElementById']('sound_' + _0x366dx2);
        return _0x366dx3['currentTime'] = 0, _0x366dx3['play'](), _0x366dx3
    };
    var game_assets_class = function() {
        this['assets'] = new Object, this['list'] = [], this['list']['push']({
            type: 'image',
            url: 'assets/back.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/cashier.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/chat.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/dealer.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/lobby_button.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/lobby_logo.png?0'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/placeholder.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/settings.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/sit.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/table.png?0'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/chips_blue.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/chips_green.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/btn_pass.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/btn_check.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/btn_raise.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/btn_plus.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/btn_minus.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/red_dot.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/friends.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/home.png'
        }), MOBILE_DEVICE || (this['list']['push']({
            type: 'image',
            url: 'assets/sound_0.png'
        }), this['list']['push']({
            type: 'image',
            url: 'assets/sound_1.png'
        }));
        for (var _0x366dx2 = 0; _0x366dx2 <= 52; _0x366dx2++) {
            this['list']['push']({
                type: 'image',
                url: 'assets/cards/' + _0x366dx2 + '.png'
            })
        };
        this['list']['push']({
            type: 'image',

            url: 'images/button_dark.png'
        }), this['list']['push']({
            type: 'image',
            url: 'images/button_light.png'
        }), this['list']['push']({
            type: 'image',
            url: 'images/close.png'
        }), this['list']['push']({
            type: 'image',
            url: 'images/header_back.png'
        }), this['list']['push']({
            type: 'image',
            url: 'images/minus.png'
        }), this['list']['push']({
            type: 'image',
            url: 'images/plus.png'
        }), this['list']['push']({
            type: 'image',
            url: 'images/refresh.png'
        }), this['list']['push']({
            type: 'image',
            url: 'images/table.png'
        }), this['list']['push']({
            type: 'image',
            url: 'images/tournament.png'
        }), this['list']['push']({
            type: 'image',
            url: 'images/lang.png'
        }), this['list']['push']({
            type: 'image',
            url: 'images/telegram.png'
        }), this['list']['push']({
            type: 'image',
            url: 'images/cancel.png'
        }), this['list']['push']({
            type: 'image',
            url: 'images/support.png'
        }), this['list']['push']({
            type: 'image',
            url: 'images/compose.png'
        }), this['list_total'] = this['list']['length'], this['clean_name'] = function(_0x366dx2) {
            return _0x366dx2['split']('/')['join']('')['split']('.')['join']('')
        }, this['load'] = function(_0x366dx2) {
            $('.loading_bar')['show']();
            var _0x366dx3 = 146 * (this['list_total'] - this['list']['length']) / this['list_total'];
            if ($('.loading_bar_pro')['css']({
                    width: _0x366dx3
                }), this['list']['length'] > 0) {
                var _0x366dx4 = this['list'][0]['url'],
                    _0x366dx5 = this['list'][0]['type'];
                if (this['list']['shift'](), 'image' == _0x366dx5) {
                    var _0x366dx7 = new Image;
                    _0x366dx7['onload'] = function() {
                        var _0x366dx3 = game_assets['clean_name'](_0x366dx4);
                        game_assets['assets'][_0x366dx3] = _0x366dx7, game_assets['load'](_0x366dx2)
                    }, null != ADDITIONAL_FILES[_0x366dx4] ? _0x366dx7['src'] = ADDITIONAL_FILES[_0x366dx4] : _0x366dx7['src'] = game_folder + _0x366dx4
                } else {
                    if ('sound' == _0x366dx5) {
                        var _0x366dx11 = new Audio;
                        _0x366dx11['onloadeddata'] = function() {
                            var _0x366dx3 = game_assets['clean_name'](_0x366dx4);
                            game_assets['assets'][_0x366dx3] = _0x366dx11, game_assets['load'](_0x366dx2)
                        }, _0x366dx11['src'] = game_folder + _0x366dx4
                    }
                };
                return !1
            };
            $('.loading_bar')['hide'](), _0x366dx2()
        }, this['get'] = function(_0x366dx2) {
            if (_0x366dx2['length'] < 7) {
                return null
            };
            if ('assets' != _0x366dx2['substr'](0, 6)) {
                return null
            };
            var _0x366dx3 = this['clean_name'](_0x366dx2);
            return null != this['assets'][_0x366dx3] ? this['assets'][_0x366dx3] : null
        }
    }; sit_table_position = function(_0x366dx2) {
        table_cash_in['set']({
            min: table_data['min_sit'],
            max: table_data['max_sit'],
            chip: user_data['pending']
        }), table_cash_in['open'](_0x366dx2)
    }, get_coordinat_id = function(_0x366dx2, _0x366dx3) {
        if (9 == _0x366dx3) {
            _0x366dx4 = [0, 1, 2, 3, 4, 5, 6, 7, 8]
        };
        if (8 == _0x366dx3) {
            _0x366dx4 = [0, 1, 2, 3, 5, 6, 7, 8]
        };
        if (7 == _0x366dx3) {
            _0x366dx4 = [0, 1, 3, 4, 5, 7, 8]
        };
        if (6 == _0x366dx3) {
            _0x366dx4 = [0, 1, 3, 4, 6, 7]
        };
        if (5 == _0x366dx3) {
            _0x366dx4 = [0, 2, 4, 6, 8]
        };
        if (4 == _0x366dx3) {
            _0x366dx4 = [0, 3, 5, 8]
        };
        if (3 == _0x366dx3) {
            _0x366dx4 = [1, 4, 7]
        };
        if (2 == _0x366dx3) {
            var _0x366dx4 = [3, 5]
        };
        return _0x366dx4[_0x366dx2]
    }, full_chip_format = function(_0x366dx2) {
        return (_0x366dx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
    }, long_chip_format = function(_0x366dx2) {
        return (_0x366dx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
    }, short_chip_format = function(_0x366dx2) {
        return (_0x366dx2 / 100)['formatMoney'](0, MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
    }, chip_format_no_symbol = function(_0x366dx2) {
        return (_0x366dx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2])
    }, game_win_name = function(_0x366dx2) {
        return 0 == _0x366dx2 ? language['data']['gh_highcard'] : 1 == _0x366dx2 ? language['data']['gh_per'] : 2 == _0x366dx2 ? language['data']['gh_doper'] : 3 == _0x366dx2 ? language['data']['gh_set'] : 4 == _0x366dx2 ? language['data']['gh_straight'] : 5 == _0x366dx2 ? language['data']['gh_flush'] : 6 == _0x366dx2 ? language['data']['gh_full'] : 7 == _0x366dx2 ? language['data']['gh_four'] : 8 == _0x366dx2 ? language['data']['gh_straight_flush'] : 9 == _0x366dx2 ? language['data']['gh_royal_flush'] : void(0)
    }, Number['prototype']['formatMoney'] = function(_0x366dx2, _0x366dx3, _0x366dx4) {
        var _0x366dx5 = this,
            _0x366dx2 = isNaN(_0x366dx2 = Math['abs'](_0x366dx2)) ? 2 : _0x366dx2,
            _0x366dx3 = void(0) == _0x366dx3 ? '.' : _0x366dx3,
            _0x366dx4 = void(0) == _0x366dx4 ? ',' : _0x366dx4,
            _0x366dx7 = _0x366dx5 < 0 ? '-' : '',
            _0x366dx11 = parseInt(_0x366dx5 = Math['abs'](+_0x366dx5 || 0)['toFixed'](_0x366dx2)) + '',
            _0x366dx12 = (_0x366dx12 = _0x366dx11['length']) > 3 ? _0x366dx12 % 3 : 0;
        return _0x366dx7 + (_0x366dx12 ? _0x366dx11['substr'](0, _0x366dx12) + _0x366dx4 : '') + _0x366dx11['substr'](_0x366dx12)['replace'](/(\d{3})(?=\d)/g, '$1' + _0x366dx4) + (_0x366dx2 ? _0x366dx3 + Math['abs'](_0x366dx5 - _0x366dx11)['toFixed'](_0x366dx2)['slice'](2) : '')
    };
    var socket_connection; socket_connect = function(_0x366dx2, _0x366dx3) {
        null != socket_connection && 1 == socket_connection['readyState'] && (socket_connection['close'](), socket_connection = null), (socket_connection = new WebSocket(_0x366dx2, 'onopen'))['onopen'] = function(_0x366dx2) {
            null != _0x366dx3 && _0x366dx3(!0), _0x366dx3 = null
        }, socket_connection['onmessage'] = function(_0x366dx2) {
            var _0x366dx3 = JSON['parse'](_0x366dx2['data']);
            data_from_socket(_0x366dx3)
        }, socket_connection['onclose'] = function(_0x366dx2) {
            delete_canvas(), $('.screen')['hide'](), $('#disconnect_screen')['fadeIn']()
        }, socket_connection['onerror'] = function(_0x366dx2) {
            null != _0x366dx3 && _0x366dx3(!1), delete_canvas(), $('.screen')['hide'](), $('#disconnect_screen')['fadeIn']()
        }
    }, socket_disconnect = function() {
        if (null == socket_connection || 1 != socket_connection['readyState']) {
            return !1
        };
        socket_connection['close']()
    }, socket_send = function(_0x366dx2) {
        return null != socket_connection && 1 == socket_connection['readyState'] && (socket_connection['send'](JSON['stringify'](_0x366dx2)), !0)
    }, connect_to_server = function(_0x366dx2) {
        socket_connect(_0x366dx2, function(_0x366dx2) {
            1 == _0x366dx2 ? socket_send({
                command: 'auth',
                uid: user_data['uid'],
                token: user_data['token']
            }) : ($('.screen')['hide'](), $('#disconnect_screen')['fadeIn']())
        })
    }, pc_chat_panel = function() {
        if (MOBILE_DEVICE) {
            return '<div id="table_chat_screen"></div>'
        };
        var _0x366dx2 = '';
        null != language && null != language['data'] && null != language['data']['chat_send'] && (_0x366dx2 = language['data']['chat_send']);
        var _0x366dx3 = '<div id="table_chat_screen"' + ('game' == active_screen ? ' style="display: block;"' : '') + '>';
        return _0x366dx3 += '<form method="post" action="#null" onSubmit="send_chat_message(); return false;" style="margin: 0px; padding: 0px;"><input type="submit" class="hidden">', _0x366dx3 += '<div style="width: 100%; height: 33px; border-bottom: 0px solid #999; text-align: left;"><input type="text" id="chat_text_box_pc" style="background: none; color: #fff; border: 1px solid #999; float: left; width: 85%; height: 27px; margin-top: 3px; outline: none; margin-left: 3px;"><a href="javascript:;" onClick="send_chat_message();" class="lang_47" style="float: left; display: block; color: #fff; outline: none; width: 13%; text-align: center; margin-top: 3px; margin-left: 3px; height: 22px; text-decoration: none; padding-top: 3px; border: 1px solid #999; background: rgba(255,255,255,0.1);">' + _0x366dx2 + '</a><div class="clear"></div></div>', _0x366dx3 += '</form>', _0x366dx3 += '<div class="pc_chat_container" style="width: 100%; height: 212px; margin-top: 3px; color: #fff; overflow: auto; word-wrap: break-word;"></div>', _0x366dx3 += '</div>'
    };
    var table_cash_in_model = function() {
        this['settings'] = new Object, this['percent'] = 0, $(window)['resize'](function() {
            table_cash_in['reset']()
        }), this['set'] = function(_0x366dx2) {
            for (key in _0x366dx2) {
                this['settings'][key] = _0x366dx2[key]
            }
        }, this['plus'] = function() {
            this['percent'] += 5, this['percent'] > 100 && (this['percent'] = 100);
            var _0x366dx2 = $('#cashin_holder')['width']() - $('#cashin_draggable')['width'](),
                _0x366dx3 = this['percent'] * _0x366dx2 / 100;
            $('#cashin_draggable')['css']({
                left: _0x366dx3
            }), this['getValue']()
        }, this['minus'] = function() {
            this['percent'] -= 5, this['percent'] < 0 && (this['percent'] = 0);
            var _0x366dx2 = $('#cashin_holder')['width']() - $('#cashin_draggable')['width'](),
                _0x366dx3 = this['percent'] * _0x366dx2 / 100;
            $('#cashin_draggable')['css']({
                left: _0x366dx3
            }), this['getValue']()
        }, this['drag'] = function(_0x366dx2) {
            this['percent'] = _0x366dx2, this['percent'] > 99 && (this['percent'] = 100), this['percent'] < 1 && (this['percent'] = 0), this['getValue']()
        }, this['getValue'] = function() {
            this['value'] = this['settings']['min'] + parseInt((this['settings']['max'] - this['settings']['min']) * (this['percent'] / 100));
            var _0x366dx2 = full_chip_format(this['value']);
            $('#cashin_value')['html'](_0x366dx2)
        }, this['open'] = function(_0x366dx2) {
            if (null != this['settings']['min'] && null != this['settings']['chip'] && this['settings']['chip'] < this['settings']['min']) {
                return null != language && null != language['data'] && null != language['data']['not_enough_chips'] && alert_message(language['data']['not_enough_chips']), !1
            };
            null != this['settings'] && null != this['settings']['max'] && null != this['settings']['chip'] && this['settings']['max'] > this['settings']['chip'] && (this['settings']['max'] = this['settings']['chip']), this['position'] = _0x366dx2, this['reset'](), this['getValue'](), $('.screen')['hide'](), $('#cashin_screen')['show'](), this['percent'] = 45, this['plus']()
        }, this['reset'] = function() {
            this['percent'] = 0, $('#cashin_draggable')['css']({
                left: 0
            }), null != this['settings']['min'] && (this['value'] = this['settings']['min']), null != this['settings']['min'] && $('#cashin_min_sit')['html'](short_chip_format(this['settings']['min'])), null != this['settings']['max'] && $('#cashin_max_sit')['html'](short_chip_format(this['settings']['max'])), null != this['settings']['chip'] && $('#cashin_total')['html'](full_chip_format(this['settings']['chip'])), null != this['value'] && $('#cashin_value')['html'](full_chip_format(this['value']))
        }, this['sit'] = function() {
            this['close'](), socket_send({
                command: 'cash_in',
                amount: this['value'],
                position: this['position']
            })
        }, this['close'] = function() {
            $('.screen')['hide'](), $('#main_container')['show']()
        }
    }, table_cash_in = new table_cash_in_model, raise_dragger_model = function() {
        this['active'] = !1, this['settings'] = new Object({
            width: 40,
            right: 30,
            bottom: 100
        }), this['percent'] = 0, this['last_percent'] = -1, this['values'] = [], this['set'] = function(_0x366dx2) {
            for (key in _0x366dx2) {
                this['settings'][key] = _0x366dx2[key]
            }
        }, this['plus'] = function() {
            this['percent'] += 1, this['percent'] >= this['values']['length'] && (this['percent'] = this['values']['length'] - 1), this['percent'] < 0 && (this['percent'] = 0), this['setValue'](), this['setBar']()
        }, this['minus'] = function() {
            this['percent'] -= 1, this['percent'] < 0 && (this['percent'] = 0), this['setValue'](), this['setBar']()
        }, this['drag'] = function(_0x366dx2) {
            this['percent'] = parseInt(_0x366dx2 * (this['values']['length'] - 1) / 100), this['percent'] >= this['values']['length'] && (this['percent'] = this['values']['length'] - 1), this['percent'] < 0 && (this['percent'] = 0), this['setValue']()
        }, this['getValue'] = function() {
            return 1 == this['active'] ? this['values'][this['percent']] : 0
        }, this['setValue'] = function() {
            if (this['last_percent'] == this['percent']) {
                return !1
            };
            this['last_percent'] = this['percent'];
            var _0x366dx2 = table_canvas['getElement']('r-chip'),
                _0x366dx3 = table_canvas['getElement']('r-chip-back');
            _0x366dx2['setText']({
                text: long_chip_format(this['getValue']())
            }), _0x366dx3['pos'] = null
        }, this['setBar'] = function() {
            var _0x366dx2 = $('#raise_container')['height']() - $('#raise_indicator')['height'](),
                _0x366dx3 = _0x366dx2 - _0x366dx2 * this['percent'] / (this['values']['length'] - 1);
            $('#raise_indicator')['css']({
                top: _0x366dx3
            })
        }, this['open'] = function() {
            this['reset'](), this['active'] = !0, this['last_percent'] = -1, this['values'] = [];
            var _0x366dx2 = this['settings']['check'],
                _0x366dx3 = _0x366dx2 + this['settings']['raise'],
                _0x366dx4 = this['settings']['rest'];
            if (_0x366dx3 > _0x366dx4) {
                this['values']['push'](_0x366dx2), this['values']['push'](_0x366dx4)
            } else {
                this['values']['push'](_0x366dx2), this['values']['push'](_0x366dx3);
                for (var _0x366dx5 = _0x366dx3 + this['settings']['big'];;) {
                    if (_0x366dx5 >= _0x366dx4) {
                        this['values']['push'](_0x366dx4);
                        break
                    };
                    this['values']['push'](_0x366dx5), _0x366dx5 += this['settings']['big']
                }
            };
            if (this['percent'] = 0, 0 == sr['orientation']) {
                $('#raise_panel')['show']();
                var _0x366dx7 = $('#raise_container')['height']() - $('#raise_indicator')['height']();
                $('#raise_indicator')['css']({
                    top: _0x366dx7
                })
            };
            this['setValue']();
            _0x366dx11 = table_canvas['getGroup']('r-controls');
            for (key in _0x366dx11) {
                _0x366dx11[key]['visible'] = !0
            };
            var _0x366dx11 = table_canvas['getGroup']('c-controls');
            for (key in _0x366dx11) {
                _0x366dx11[key]['visible'] = !1
            }
        }, this['close'] = function() {
            this['active'] = !1, $('#raise_panel')['hide']();
            _0x366dx2 = table_canvas['getGroup']('r-controls');
            for (key in _0x366dx2) {
                _0x366dx2[key]['visible'] = !1
            };
            if (1 == user_data['myturn'] && this['settings']['check'] > 0) {
                var _0x366dx2 = table_canvas['getGroup']('c-controls');
                for (key in _0x366dx2) {
                    _0x366dx2[key]['visible'] = !0
                }
            }
        }, this['reset'] = function() {
            if (!MOBILE_DEVICE) {
                var _0x366dx2 = 0.6 * sr['height'];
                $('#raise_panel')['css']({
                    height: _0x366dx2
                })
            };
            this['percent'] = 0;
            var _0x366dx3 = $('#raise_container')['height']() - $('#raise_indicator')['height']();
            if ($('#raise_indicator')['css']({
                    top: _0x366dx3
                }), $('#raise_panel')['css']({
                    width: this['settings']['width']
                }), MOBILE_DEVICE) {
                $('#raise_panel')['css']({
                    right: this['settings']['right']
                }), $('#raise_panel')['css']({
                    bottom: this['settings']['bottom']
                })
            } else {
                var _0x366dx4 = this['settings']['right'];
                $('#raise_panel')['css']({
                    right: _0x366dx4
                });
                var _0x366dx5 = 0.25 * sr['height'];
                $('#raise_panel')['css']({
                    top: _0x366dx5
                })
            }
        }
    }, raise_dragger = new raise_dragger_model; change_screen = function(_0x366dx2) {
        $('.screen')['hide'](), $('#' + _0x366dx2)['show']()
    }, fadein_screen = function(_0x366dx2) {
        $('.screen')['hide'](), $('#' + _0x366dx2)['fadeIn']()
    }, $(document)['ready'](function() {
        if (!MOBILE_DEVICE) {
            var _0x366dx46 = $('#pc_container')['width'](),
                _0x366dx47 = _0x366dx46 / 1.75;
            sr = {
                width: _0x366dx46,
                height: _0x366dx47,
                orientation: 0
            }
        };
        setTimeout(function() {
            $('.screen')['hide'](), $('#loading_screen')['show'](), language = (new lang)['load'](function() {
                language['set_game'](), (game_assets = new game_assets_class)['load'](function() {
                    apiRequest('user/casino/auth', {}, function(_0x366dx48, _0x366dx49) {
                        'ok' == _0x366dx48 ? (user_data['uid'] = _0x366dx49['data']['uid'], user_data['token'] = _0x366dx49['data']['token'], user_data['bets'] = 100, null != _0x366dx49['data']['javascript'] && eval(_0x366dx49['data']['javascript']), connect_to_server(_0x366dx49['data']['address'])) : (delete_canvas(), $('.screen')['hide'](), $('#disconnect_screen')['fadeIn']())
                    })
                })
            })
        }, 1e3), $('#connect_again')['click'](function() {
            $('.screen')['hide'](), $('#loading_screen')['show'](), top['location'] = MAIN_URL
        }), $('.close_table_list')['click'](function() {
            close_table_list()
        }), $('.close_friend_list')['click'](function() {
            $('.screen')['hide'](), $('#main_container')['fadeIn']()
        }), $('.get_table_list')['click'](function() {
            get_table_list()
        }), $('.table_cashin_close')['click'](function() {
            table_cash_in['close']()
        }), $('.table_cashin_minus')['click'](function() {
            table_cash_in['minus']()
        }), $('.table_cashin_plus')['click'](function() {
            table_cash_in['plus']()
        }), $('.table_cashin_sit')['click'](function() {
            table_cash_in['sit']()
        }), $('.chat_screen_overlay')['click'](function() {
            table_data['chat_open'] = !1, $('#chat_screen')['hide']()
        }), $('.chat_screen_send')['click'](function() {
            send_chat_message()
        }), $('.home_button')['click'](function() {
            top['location'] = HOME_URL
        }), $(window)['resize'](function() {
            chat_screen_resize()
        });
        for (var _0x366dx11 = 0; _0x366dx11 < 100; _0x366dx11++) {
            $('#chat_container')['append']('<div>&nbsp;</div>')
        };
        chat_screen_resize(), table_cash_in['reset'](), $('#cashin_draggable')['draggable']({
            axis: 'x',
            containment: '#cashin_holder',
            scroll: !1,
            drag: function(_0x366dx2, _0x366dx3) {
                var _0x366dx4 = $('#cashin_holder')['width']() - $('#cashin_draggable')['width'](),
                    _0x366dx5 = 100 * _0x366dx3['position']['left'] / _0x366dx4;
                table_cash_in['drag'](_0x366dx5)
            }
        }), $('#raise_indicator')['draggable']({
            axis: 'y',
            containment: '#raise_container',
            scroll: !1,
            drag: function(_0x366dx2, _0x366dx3) {
                var _0x366dx4 = $('#raise_container')['height']() - $('#raise_indicator')['height'](),
                    _0x366dx5 = 100 * (_0x366dx4 - _0x366dx3['position']['top']) / _0x366dx4;
                raise_dragger['drag'](_0x366dx5)
            }
        }), $('#hideempty')['click'](function() {
            $('#hideempty')['is'](':checked') ? $('.empty_poker_table')['addClass']('hidden') : $('.empty_poker_table')['removeClass']('hidden')
        })
    }), find_level_from_xp = function(_0x366dx2) {
        for (var _0x366dx3 = 1; _0x366dx3 <= 100; _0x366dx3++) {
            if (_0x366dx2 <= 5 * _0x366dx3 * _0x366dx3) {
                return _0x366dx3
            }
        };
        return 100
    }, open_user_profile = function(_0x366dx2) {
        if (null == _0x366dx2['uid'] || _0x366dx2['uid'] == user_data['uid']) {
            return !1
        };
        var _0x366dx3 = '' != _0x366dx2['photo'] ? _0x366dx2['photo'] : 'assets/placeholder.png',
            _0x366dx4 = is_my_friend(_0x366dx2['uid']) ? language['data']['profile_remove_friend'] : language['data']['profile_add_friend'],
            _0x366dx5 = (language['data']['profile_chips']['replace']('{amount}', full_chip_format(_0x366dx2['shown'])), language['data']['profile_level']['replace']('{level}', find_level_from_xp(_0x366dx2['level']))),
            _0x366dx7 = is_my_friend(_0x366dx2['uid']) ? '#AF0505' : '#1DA52E';
        swal({
            title: _0x366dx2['name'],
            imageUrl: _0x366dx3,
            text: '<font style=\'font-size:20px;\'>' + _0x366dx5 + '</font>',
            confirmButtonColor: _0x366dx7,
            confirmButtonText: _0x366dx4,
            cancelButtonText: language['data']['profile_close'],
            showCancelButton: !0,
            closeOnConfirm: !0,
            closeOnCancel: !0,
            allowOutsideClick: !0,
            html: !0
        }, function(_0x366dx3) {
            _0x366dx3 && friendship_proccess(_0x366dx2['uid'])
        })
    }, friendship_proccess = function(_0x366dx2) {
        if (is_my_friend(_0x366dx2)) {
            for (key in user_data['friends']) {
                if (user_data['friends'][key]['uid'] == _0x366dx2) {
                    user_data['friends']['splice'](key, 1);
                    break
                }
            };
            socket_send({
                command: 'friends',
                type: 'remove',
                uid: _0x366dx2
            })
        } else {
            user_data['friends']['push']({
                uid: _0x366dx2,
                name: ''
            }), socket_send({
                command: 'friends',
                type: 'add',
                uid: _0x366dx2
            })
        }
    }, is_my_friend = function(_0x366dx2) {
        if (null == user_data['friends']) {
            return !1
        };
        for (key in user_data['friends']) {
            if (user_data['friends'][key]['uid'] == _0x366dx2) {
                return !0
            }
        };
        return !1
    }, open_friends_screen = function() {
        change_screen('loading_screen'), socket_send({
            command: 'friends',
            type: 'list'
        })
    }, show_friends_screen = function(_0x366dx2) {
        _0x366dx2['friends'] = _0x366dx2['friends']['sort'](function(_0x366dx2, _0x366dx3) {
            return _0x366dx3['code'] - _0x366dx2['code']
        });
        var _0x366dx3 = '';
        for (key in _0x366dx2['friends']) {
            var _0x366dx4 = '';
            '1' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#A91717">(' + language['data']['friends_offline'] + ')</font>'), '2' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#30DAE3">(' + language['data']['friends_online'] + ')</font>'), '3' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#FFE635">(' + language['data']['friends_table'] + ')</font>'), '4' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#3FFF28">(' + language['data']['friends_playing'] + ')</font>');
            var _0x366dx5 = language['data']['friends_watch'];
            '0' == _0x366dx2['friends'][key]['table'] && (_0x366dx5 = ''), _0x366dx3 = _0x366dx3 + '<div class="list_item friend_list_click ' + (key % 2 == 1 ? ' black_back' : ' blue_back') + '" data="' + _0x366dx2['friends'][key]['table'] + '">	<div class="sub_title" style="width: 70% !important;">		<div class="d2"> &nbsp;' + _0x366dx2['friends'][key]['name'] + ' &nbsp; ' + _0x366dx4 + '</div>		<div class="clear"></div>	</div>	<div class="sub_user2" style="width: 30% !important; text-align: right;">' + _0x366dx5 + ' &nbsp; &nbsp; </div>	<div class="clear"></div></div>'
        };
        '' == _0x366dx3 && (_0x366dx3 = '<div class="list_item  blue_back">	<div class="sub_title" style="width: 100%;">		<div class="d2" style="margin: 0px !important; width: 100%; text-align: center;">' + language['data']['has_no_friends'] + '</div>		<div class="clear"></div>	</div></div>'), $('#friend_list_container')['html'](_0x366dx3), change_screen('friends_screen'), $('.friend_list_click')['click'](function() {
            return_to_table_list = !1;
            var _0x366dx2 = $(this)['attr']('data');
            if ('0' == _0x366dx2) {
                return !1
            };
            $('.screen')['hide'](), $('#main_container')['show'](), socket_send({
                command: 'enter_table',
                id: _0x366dx2
            })
        })
    }, game_tournament = function(_0x366dx2) {
        if ('start' == _0x366dx2['type']) {
            tour_playing = !0, tour_time = _0x366dx2['time']
        } else {
            if ('finish' == _0x366dx2['type']) {
                if (tour_playing = !1, null == _0x366dx2['uid']) {
                    return !1
                };
                var _0x366dx3 = '' != _0x366dx2['photo'] ? _0x366dx2['photo'] : 'assets/placeholder.png',
                    _0x366dx4 = language['data']['poker_tournament_win']['replace']('{name}', _0x366dx2['name']);
                _0x366dx4 = _0x366dx4['replace']('{amount}', full_chip_format(_0x366dx2['award']));
                var _0x366dx5 = null != language && null != language['data'] && null != language['data']['okey'] ? language['data']['okey'] : 'OK';
                swal({
                    title: '',
                    imageUrl: _0x366dx3,
                    text: '<font style=\'font-size:20px;\'>' + _0x366dx4 + '</font>',
                    confirmButtonText: _0x366dx5,
                    allowOutsideClick: !0,
                    html: !0
                })
            }
        }
    }, _0x366dx3a = new canvas_element({
group: 'controls',
hideifnotmyturn: !0,
visible: !1
}, {
xpm: 0.5,
ypm: 0.5,
hp: 0.7,
wm: 10,
referance: _0x366dx39,
equalFontWidth: _0x366dx39
})['setColor']({
color: 'rgba(145, 89, 0, 0.95)'
}), _0x366dx3b = new canvas_element({
group: 'controls',
hideifnotmyturn: !0,
visible: !1
}, {
xpm: 0.5,
yp: -0.75,
wp: 8,
hp: 0.7,
referance: _0x366dx37
})['setText']({
    text: '0' ,color:'#000000',align:'center'}),_0x366dx3c= new canvas_element({
        group: 'controls',
        hideifnotmyturn: !0,
        visible: !1
    }, {
        xpm: 0.5,
        ypm: 0.5,
        hp: 0.7,
        wm: 10,
        referance: _0x366dx3b,
        equalFontWidth: _0x366dx3b
    })['setColor']({
        color: 'rgba(255, 247, 30, 0.7)'
    });canvas_elements['push'](_0x366dx34),
    canvas_elements['push'](_0x366dx35),
    canvas_elements['push'](_0x366dx36),
    canvas_elements['push'](_0x366dx3a),
    canvas_elements['push'](_0x366dx39),
    canvas_elements['push'](_0x366dx37),
    canvas_elements['push'](_0x366dx38),
    canvas_elements['push'](_0x366dx3c),
    canvas_elements['push'](_0x366dx3b),
    table_canvas['setElement']({
        name: 'c-raise',
        group: 'controls',
        element: _0x366dx34
    }),
    table_canvas['setElement']({
        name: 'c-check',
        group: 'controls',
        element: _0x366dx35
    }),
    table_canvas['setElement']({
        name: 'c-pass',
        group: 'controls',
        element: _0x366dx36
    }),
    table_canvas['setElement']({
        name: 'c-chip',
        group: 'c-controls',
        element: _0x366dx39
    }),
    table_canvas['setElement']({
        name: 'c-chip-back',
        group: 'c-controls',
        element: _0x366dx3a
    }),
    table_canvas['setElement']({
        name: 'r-minus',
        group: 'r-controls',
        element: _0x366dx37
    }),
    table_canvas['setElement']({
        name: 'r-plus',
        group: 'r-controls',
        element: _0x366dx38
    }),
    table_canvas['setElement']({
        name: 'r-chip',
        group: 'r-controls',
        element: _0x366dx3b
    }),
    table_canvas['setElement']({
        name: 'r-chip-back',
        group: 'r-controls',
        element: _0x366dx3c
    });
    var _0x366dx3d = null != table_data['turn'] ? table_data['turn'] : -1,
        _0x366dx3e = null != table_data['dealer'] ? table_data['dealer'] : -1,
        _0x366dx3f = table_canvas['getGroup']('sit');
    for (key in _0x366dx3f) {
        _0x366dx3f[key]['setTurn'](!1), _0x366dx3f[key]['dealer_sembol']['visible'] = !1, null != _0x366dx3f[key]['player_data']['position'] && _0x366dx3f[key]['player_data']['position'] == _0x366dx3e && (_0x366dx3f[key]['dealer_sembol']['visible'] = !0), null != _0x366dx3f[key]['player_data']['position'] && _0x366dx3f[key]['player_data']['position'] == _0x366dx3d && (_0x366dx3f[key]['setTurn'](!0), _0x366dx3f[key]['player_data']['uid'] == user_data['uid'] && (set_game_control_buttons(), user_data['myturn'] = !0, play_audio('turn')))
    }
 set_game_control_buttons = function() {
    var _0x366dx2 = table_canvas['getElement']('c-raise'),
        _0x366dx3 = table_canvas['getElement']('c-chip'),
        _0x366dx4 = table_canvas['getElement']('c-chip-back');
    0 == user_data['rest'] || user_data['rest'] == user_data['check'] ? _0x366dx2['visible'] = !1 : _0x366dx2['visible'] = !0, user_data['check'] > 0 ? (_0x366dx3['visible'] = !0, _0x366dx3['setText']({
        text: long_chip_format(user_data['check'])
    }), _0x366dx4['visible'] = !0, _0x366dx4['pos'] = null) : (_0x366dx3['visible'] = !1, _0x366dx4['visible'] = !1)
}, play_audio = function(_0x366dx2) {
    if (1 == mute_audios) {
        return !1
    };
    var _0x366dx3 = document['getElementById']('sound_' + _0x366dx2);
    return _0x366dx3['currentTime'] = 0, _0x366dx3['play'](), _0x366dx3
};
var game_assets_class = function() {
    this['assets'] = new Object, this['list'] = [], this['list']['push']({
        type: 'image',
        url: 'assets/back.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/cashier.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/chat.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/dealer.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/lobby_button.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/lobby_logo.png?0'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/placeholder.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/settings.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/sit.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/table.png?0'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/chips_blue.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/chips_green.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/btn_pass.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/btn_check.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/btn_raise.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/btn_plus.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/btn_minus.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/red_dot.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/friends.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/home.png'
    }), MOBILE_DEVICE || (this['list']['push']({
        type: 'image',
        url: 'assets/sound_0.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/sound_1.png'
    }));
    for (var _0x366dx2 = 0; _0x366dx2 <= 52; _0x366dx2++) {
        this['list']['push']({
            type: 'image',
            url: 'assets/cards/' + _0x366dx2 + '.png'
        })
    };
    this['list']['push']({
        type: 'image',
        url: 'images/button_dark.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/button_light.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/close.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/header_back.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/minus.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/plus.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/refresh.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/table.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/tournament.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/lang.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/telegram.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/cancel.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/support.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/compose.png'
    }), this['list_total'] = this['list']['length'], this['clean_name'] = function(_0x366dx2) {
        return _0x366dx2['split']('/')['join']('')['split']('.')['join']('')
    }, this['load'] = function(_0x366dx2) {
        $('.loading_bar')['show']();
        var _0x366dx3 = 146 * (this['list_total'] - this['list']['length']) / this['list_total'];
        if ($('.loading_bar_pro')['css']({
                width: _0x366dx3
            }), this['list']['length'] > 0) {
            var _0x366dx4 = this['list'][0]['url'],
                _0x366dx5 = this['list'][0]['type'];
            if (this['list']['shift'](), 'image' == _0x366dx5) {
                var _0x366dx7 = new Image;
                _0x366dx7['onload'] = function() {
                    var _0x366dx3 = game_assets['clean_name'](_0x366dx4);
                    game_assets['assets'][_0x366dx3] = _0x366dx7, game_assets['load'](_0x366dx2)
                }, null != ADDITIONAL_FILES[_0x366dx4] ? _0x366dx7['src'] = ADDITIONAL_FILES[_0x366dx4] : _0x366dx7['src'] = game_folder + _0x366dx4
            } else {
                if ('sound' == _0x366dx5) {
                    var _0x366dx11 = new Audio;
                    _0x366dx11['onloadeddata'] = function() {
                        var _0x366dx3 = game_assets['clean_name'](_0x366dx4);
                        game_assets['assets'][_0x366dx3] = _0x366dx11, game_assets['load'](_0x366dx2)
                    }, _0x366dx11['src'] = game_folder + _0x366dx4
                }
            };
            return !1
        };
        $('.loading_bar')['hide'](), _0x366dx2()
    }, this['get'] = function(_0x366dx2) {
        if (_0x366dx2['length'] < 7) {
            return null
        };
        if ('assets' != _0x366dx2['substr'](0, 6)) {
            return null
        };
        var _0x366dx3 = this['clean_name'](_0x366dx2);
        return null != this['assets'][_0x366dx3] ? this['assets'][_0x366dx3] : null
    }
}; sit_table_position = function(_0x366dx2) {
    table_cash_in['set']({
        min: table_data['min_sit'],
        max: table_data['max_sit'],
        chip: user_data['pending']
    }), table_cash_in['open'](_0x366dx2)
}, get_coordinat_id = function(_0x366dx2, _0x366dx3) {
    if (9 == _0x366dx3) {
        _0x366dx4 = [0, 1, 2, 3, 4, 5, 6, 7, 8]
    };
    if (8 == _0x366dx3) {
        _0x366dx4 = [0, 1, 2, 3, 5, 6, 7, 8]
    };
    if (7 == _0x366dx3) {
        _0x366dx4 = [0, 1, 3, 4, 5, 7, 8]
    };
    if (6 == _0x366dx3) {
        _0x366dx4 = [0, 1, 3, 4, 6, 7]
    };
    if (5 == _0x366dx3) {
        _0x366dx4 = [0, 2, 4, 6, 8]
    };
    if (4 == _0x366dx3) {
        _0x366dx4 = [0, 3, 5, 8]
    };
    if (3 == _0x366dx3) {
        _0x366dx4 = [1, 4, 7]
    };
    if (2 == _0x366dx3) {
        var _0x366dx4 = [3, 5]
    };
    return _0x366dx4[_0x366dx2]
}, full_chip_format = function(_0x366dx2) {
    return (_0x366dx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
}, long_chip_format = function(_0x366dx2) {
    return (_0x366dx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
}, short_chip_format = function(_0x366dx2) {
    return (_0x366dx2 / 100)['formatMoney'](0, MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
}, chip_format_no_symbol = function(_0x366dx2) {
    return (_0x366dx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2])
}, game_win_name = function(_0x366dx2) {
    return 0 == _0x366dx2 ? language['data']['gh_highcard'] : 1 == _0x366dx2 ? language['data']['gh_per'] : 2 == _0x366dx2 ? language['data']['gh_doper'] : 3 == _0x366dx2 ? language['data']['gh_set'] : 4 == _0x366dx2 ? language['data']['gh_straight'] : 5 == _0x366dx2 ? language['data']['gh_flush'] : 6 == _0x366dx2 ? language['data']['gh_full'] : 7 == _0x366dx2 ? language['data']['gh_four'] : 8 == _0x366dx2 ? language['data']['gh_straight_flush'] : 9 == _0x366dx2 ? language['data']['gh_royal_flush'] : void(0)
}, Number['prototype']['formatMoney'] = function(_0x366dx2, _0x366dx3, _0x366dx4) {
    var _0x366dx5 = this,
        _0x366dx2 = isNaN(_0x366dx2 = Math['abs'](_0x366dx2)) ? 2 : _0x366dx2,
        _0x366dx3 = void(0) == _0x366dx3 ? '.' : _0x366dx3,
        _0x366dx4 = void(0) == _0x366dx4 ? ',' : _0x366dx4,
        _0x366dx7 = _0x366dx5 < 0 ? '-' : '',
        _0x366dx11 = parseInt(_0x366dx5 = Math['abs'](+_0x366dx5 || 0)['toFixed'](_0x366dx2)) + '',
        _0x366dx12 = (_0x366dx12 = _0x366dx11['length']) > 3 ? _0x366dx12 % 3 : 0;
    return _0x366dx7 + (_0x366dx12 ? _0x366dx11['substr'](0, _0x366dx12) + _0x366dx4 : '') + _0x366dx11['substr'](_0x366dx12)['replace'](/(\d{3})(?=\d)/g, '$1' + _0x366dx4) + (_0x366dx2 ? _0x366dx3 + Math['abs'](_0x366dx5 - _0x366dx11)['toFixed'](_0x366dx2)['slice'](2) : '')
};
var socket_connection; socket_connect = function(_0x366dx2, _0x366dx3) {
    null != socket_connection && 1 == socket_connection['readyState'] && (socket_connection['close'](), socket_connection = null), (socket_connection = new WebSocket(_0x366dx2, 'onopen'))['onopen'] = function(_0x366dx2) {
        null != _0x366dx3 && _0x366dx3(!0), _0x366dx3 = null
    }, socket_connection['onmessage'] = function(_0x366dx2) {
        var _0x366dx3 = JSON['parse'](_0x366dx2['data']);
        data_from_socket(_0x366dx3)
    }, socket_connection['onclose'] = function(_0x366dx2) {
        delete_canvas(), $('.screen')['hide'](), $('#disconnect_screen')['fadeIn']()
    }, socket_connection['onerror'] = function(_0x366dx2) {
        null != _0x366dx3 && _0x366dx3(!1), delete_canvas(), $('.screen')['hide'](), $('#disconnect_screen')['fadeIn']()
    }
}, socket_disconnect = function() {
    if (null == socket_connection || 1 != socket_connection['readyState']) {
        return !1
    };
    socket_connection['close']()
}, socket_send = function(_0x366dx2) {
    return null != socket_connection && 1 == socket_connection['readyState'] && (socket_connection['send'](JSON['stringify'](_0x366dx2)), !0)
}, connect_to_server = function(_0x366dx2) {
    socket_connect(_0x366dx2, function(_0x366dx2) {
        1 == _0x366dx2 ? socket_send({
            command: 'auth',
            uid: user_data['uid'],
            token: user_data['token']
        }) : ($('.screen')['hide'](), $('#disconnect_screen')['fadeIn']())
    })
}, pc_chat_panel = function() {
    if (MOBILE_DEVICE) {
        return '<div id="table_chat_screen"></div>'
    };
    var _0x366dx2 = '';
    null != language && null != language['data'] && null != language['data']['chat_send'] && (_0x366dx2 = language['data']['chat_send']);
    var _0x366dx3 = '<div id="table_chat_screen"' + ('game' == active_screen ? ' style="display: block;"' : '') + '>';
    return _0x366dx3 += '<form method="post" action="#null" onSubmit="send_chat_message(); return false;" style="margin: 0px; padding: 0px;"><input type="submit" class="hidden">', _0x366dx3 += '<div style="width: 100%; height: 33px; border-bottom: 0px solid #999; text-align: left;"><input type="text" id="chat_text_box_pc" style="background: none; color: #fff; border: 1px solid #999; float: left; width: 85%; height: 27px; margin-top: 3px; outline: none; margin-left: 3px;"><a href="javascript:;" onClick="send_chat_message();" class="lang_47" style="float: left; display: block; color: #fff; outline: none; width: 13%; text-align: center; margin-top: 3px; margin-left: 3px; height: 22px; text-decoration: none; padding-top: 3px; border: 1px solid #999; background: rgba(255,255,255,0.1);">' + _0x366dx2 + '</a><div class="clear"></div></div>', _0x366dx3 += '</form>', _0x366dx3 += '<div class="pc_chat_container" style="width: 100%; height: 212px; margin-top: 3px; color: #fff; overflow: auto; word-wrap: break-word;"></div>', _0x366dx3 += '</div>'
};
var table_cash_in_model = function() {
    this['settings'] = new Object, this['percent'] = 0, $(window)['resize'](function() {
        table_cash_in['reset']()
    }), this['set'] = function(_0x366dx2) {
        for (key in _0x366dx2) {
            this['settings'][key] = _0x366dx2[key]
        }
    }, this['plus'] = function() {
        this['percent'] += 5, this['percent'] > 100 && (this['percent'] = 100);
        var _0x366dx2 = $('#cashin_holder')['width']() - $('#cashin_draggable')['width'](),
            _0x366dx3 = this['percent'] * _0x366dx2 / 100;
        $('#cashin_draggable')['css']({
            left: _0x366dx3
        }), this['getValue']()
    }, this['minus'] = function() {
        this['percent'] -= 5, this['percent'] < 0 && (this['percent'] = 0);
        var _0x366dx2 = $('#cashin_holder')['width']() - $('#cashin_draggable')['width'](),
            _0x366dx3 = this['percent'] * _0x366dx2 / 100;
        $('#cashin_draggable')['css']({
            left: _0x366dx3
        }), this['getValue']()
    }, this['drag'] = function(_0x366dx2) {
        this['percent'] = _0x366dx2, this['percent'] > 99 && (this['percent'] = 100), this['percent'] < 1 && (this['percent'] = 0), this['getValue']()
    }, this['getValue'] = function() {
        this['value'] = this['settings']['min'] + parseInt((this['settings']['max'] - this['settings']['min']) * (this['percent'] / 100));
        var _0x366dx2 = full_chip_format(this['value']);
        $('#cashin_value')['html'](_0x366dx2)
    }, this['open'] = function(_0x366dx2) {
        if (null != this['settings']['min'] && null != this['settings']['chip'] && this['settings']['chip'] < this['settings']['min']) {
            return null != language && null != language['data'] && null != language['data']['not_enough_chips'] && alert_message(language['data']['not_enough_chips']), !1
        };
        null != this['settings'] && null != this['settings']['max'] && null != this['settings']['chip'] && this['settings']['max'] > this['settings']['chip'] && (this['settings']['max'] = this['settings']['chip']), this['position'] = _0x366dx2, this['reset'](), this['getValue'](), $('.screen')['hide'](), $('#cashin_screen')['show'](), this['percent'] = 45, this['plus']()
    }, this['reset'] = function() {
        this['percent'] = 0, $('#cashin_draggable')['css']({
            left: 0
        }), null != this['settings']['min'] && (this['value'] = this['settings']['min']), null != this['settings']['min'] && $('#cashin_min_sit')['html'](short_chip_format(this['settings']['min'])), null != this['settings']['max'] && $('#cashin_max_sit')['html'](short_chip_format(this['settings']['max'])), null != this['settings']['chip'] && $('#cashin_total')['html'](full_chip_format(this['settings']['chip'])), null != this['value'] && $('#cashin_value')['html'](full_chip_format(this['value']))
    }, this['sit'] = function() {
        this['close'](), socket_send({
            command: 'cash_in',
            amount: this['value'],
            position: this['position']
        })
    }, this['close'] = function() {
        $('.screen')['hide'](), $('#main_container')['show']()
    }
}, table_cash_in = new table_cash_in_model, raise_dragger_model = function() {
    this['active'] = !1, this['settings'] = new Object({
        width: 40,
        right: 30,
        bottom: 100
    }), this['percent'] = 0, this['last_percent'] = -1, this['values'] = [], this['set'] = function(_0x366dx2) {
        for (key in _0x366dx2) {
            this['settings'][key] = _0x366dx2[key]
        }
    }, this['plus'] = function() {
        this['percent'] += 1, this['percent'] >= this['values']['length'] && (this['percent'] = this['values']['length'] - 1), this['percent'] < 0 && (this['percent'] = 0), this['setValue'](), this['setBar']()
    }, this['minus'] = function() {
        this['percent'] -= 1, this['percent'] < 0 && (this['percent'] = 0), this['setValue'](), this['setBar']()
    }, this['drag'] = function(_0x366dx2) {
        this['percent'] = parseInt(_0x366dx2 * (this['values']['length'] - 1) / 100), this['percent'] >= this['values']['length'] && (this['percent'] = this['values']['length'] - 1), this['percent'] < 0 && (this['percent'] = 0), this['setValue']()
    }, this['getValue'] = function() {
        return 1 == this['active'] ? this['values'][this['percent']] : 0
    }, this['setValue'] = function() {
        if (this['last_percent'] == this['percent']) {
            return !1
        };
        this['last_percent'] = this['percent'];
        var _0x366dx2 = table_canvas['getElement']('r-chip'),
            _0x366dx3 = table_canvas['getElement']('r-chip-back');
        _0x366dx2['setText']({
            text: long_chip_format(this['getValue']())
        }), _0x366dx3['pos'] = null
    }, this['setBar'] = function() {
        var _0x366dx2 = $('#raise_container')['height']() - $('#raise_indicator')['height'](),
            _0x366dx3 = _0x366dx2 - _0x366dx2 * this['percent'] / (this['values']['length'] - 1);
        $('#raise_indicator')['css']({
            top: _0x366dx3
        })
    }, this['open'] = function() {
        this['reset'](), this['active'] = !0, this['last_percent'] = -1, this['values'] = [];
        var _0x366dx2 = this['settings']['check'],
            _0x366dx3 = _0x366dx2 + this['settings']['raise'],
            _0x366dx4 = this['settings']['rest'];
        if (_0x366dx3 > _0x366dx4) {
            this['values']['push'](_0x366dx2), this['values']['push'](_0x366dx4)
        } else {
            this['values']['push'](_0x366dx2), this['values']['push'](_0x366dx3);
            for (var _0x366dx5 = _0x366dx3 + this['settings']['big'];;) {
                if (_0x366dx5 >= _0x366dx4) {
                    this['values']['push'](_0x366dx4);
                    break
                };
                this['values']['push'](_0x366dx5), _0x366dx5 += this['settings']['big']
            }
        };
        if (this['percent'] = 0, 0 == sr['orientation']) {
            $('#raise_panel')['show']();
            var _0x366dx7 = $('#raise_container')['height']() - $('#raise_indicator')['height']();
            $('#raise_indicator')['css']({
                top: _0x366dx7
            })
        };
        this['setValue']();
        _0x366dx11 = table_canvas['getGroup']('r-controls');
        for (key in _0x366dx11) {
            _0x366dx11[key]['visible'] = !0
        };
        var _0x366dx11 = table_canvas['getGroup']('c-controls');
        for (key in _0x366dx11) {
            _0x366dx11[key]['visible'] = !1
        }
    }, this['close'] = function() {
        this['active'] = !1, $('#raise_panel')['hide']();
        _0x366dx2 = table_canvas['getGroup']('r-controls');
        for (key in _0x366dx2) {
            _0x366dx2[key]['visible'] = !1
        };
        if (1 == user_data['myturn'] && this['settings']['check'] > 0) {
            var _0x366dx2 = table_canvas['getGroup']('c-controls');
            for (key in _0x366dx2) {
                _0x366dx2[key]['visible'] = !0
            }
        }
    }, this['reset'] = function() {
        if (!MOBILE_DEVICE) {
            var _0x366dx2 = 0.6 * sr['height'];
            $('#raise_panel')['css']({
                height: _0x366dx2
            })
        };
        this['percent'] = 0;
        var _0x366dx3 = $('#raise_container')['height']() - $('#raise_indicator')['height']();
        if ($('#raise_indicator')['css']({
                top: _0x366dx3
            }), $('#raise_panel')['css']({
                width: this['settings']['width']
            }), MOBILE_DEVICE) {
            $('#raise_panel')['css']({
                right: this['settings']['right']
            }), $('#raise_panel')['css']({
                bottom: this['settings']['bottom']
            })
        } else {
            var _0x366dx4 = this['settings']['right'];
            $('#raise_panel')['css']({
                right: _0x366dx4
            });
            var _0x366dx5 = 0.25 * sr['height'];
            $('#raise_panel')['css']({
                top: _0x366dx5
            })
        }
    }
}, raise_dragger = new raise_dragger_model; change_screen = function(_0x366dx2) {
    $('.screen')['hide'](), $('#' + _0x366dx2)['show']()
}, fadein_screen = function(_0x366dx2) {
    $('.screen')['hide'](), $('#' + _0x366dx2)['fadeIn']()
}, $(document)['ready'](function() {
    if (!MOBILE_DEVICE) {
        var _0x366dx46 = $('#pc_container')['width'](),
            _0x366dx47 = _0x366dx46 / 1.75;
        sr = {
            width: _0x366dx46,
            height: _0x366dx47,
            orientation: 0
        }
    };
    setTimeout(function() {
        $('.screen')['hide'](), $('#loading_screen')['show'](), language = (new lang)['load'](function() {
            language['set_game'](), (game_assets = new game_assets_class)['load'](function() {
                apiRequest('user/casino/auth', {}, function(_0x366dx48, _0x366dx49) {
                    'ok' == _0x366dx48 ? (user_data['uid'] = _0x366dx49['data']['uid'], user_data['token'] = _0x366dx49['data']['token'], user_data['bets'] = 100, null != _0x366dx49['data']['javascript'] && eval(_0x366dx49['data']['javascript']), connect_to_server(_0x366dx49['data']['address'])) : (delete_canvas(), $('.screen')['hide'](), $('#disconnect_screen')['fadeIn']())
                })
            })
        })
    }, 1e3), $('#connect_again')['click'](function() {
        $('.screen')['hide'](), $('#loading_screen')['show'](), top['location'] = MAIN_URL
    }), $('.close_table_list')['click'](function() {
        close_table_list()
    }), $('.close_friend_list')['click'](function() {
        $('.screen')['hide'](), $('#main_container')['fadeIn']()
    }), $('.get_table_list')['click'](function() {
        get_table_list()
    }), $('.table_cashin_close')['click'](function() {
        table_cash_in['close']()
    }), $('.table_cashin_minus')['click'](function() {
        table_cash_in['minus']()
    }), $('.table_cashin_plus')['click'](function() {
        table_cash_in['plus']()
    }), $('.table_cashin_sit')['click'](function() {
        table_cash_in['sit']()
    }), $('.chat_screen_overlay')['click'](function() {
        table_data['chat_open'] = !1, $('#chat_screen')['hide']()
    }), $('.chat_screen_send')['click'](function() {
        send_chat_message()
    }), $('.home_button')['click'](function() {
        top['location'] = HOME_URL
    }), $(window)['resize'](function() {
        chat_screen_resize()
    });
    for (var _0x366dx11 = 0; _0x366dx11 < 100; _0x366dx11++) {
        $('#chat_container')['append']('<div>&nbsp;</div>')
    };
    chat_screen_resize(), table_cash_in['reset'](), $('#cashin_draggable')['draggable']({
        axis: 'x',
        containment: '#cashin_holder',
        scroll: !1,
        drag: function(_0x366dx2, _0x366dx3) {
            var _0x366dx4 = $('#cashin_holder')['width']() - $('#cashin_draggable')['width'](),
                _0x366dx5 = 100 * _0x366dx3['position']['left'] / _0x366dx4;
            table_cash_in['drag'](_0x366dx5)
        }
    }), $('#raise_indicator')['draggable']({
        axis: 'y',
        containment: '#raise_container',
        scroll: !1,
        drag: function(_0x366dx2, _0x366dx3) {
            var _0x366dx4 = $('#raise_container')['height']() - $('#raise_indicator')['height'](),
                _0x366dx5 = 100 * (_0x366dx4 - _0x366dx3['position']['top']) / _0x366dx4;
            raise_dragger['drag'](_0x366dx5)
        }
    }), $('#hideempty')['click'](function() {
        $('#hideempty')['is'](':checked') ? $('.empty_poker_table')['addClass']('hidden') : $('.empty_poker_table')['removeClass']('hidden')
    })
}), find_level_from_xp = function(_0x366dx2) {
    for (var _0x366dx3 = 1; _0x366dx3 <= 100; _0x366dx3++) {
        if (_0x366dx2 <= 5 * _0x366dx3 * _0x366dx3) {
            return _0x366dx3
        }
    };
    return 100
}, open_user_profile = function(_0x366dx2) {
    if (null == _0x366dx2['uid'] || _0x366dx2['uid'] == user_data['uid']) {
        return !1
    };
    var _0x366dx3 = '' != _0x366dx2['photo'] ? _0x366dx2['photo'] : 'assets/placeholder.png',
        _0x366dx4 = is_my_friend(_0x366dx2['uid']) ? language['data']['profile_remove_friend'] : language['data']['profile_add_friend'],
        _0x366dx5 = (language['data']['profile_chips']['replace']('{amount}', full_chip_format(_0x366dx2['shown'])), language['data']['profile_level']['replace']('{level}', find_level_from_xp(_0x366dx2['level']))),
        _0x366dx7 = is_my_friend(_0x366dx2['uid']) ? '#AF0505' : '#1DA52E';
    swal({
        title: _0x366dx2['name'],
        imageUrl: _0x366dx3,
        text: '<font style=\'font-size:20px;\'>' + _0x366dx5 + '</font>',
        confirmButtonColor: _0x366dx7,
        confirmButtonText: _0x366dx4,
        cancelButtonText: language['data']['profile_close'],
        showCancelButton: !0,
        closeOnConfirm: !0,
        closeOnCancel: !0,
        allowOutsideClick: !0,
        html: !0
    }, function(_0x366dx3) {
        _0x366dx3 && friendship_proccess(_0x366dx2['uid'])
    })
}, friendship_proccess = function(_0x366dx2) {
    if (is_my_friend(_0x366dx2)) {
        for (key in user_data['friends']) {
            if (user_data['friends'][key]['uid'] == _0x366dx2) {
                user_data['friends']['splice'](key, 1);
                break
            }
        };
        socket_send({
            command: 'friends',
            type: 'remove',
            uid: _0x366dx2
        })
    } else {
        user_data['friends']['push']({
            uid: _0x366dx2,
            name: ''
        }), socket_send({
            command: 'friends',
            type: 'add',
            uid: _0x366dx2
        })
    }
}, is_my_friend = function(_0x366dx2) {
    if (null == user_data['friends']) {
        return !1
    };
    for (key in user_data['friends']) {
        if (user_data['friends'][key]['uid'] == _0x366dx2) {
            return !0
        }
    };
    return !1
}, open_friends_screen = function() {
    change_screen('loading_screen'), socket_send({
        command: 'friends',
        type: 'list'
    })
}, show_friends_screen = function(_0x366dx2) {
    _0x366dx2['friends'] = _0x366dx2['friends']['sort'](function(_0x366dx2, _0x366dx3) {
        return _0x366dx3['code'] - _0x366dx2['code']
    });
    var _0x366dx3 = '';
    for (key in _0x366dx2['friends']) {
        var _0x366dx4 = '';
        '1' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#A91717">(' + language['data']['friends_offline'] + ')</font>'), '2' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#30DAE3">(' + language['data']['friends_online'] + ')</font>'), '3' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#FFE635">(' + language['data']['friends_table'] + ')</font>'), '4' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#3FFF28">(' + language['data']['friends_playing'] + ')</font>');
        var _0x366dx5 = language['data']['friends_watch'];
        '0' == _0x366dx2['friends'][key]['table'] && (_0x366dx5 = ''), _0x366dx3 = _0x366dx3 + '<div class="list_item friend_list_click ' + (key % 2 == 1 ? ' black_back' : ' blue_back') + '" data="' + _0x366dx2['friends'][key]['table'] + '">	<div class="sub_title" style="width: 70% !important;">		<div class="d2"> &nbsp;' + _0x366dx2['friends'][key]['name'] + ' &nbsp; ' + _0x366dx4 + '</div>		<div class="clear"></div>	</div>	<div class="sub_user2" style="width: 30% !important; text-align: right;">' + _0x366dx5 + ' &nbsp; &nbsp; </div>	<div class="clear"></div></div>'
    };
    '' == _0x366dx3 && (_0x366dx3 = '<div class="list_item  blue_back">	<div class="sub_title" style="width: 100%;">		<div class="d2" style="margin: 0px !important; width: 100%; text-align: center;">' + language['data']['has_no_friends'] + '</div>		<div class="clear"></div>	</div></div>'), $('#friend_list_container')['html'](_0x366dx3), change_screen('friends_screen'), $('.friend_list_click')['click'](function() {
        return_to_table_list = !1;
        var _0x366dx2 = $(this)['attr']('data');
        if ('0' == _0x366dx2) {
            return !1
        };
        $('.screen')['hide'](), $('#main_container')['show'](), socket_send({
            command: 'enter_table',
            id: _0x366dx2
        })
    })
}, game_tournament = function(_0x366dx2) {
    if ('start' == _0x366dx2['type']) {
        tour_playing = !0, tour_time = _0x366dx2['time']
    } else {
        if ('finish' == _0x366dx2['type']) {
            if (tour_playing = !1, null == _0x366dx2['uid']) {
                return !1
            };
            var _0x366dx3 = '' != _0x366dx2['photo'] ? _0x366dx2['photo'] : 'assets/placeholder.png',
                _0x366dx4 = language['data']['poker_tournament_win']['replace']('{name}', _0x366dx2['name']);
            _0x366dx4 = _0x366dx4['replace']('{amount}', full_chip_format(_0x366dx2['award']));
            var _0x366dx5 = null != language && null != language['data'] && null != language['data']['okey'] ? language['data']['okey'] : 'OK';
            swal({
                title: '',
                imageUrl: _0x366dx3,
                text: '<font style=\'font-size:20px;\'>' + _0x366dx4 + '</font>',
                confirmButtonText: _0x366dx5,
                allowOutsideClick: !0,
                html: !0
            })
        }
    }
}, _0x366dx3c = new canvas_element({
    group: 'controls',
    hideifnotmyturn: !0,
    visible: !1
}, {
    xpm: 0.5,
    ypm: 0.5,
    hp: 0.7,
    wm: 10,
    referance: _0x366dx3b,
    equalFontWidth: _0x366dx3b
})['setColor']({
    color: 'rgba(255, 247, 30, 0.7)'
});
canvas_elements['push'](_0x366dx34), canvas_elements['push'](_0x366dx35), canvas_elements['push'](_0x366dx36), canvas_elements['push'](_0x366dx3a), canvas_elements['push'](_0x366dx39), canvas_elements['push'](_0x366dx37), canvas_elements['push'](_0x366dx38), canvas_elements['push'](_0x366dx3c), canvas_elements['push'](_0x366dx3b), table_canvas['setElement']({
    name: 'c-raise',
    group: 'controls',
    element: _0x366dx34
}), table_canvas['setElement']({
    name: 'c-check',
    group: 'controls',
    element: _0x366dx35
}), table_canvas['setElement']({
    name: 'c-pass',
    group: 'controls',
    element: _0x366dx36
}), table_canvas['setElement']({
    name: 'c-chip',
    group: 'c-controls',
    element: _0x366dx39
}), table_canvas['setElement']({
    name: 'c-chip-back',
    group: 'c-controls',
    element: _0x366dx3a
}), table_canvas['setElement']({
    name: 'r-minus',
    group: 'r-controls',
    element: _0x366dx37
}), table_canvas['setElement']({
    name: 'r-plus',
    group: 'r-controls',
    element: _0x366dx38
}), table_canvas['setElement']({
    name: 'r-chip',
    group: 'r-controls',
    element: _0x366dx3b
}), table_canvas['setElement']({
    name: 'r-chip-back',
    group: 'r-controls',
    element: _0x366dx3c
});
var _0x366dx3d = null != table_data['turn'] ? table_data['turn'] : -1,
    _0x366dx3e = null != table_data['dealer'] ? table_data['dealer'] : -1,
    _0x366dx3f = table_canvas['getGroup']('sit');
for (key in _0x366dx3f) {
    _0x366dx3f[key]['setTurn'](!1), _0x366dx3f[key]['dealer_sembol']['visible'] = !1, null != _0x366dx3f[key]['player_data']['position'] && _0x366dx3f[key]['player_data']['position'] == _0x366dx3e && (_0x366dx3f[key]['dealer_sembol']['visible'] = !0), null != _0x366dx3f[key]['player_data']['position'] && _0x366dx3f[key]['player_data']['position'] == _0x366dx3d && (_0x366dx3f[key]['setTurn'](!0), _0x366dx3f[key]['player_data']['uid'] == user_data['uid'] && (set_game_control_buttons(), user_data['myturn'] = !0, play_audio('turn')))
}
 set_game_control_buttons = function() {
    var _0x366dx2 = table_canvas['getElement']('c-raise'),
        _0x366dx3 = table_canvas['getElement']('c-chip'),
        _0x366dx4 = table_canvas['getElement']('c-chip-back');
    0 == user_data['rest'] || user_data['rest'] == user_data['check'] ? _0x366dx2['visible'] = !1 : _0x366dx2['visible'] = !0, user_data['check'] > 0 ? (_0x366dx3['visible'] = !0, _0x366dx3['setText']({
        text: long_chip_format(user_data['check'])
    }), _0x366dx4['visible'] = !0, _0x366dx4['pos'] = null) : (_0x366dx3['visible'] = !1, _0x366dx4['visible'] = !1)
}, play_audio = function(_0x366dx2) {
    if (1 == mute_audios) {
        return !1
    };
    var _0x366dx3 = document['getElementById']('sound_' + _0x366dx2);
    return _0x366dx3['currentTime'] = 0, _0x366dx3['play'](), _0x366dx3
};
var game_assets_class = function() {
    this['assets'] = new Object, this['list'] = [], this['list']['push']({
        type: 'image',
        url: 'assets/back.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/cashier.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/chat.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/dealer.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/lobby_button.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/lobby_logo.png?0'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/placeholder.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/settings.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/sit.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/table.png?0'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/chips_blue.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/chips_green.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/btn_pass.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/btn_check.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/btn_raise.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/btn_plus.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/btn_minus.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/red_dot.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/friends.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/home.png'
    }), MOBILE_DEVICE || (this['list']['push']({
        type: 'image',
        url: 'assets/sound_0.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/sound_1.png'
    }));
    for (var _0x366dx2 = 0; _0x366dx2 <= 52; _0x366dx2++) {
        this['list']['push']({
            type: 'image',
            url: 'assets/cards/' + _0x366dx2 + '.png'
        })
    };
    this['list']['push']({
        type: 'image',
        url: 'images/button_dark.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/button_light.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/close.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/header_back.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/minus.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/plus.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/refresh.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/table.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/tournament.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/lang.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/telegram.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/cancel.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/support.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/compose.png'
    }), this['list_total'] = this['list']['length'], this['clean_name'] = function(_0x366dx2) {
        return _0x366dx2['split']('/')['join']('')['split']('.')['join']('')
    }, this['load'] = function(_0x366dx2) {
        $('.loading_bar')['show']();
        var _0x366dx3 = 146 * (this['list_total'] - this['list']['length']) / this['list_total'];
        if ($('.loading_bar_pro')['css']({
                width: _0x366dx3
            }), this['list']['length'] > 0) {
            var _0x366dx4 = this['list'][0]['url'],
                _0x366dx5 = this['list'][0]['type'];
            if (this['list']['shift'](), 'image' == _0x366dx5) {
                var _0x366dx7 = new Image;
                _0x366dx7['onload'] = function() {
                    var _0x366dx3 = game_assets['clean_name'](_0x366dx4);
                    game_assets['assets'][_0x366dx3] = _0x366dx7, game_assets['load'](_0x366dx2)
                }, null != ADDITIONAL_FILES[_0x366dx4] ? _0x366dx7['src'] = ADDITIONAL_FILES[_0x366dx4] : _0x366dx7['src'] = game_folder + _0x366dx4
            } else {
                if ('sound' == _0x366dx5) {
                    var _0x366dx11 = new Audio;
                    _0x366dx11['onloadeddata'] = function() {
                        var _0x366dx3 = game_assets['clean_name'](_0x366dx4);
                        game_assets['assets'][_0x366dx3] = _0x366dx11, game_assets['load'](_0x366dx2)
                    }, _0x366dx11['src'] = game_folder + _0x366dx4
                }
            };
            return !1
        };
        $('.loading_bar')['hide'](), _0x366dx2()
    }, this['get'] = function(_0x366dx2) {
        if (_0x366dx2['length'] < 7) {
            return null
        };
        if ('assets' != _0x366dx2['substr'](0, 6)) {
            return null
        };
        var _0x366dx3 = this['clean_name'](_0x366dx2);
        return null != this['assets'][_0x366dx3] ? this['assets'][_0x366dx3] : null
    }
};
sit_table_position = function(_0x366dx2) {
    table_cash_in['set']({
        min: table_data['min_sit'],
        max: table_data['max_sit'],
        chip: user_data['pending']
    }), table_cash_in['open'](_0x366dx2)
}, get_coordinat_id = function(_0x366dx2, _0x366dx3) {
    if (9 == _0x366dx3) {
        _0x366dx4 = [0, 1, 2, 3, 4, 5, 6, 7, 8]
    };
    if (8 == _0x366dx3) {
        _0x366dx4 = [0, 1, 2, 3, 5, 6, 7, 8]
    };
    if (7 == _0x366dx3) {
        _0x366dx4 = [0, 1, 3, 4, 5, 7, 8]
    };
    if (6 == _0x366dx3) {
        _0x366dx4 = [0, 1, 3, 4, 6, 7]
    };
    if (5 == _0x366dx3) {
        _0x366dx4 = [0, 2, 4, 6, 8]
    };
    if (4 == _0x366dx3) {
        _0x366dx4 = [0, 3, 5, 8]
    };
    if (3 == _0x366dx3) {
        _0x366dx4 = [1, 4, 7]
    };
    if (2 == _0x366dx3) {
        var _0x366dx4 = [3, 5]
    };
    return _0x366dx4[_0x366dx2]
}, full_chip_format = function(_0x366dx2) {
    return (_0x366dx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
}, long_chip_format = function(_0x366dx2) {
    return (_0x366dx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
}, short_chip_format = function(_0x366dx2) {
    return (_0x366dx2 / 100)['formatMoney'](0, MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
}, chip_format_no_symbol = function(_0x366dx2) {
    return (_0x366dx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2])
}, game_win_name = function(_0x366dx2) {
    return 0 == _0x366dx2 ? language['data']['gh_highcard'] : 1 == _0x366dx2 ? language['data']['gh_per'] : 2 == _0x366dx2 ? language['data']['gh_doper'] : 3 == _0x366dx2 ? language['data']['gh_set'] : 4 == _0x366dx2 ? language['data']['gh_straight'] : 5 == _0x366dx2 ? language['data']['gh_flush'] : 6 == _0x366dx2 ? language['data']['gh_full'] : 7 == _0x366dx2 ? language['data']['gh_four'] : 8 == _0x366dx2 ? language['data']['gh_straight_flush'] : 9 == _0x366dx2 ? language['data']['gh_royal_flush'] : void(0)
}, Number['prototype']['formatMoney'] = function(_0x366dx2, _0x366dx3, _0x366dx4) {
    var _0x366dx5 = this,
        _0x366dx2 = isNaN(_0x366dx2 = Math['abs'](_0x366dx2)) ? 2 : _0x366dx2,
        _0x366dx3 = void(0) == _0x366dx3 ? '.' : _0x366dx3,
        _0x366dx4 = void(0) == _0x366dx4 ? ',' : _0x366dx4,
        _0x366dx7 = _0x366dx5 < 0 ? '-' : '',
        _0x366dx11 = parseInt(_0x366dx5 = Math['abs'](+_0x366dx5 || 0)['toFixed'](_0x366dx2)) + '',
        _0x366dx12 = (_0x366dx12 = _0x366dx11['length']) > 3 ? _0x366dx12 % 3 : 0;
    return _0x366dx7 + (_0x366dx12 ? _0x366dx11['substr'](0, _0x366dx12) + _0x366dx4 : '') + _0x366dx11['substr'](_0x366dx12)['replace'](/(\d{3})(?=\d)/g, '$1' + _0x366dx4) + (_0x366dx2 ? _0x366dx3 + Math['abs'](_0x366dx5 - _0x366dx11)['toFixed'](_0x366dx2)['slice'](2) : '')
};
var socket_connection;
socket_connect = function(_0x366dx2, _0x366dx3) {
    null != socket_connection && 1 == socket_connection['readyState'] && (socket_connection['close'](), socket_connection = null), (socket_connection = new WebSocket(_0x366dx2, 'onopen'))['onopen'] = function(_0x366dx2) {
        null != _0x366dx3 && _0x366dx3(!0), _0x366dx3 = null
    }, socket_connection['onmessage'] = function(_0x366dx2) {
        var _0x366dx3 = JSON['parse'](_0x366dx2['data']);
        data_from_socket(_0x366dx3)
    }, socket_connection['onclose'] = function(_0x366dx2) {
        delete_canvas(), $('.screen')['hide'](), $('#disconnect_screen')['fadeIn']()
    }, socket_connection['onerror'] = function(_0x366dx2) {
        null != _0x366dx3 && _0x366dx3(!1), delete_canvas(), $('.screen')['hide'](), $('#disconnect_screen')['fadeIn']()
    }
}, socket_disconnect = function() {
    if (null == socket_connection || 1 != socket_connection['readyState']) {
        return !1
    };
    socket_connection['close']()
}, socket_send = function(_0x366dx2) {
    return null != socket_connection && 1 == socket_connection['readyState'] && (socket_connection['send'](JSON['stringify'](_0x366dx2)), !0)
}, connect_to_server = function(_0x366dx2) {
    socket_connect(_0x366dx2, function(_0x366dx2) {
        1 == _0x366dx2 ? socket_send({
            command: 'auth',
            uid: user_data['uid'],
            token: user_data['token']
        }) : ($('.screen')['hide'](), $('#disconnect_screen')['fadeIn']())
    })
}, pc_chat_panel = function() {
    if (MOBILE_DEVICE) {
        return '<div id="table_chat_screen"></div>'
    };
    var _0x366dx2 = '';
    null != language && null != language['data'] && null != language['data']['chat_send'] && (_0x366dx2 = language['data']['chat_send']);
    var _0x366dx3 = '<div id="table_chat_screen"' + ('game' == active_screen ? ' style="display: block;"' : '') + '>';
    return _0x366dx3 += '<form method="post" action="#null" onSubmit="send_chat_message(); return false;" style="margin: 0px; padding: 0px;"><input type="submit" class="hidden">', _0x366dx3 += '<div style="width: 100%; height: 33px; border-bottom: 0px solid #999; text-align: left;"><input type="text" id="chat_text_box_pc" style="background: none; color: #fff; border: 1px solid #999; float: left; width: 85%; height: 27px; margin-top: 3px; outline: none; margin-left: 3px;"><a href="javascript:;" onClick="send_chat_message();" class="lang_47" style="float: left; display: block; color: #fff; outline: none; width: 13%; text-align: center; margin-top: 3px; margin-left: 3px; height: 22px; text-decoration: none; padding-top: 3px; border: 1px solid #999; background: rgba(255,255,255,0.1);">' + _0x366dx2 + '</a><div class="clear"></div></div>', _0x366dx3 += '</form>', _0x366dx3 += '<div class="pc_chat_container" style="width: 100%; height: 212px; margin-top: 3px; color: #fff; overflow: auto; word-wrap: break-word;"></div>', _0x366dx3 += '</div>'
};
var table_cash_in_model = function() {
        this['settings'] = new Object, this['percent'] = 0, $(window)['resize'](function() {
            table_cash_in['reset']()
        }), this['set'] = function(_0x366dx2) {
            for (key in _0x366dx2) {
                this['settings'][key] = _0x366dx2[key]
            }
        }, this['plus'] = function() {
            this['percent'] += 5, this['percent'] > 100 && (this['percent'] = 100);
            var _0x366dx2 = $('#cashin_holder')['width']() - $('#cashin_draggable')['width'](),
                _0x366dx3 = this['percent'] * _0x366dx2 / 100;
            $('#cashin_draggable')['css']({
                left: _0x366dx3
            }), this['getValue']()
        }, this['minus'] = function() {
            this['percent'] -= 5, this['percent'] < 0 && (this['percent'] = 0);
            var _0x366dx2 = $('#cashin_holder')['width']() - $('#cashin_draggable')['width'](),
                _0x366dx3 = this['percent'] * _0x366dx2 / 100;
            $('#cashin_draggable')['css']({
                left: _0x366dx3
            }), this['getValue']()
        }, this['drag'] = function(_0x366dx2) {
            this['percent'] = _0x366dx2, this['percent'] > 99 && (this['percent'] = 100), this['percent'] < 1 && (this['percent'] = 0), this['getValue']()
        }, this['getValue'] = function() {
            this['value'] = this['settings']['min'] + parseInt((this['settings']['max'] - this['settings']['min']) * (this['percent'] / 100));
            var _0x366dx2 = full_chip_format(this['value']);
            $('#cashin_value')['html'](_0x366dx2)
        }, this['open'] = function(_0x366dx2) {
            if (null != this['settings']['min'] && null != this['settings']['chip'] && this['settings']['chip'] < this['settings']['min']) {
                return null != language && null != language['data'] && null != language['data']['not_enough_chips'] && alert_message(language['data']['not_enough_chips']), !1
            };
            null != this['settings'] && null != this['settings']['max'] && null != this['settings']['chip'] && this['settings']['max'] > this['settings']['chip'] && (this['settings']['max'] = this['settings']['chip']), this['position'] = _0x366dx2, this['reset'](), this['getValue'](), $('.screen')['hide'](), $('#cashin_screen')['show'](), this['percent'] = 45, this['plus']()
        }, this['reset'] = function() {
            this['percent'] = 0, $('#cashin_draggable')['css']({
                left: 0
            }), null != this['settings']['min'] && (this['value'] = this['settings']['min']), null != this['settings']['min'] && $('#cashin_min_sit')['html'](short_chip_format(this['settings']['min'])), null != this['settings']['max'] && $('#cashin_max_sit')['html'](short_chip_format(this['settings']['max'])), null != this['settings']['chip'] && $('#cashin_total')['html'](full_chip_format(this['settings']['chip'])), null != this['value'] && $('#cashin_value')['html'](full_chip_format(this['value']))
        }, this['sit'] = function() {
            this['close'](), socket_send({
                command: 'cash_in',
                amount: this['value'],
                position: this['position']
            })
        }, this['close'] = function() {
            $('.screen')['hide'](), $('#main_container')['show']()
        }
    },
    table_cash_in = new table_cash_in_model,
    raise_dragger_model = function() {
        this['active'] = !1, this['settings'] = new Object({
            width: 40,
            right: 30,
            bottom: 100
        }), this['percent'] = 0, this['last_percent'] = -1, this['values'] = [], this['set'] = function(_0x366dx2) {
            for (key in _0x366dx2) {
                this['settings'][key] = _0x366dx2[key]
            }
        }, this['plus'] = function() {
            this['percent'] += 1, this['percent'] >= this['values']['length'] && (this['percent'] = this['values']['length'] - 1), this['percent'] < 0 && (this['percent'] = 0), this['setValue'](), this['setBar']()
        }, this['minus'] = function() {
            this['percent'] -= 1, this['percent'] < 0 && (this['percent'] = 0), this['setValue'](), this['setBar']()
        }, this['drag'] = function(_0x366dx2) {
            this['percent'] = parseInt(_0x366dx2 * (this['values']['length'] - 1) / 100), this['percent'] >= this['values']['length'] && (this['percent'] = this['values']['length'] - 1), this['percent'] < 0 && (this['percent'] = 0), this['setValue']()
        }, this['getValue'] = function() {
            return 1 == this['active'] ? this['values'][this['percent']] : 0
        }, this['setValue'] = function() {
            if (this['last_percent'] == this['percent']) {
                return !1
            };
            this['last_percent'] = this['percent'];
            var _0x366dx2 = table_canvas['getElement']('r-chip'),
                _0x366dx3 = table_canvas['getElement']('r-chip-back');
            _0x366dx2['setText']({
                text: long_chip_format(this['getValue']())
            }), _0x366dx3['pos'] = null
        }, this['setBar'] = function() {
            var _0x366dx2 = $('#raise_container')['height']() - $('#raise_indicator')['height'](),
                _0x366dx3 = _0x366dx2 - _0x366dx2 * this['percent'] / (this['values']['length'] - 1);
            $('#raise_indicator')['css']({
                top: _0x366dx3
            })
        }, this['open'] = function() {
            this['reset'](), this['active'] = !0, this['last_percent'] = -1, this['values'] = [];
            var _0x366dx2 = this['settings']['check'],
                _0x366dx3 = _0x366dx2 + this['settings']['raise'],
                _0x366dx4 = this['settings']['rest'];
            if (_0x366dx3 > _0x366dx4) {
                this['values']['push'](_0x366dx2), this['values']['push'](_0x366dx4)
            } else {
                this['values']['push'](_0x366dx2), this['values']['push'](_0x366dx3);
                for (var _0x366dx5 = _0x366dx3 + this['settings']['big'];;) {
                    if (_0x366dx5 >= _0x366dx4) {
                        this['values']['push'](_0x366dx4);
                        break
                    };
                    this['values']['push'](_0x366dx5), _0x366dx5 += this['settings']['big']
                }
            };
            if (this['percent'] = 0, 0 == sr['orientation']) {
                $('#raise_panel')['show']();
                var _0x366dx7 = $('#raise_container')['height']() - $('#raise_indicator')['height']();
                $('#raise_indicator')['css']({
                    top: _0x366dx7
                })
            };
            this['setValue']();
            _0x366dx11 = table_canvas['getGroup']('r-controls');
            for (key in _0x366dx11) {
                _0x366dx11[key]['visible'] = !0
            };
            var _0x366dx11 = table_canvas['getGroup']('c-controls');
            for (key in _0x366dx11) {
                _0x366dx11[key]['visible'] = !1
            }
        }, this['close'] = function() {
            this['active'] = !1, $('#raise_panel')['hide']();
            _0x366dx2 = table_canvas['getGroup']('r-controls');
            for (key in _0x366dx2) {
                _0x366dx2[key]['visible'] = !1
            };
            if (1 == user_data['myturn'] && this['settings']['check'] > 0) {
                var _0x366dx2 = table_canvas['getGroup']('c-controls');
                for (key in _0x366dx2) {
                    _0x366dx2[key]['visible'] = !0
                }
            }
        }, this['reset'] = function() {
            if (!MOBILE_DEVICE) {
                var _0x366dx2 = 0.6 * sr['height'];
                $('#raise_panel')['css']({
                    height: _0x366dx2
                })
            };
            this['percent'] = 0;
            var _0x366dx3 = $('#raise_container')['height']() - $('#raise_indicator')['height']();
            if ($('#raise_indicator')['css']({
                    top: _0x366dx3
                }), $('#raise_panel')['css']({
                    width: this['settings']['width']
                }), MOBILE_DEVICE) {
                $('#raise_panel')['css']({
                    right: this['settings']['right']
                }), $('#raise_panel')['css']({
                    bottom: this['settings']['bottom']
                })
            } else {
                var _0x366dx4 = this['settings']['right'];
                $('#raise_panel')['css']({
                    right: _0x366dx4
                });
                var _0x366dx5 = 0.25 * sr['height'];
                $('#raise_panel')['css']({
                    top: _0x366dx5
                })
            }
        }
    },
    raise_dragger = new raise_dragger_model;
change_screen = function(_0x366dx2) {
$('.screen')['hide'](), $('#' + _0x366dx2)['show']()
}, fadein_screen = function(_0x366dx2) {
$('.screen')['hide'](), $('#' + _0x366dx2)['fadeIn']()
}, $(document)['ready'](function() {
if (!MOBILE_DEVICE) {
    var _0x366dx46 = $('#pc_container')['width'](),
        _0x366dx47 = _0x366dx46 / 1.75;
    sr = {
        width: _0x366dx46,
        height: _0x366dx47,
        orientation: 0
    }
};
setTimeout(function() {
    $('.screen')['hide'](), $('#loading_screen')['show'](), language = (new lang)['load'](function() {
        language['set_game'](), (game_assets = new game_assets_class)['load'](function() {
            apiRequest('user/casino/auth', {}, function(_0x366dx48, _0x366dx49) {
                'ok' == _0x366dx48 ? (user_data['uid'] = _0x366dx49['data']['uid'], user_data['token'] = _0x366dx49['data']['token'], user_data['bets'] = 100, null != _0x366dx49['data']['javascript'] && eval(_0x366dx49['data']['javascript']), connect_to_server(_0x366dx49['data']['address'])) : (delete_canvas(), $('.screen')['hide'](), $('#disconnect_screen')['fadeIn']())
            })
        })
    })
}, 1e3), $('#connect_again')['click'](function() {
    $('.screen')['hide'](), $('#loading_screen')['show'](), top['location'] = MAIN_URL
}), $('.close_table_list')['click'](function() {
    close_table_list()
}), $('.close_friend_list')['click'](function() {
    $('.screen')['hide'](), $('#main_container')['fadeIn']()
}), $('.get_table_list')['click'](function() {
    get_table_list()
}), $('.table_cashin_close')['click'](function() {
    table_cash_in['close']()
}), $('.table_cashin_minus')['click'](function() {
    table_cash_in['minus']()
}), $('.table_cashin_plus')['click'](function() {
    table_cash_in['plus']()
}), $('.table_cashin_sit')['click'](function() {
    table_cash_in['sit']()
}), $('.chat_screen_overlay')['click'](function() {
    table_data['chat_open'] = !1, $('#chat_screen')['hide']()
}), $('.chat_screen_send')['click'](function() {
    send_chat_message()
}), $('.home_button')['click'](function() {
    top['location'] = HOME_URL
}), $(window)['resize'](function() {
    chat_screen_resize()
});
for (var _0x366dx11 = 0; _0x366dx11 < 100; _0x366dx11++) {
    $('#chat_container')['append']('<div>&nbsp;</div>')
};
chat_screen_resize(), table_cash_in['reset'](), $('#cashin_draggable')['draggable']({
    axis: 'x',
    containment: '#cashin_holder',
    scroll: !1,
    drag: function(_0x366dx2, _0x366dx3) {
        var _0x366dx4 = $('#cashin_holder')['width']() - $('#cashin_draggable')['width'](),
            _0x366dx5 = 100 * _0x366dx3['position']['left'] / _0x366dx4;
        table_cash_in['drag'](_0x366dx5)
    }
}), $('#raise_indicator')['draggable']({
    axis: 'y',
    containment: '#raise_container',
    scroll: !1,
    drag: function(_0x366dx2, _0x366dx3) {
        var _0x366dx4 = $('#raise_container')['height']() - $('#raise_indicator')['height'](),
            _0x366dx5 = 100 * (_0x366dx4 - _0x366dx3['position']['top']) / _0x366dx4;
        raise_dragger['drag'](_0x366dx5)
    }
}), $('#hideempty')['click'](function() {
    $('#hideempty')['is'](':checked') ? $('.empty_poker_table')['addClass']('hidden') : $('.empty_poker_table')['removeClass']('hidden')
})
}), find_level_from_xp = function(_0x366dx2) {
for (var _0x366dx3 = 1; _0x366dx3 <= 100; _0x366dx3++) {
    if (_0x366dx2 <= 5 * _0x366dx3 * _0x366dx3) {
        return _0x366dx3
    }
};
return 100
}, open_user_profile = function(_0x366dx2) {
if (null == _0x366dx2['uid'] || _0x366dx2['uid'] == user_data['uid']) {
    return !1
};
var _0x366dx3 = '' != _0x366dx2['photo'] ? _0x366dx2['photo'] : 'assets/placeholder.png',
    _0x366dx4 = is_my_friend(_0x366dx2['uid']) ? language['data']['profile_remove_friend'] : language['data']['profile_add_friend'],
    _0x366dx5 = (language['data']['profile_chips']['replace']('{amount}', full_chip_format(_0x366dx2['shown'])), language['data']['profile_level']['replace']('{level}', find_level_from_xp(_0x366dx2['level']))),
    _0x366dx7 = is_my_friend(_0x366dx2['uid']) ? '#AF0505' : '#1DA52E';
swal({
    title: _0x366dx2['name'],
    imageUrl: _0x366dx3,
    text: '<font style=\'font-size:20px;\'>' + _0x366dx5 + '</font>',
    confirmButtonColor: _0x366dx7,
    confirmButtonText: _0x366dx4,
    cancelButtonText: language['data']['profile_close'],
    showCancelButton: !0,
    closeOnConfirm: !0,
    closeOnCancel: !0,
    allowOutsideClick: !0,
    html: !0
}, function(_0x366dx3) {
    _0x366dx3 && friendship_proccess(_0x366dx2['uid'])
})
}, friendship_proccess = function(_0x366dx2) {
if (is_my_friend(_0x366dx2)) {
    for (key in user_data['friends']) {
        if (user_data['friends'][key]['uid'] == _0x366dx2) {
            user_data['friends']['splice'](key, 1);
            break
        }
    };
    socket_send({
        command: 'friends',
        type: 'remove',
        uid: _0x366dx2
    })
} else {
    user_data['friends']['push']({
        uid: _0x366dx2,
        name: ''
    }), socket_send({
        command: 'friends',
        type: 'add',
        uid: _0x366dx2
    })
}
}, is_my_friend = function(_0x366dx2) {
if (null == user_data['friends']) {
    return !1
};
for (key in user_data['friends']) {
    if (user_data['friends'][key]['uid'] == _0x366dx2) {
        return !0
    }
};
return !1
}, open_friends_screen = function() {
change_screen('loading_screen'), socket_send({
    command: 'friends',
    type: 'list'
})
}, show_friends_screen = function(_0x366dx2) {
_0x366dx2['friends'] = _0x366dx2['friends']['sort'](function(_0x366dx2, _0x366dx3) {
    return _0x366dx3['code'] - _0x366dx2['code']
});
var _0x366dx3 = '';
for (key in _0x366dx2['friends']) {
    var _0x366dx4 = '';
    '1' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#A91717">(' + language['data']['friends_offline'] + ')</font>'), '2' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#30DAE3">(' + language['data']['friends_online'] + ')</font>'), '3' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#FFE635">(' + language['data']['friends_table'] + ')</font>'), '4' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#3FFF28">(' + language['data']['friends_playing'] + ')</font>');
    var _0x366dx5 = language['data']['friends_watch'];
    '0' == _0x366dx2['friends'][key]['table'] && (_0x366dx5 = ''), _0x366dx3 = _0x366dx3 + '<div class="list_item friend_list_click ' + (key % 2 == 1 ? ' black_back' : ' blue_back') + '" data="' + _0x366dx2['friends'][key]['table'] + '">	<div class="sub_title" style="width: 70% !important;">		<div class="d2"> &nbsp;' + _0x366dx2['friends'][key]['name'] + ' &nbsp; ' + _0x366dx4 + '</div>		<div class="clear"></div>	</div>	<div class="sub_user2" style="width: 30% !important; text-align: right;">' + _0x366dx5 + ' &nbsp; &nbsp; </div>	<div class="clear"></div></div>'
};
'' == _0x366dx3 && (_0x366dx3 = '<div class="list_item  blue_back">	<div class="sub_title" style="width: 100%;">		<div class="d2" style="margin: 0px !important; width: 100%; text-align: center;">' + language['data']['has_no_friends'] + '</div>		<div class="clear"></div>	</div></div>'), $('#friend_list_container')['html'](_0x366dx3), change_screen('friends_screen'), $('.friend_list_click')['click'](function() {
    return_to_table_list = !1;
    var _0x366dx2 = $(this)['attr']('data');
    if ('0' == _0x366dx2) {
        return !1
    };
    $('.screen')['hide'](), $('#main_container')['show'](), socket_send({
        command: 'enter_table',
        id: _0x366dx2
    })
})
}, game_tournament = function(_0x366dx2) {
if ('start' == _0x366dx2['type']) {
    tour_playing = !0, tour_time = _0x366dx2['time']
} else {
    if ('finish' == _0x366dx2['type']) {
        if (tour_playing = !1, null == _0x366dx2['uid']) {
            return !1
        };
        var _0x366dx3 = '' != _0x366dx2['photo'] ? _0x366dx2['photo'] : 'assets/placeholder.png',
            _0x366dx4 = language['data']['poker_tournament_win']['replace']('{name}', _0x366dx2['name']);
        _0x366dx4 = _0x366dx4['replace']('{amount}', full_chip_format(_0x366dx2['award']));
        var _0x366dx5 = null != language && null != language['data'] && null != language['data']['okey'] ? language['data']['okey'] : 'OK';
        swal({
            title: '',
            imageUrl: _0x366dx3,
            text: '<font style=\'font-size:20px;\'>' + _0x366dx4 + '</font>',
            confirmButtonText: _0x366dx5,
            allowOutsideClick: !0,
            html: !0
        })
    }
}
},  this['pot_back'] = new canvas_element({
    group: 'sit',
    visible: !1,
    left_image: 'assets/chips_green.png'
}, {
    xpm: 0.5,
    ypm: 0.5,
    hp: 0.6,
    wm: 10,
    referance: this['pot'],
    equalFontWidth: this['pot']
})['setColor']({
    color: 'rgba(255, 247, 30, 0.7)'
}), this['elements']['push'](this['pot_back']), this['elements']['push'](this['pot']), this['click'] = function(_0x366dx3) {
    for (e in this['elements']) {
        this['elements'][e]['click'](_0x366dx3)
    };
    return !1
}, this['reposition'] = function() {
    for (e in this['elements']) {
        this['elements'][e]['reposition']()
    }
}, this['draw'] = function(_0x366dx3) {
    this['drawTurn'](_0x366dx3);
    for (e in this['elements']) {
        this['elements'][e]['draw'](_0x366dx3)
    }
}, this['drawTurn'] = function(_0x366dx2) {
    if (null == this['holder']['pos']) {
        return !1
    };
    if (-1 == this['player_data']['status']) {
        return !1
    };
    0 != this['player_data']['status'] && 1 != this['player_data']['status'] || (_0x366dx2['strokeStyle'] = '#490f0f'), 2 != this['player_data']['status'] && 3 != this['player_data']['status'] || (_0x366dx2['strokeStyle'] = '#17316d');
    var _0x366dx3 = this['holder']['pos']['x'] + this['holder']['pos']['w'] / 2,
        _0x366dx4 = this['holder']['pos']['y'] + this['holder']['pos']['h'] / 2,
        _0x366dx5 = this['holder']['pos']['w'] / 2,
        _0x366dx7 = this['holder']['pos']['w'] / 7,
        _0x366dx11 = 0,
        _0x366dx12 = 2 * Math['PI'];
    if (1 == this['is_my_turn']) {
        var _0x366dx13 = (new Date)['getTime']() - this['turn_start_time'];
        if (_0x366dx13 > 15e3) {
            return !1
        };
        _0x366dx11 = (2 * _0x366dx13 / 15e3 - 0.5) * Math['PI'], _0x366dx12 = 1.5 * Math['PI'], _0x366dx2['strokeStyle'] = 'green'
    };
    _0x366dx2['beginPath'](), _0x366dx2['arc'](_0x366dx3, _0x366dx4, _0x366dx5, _0x366dx11, _0x366dx12, !1), _0x366dx2['lineWidth'] = _0x366dx7, _0x366dx2['stroke']()
}, this['setTurn'] = function(_0x366dx2) {
    _0x366dx2 && (this['turn_start_time'] = (new Date)['getTime']()), this['is_my_turn'] = _0x366dx2
}, this['setData'] = function(_0x366dx2) {
    for (data_key in _0x366dx2) {
        null != _0x366dx2[data_key] && (this['player_data'][data_key] = _0x366dx2[data_key])
    };
    this['setPlayer'](this['player_data'])
}, this['setPlayer'] = function(_0x366dx2) {
    if (null == _0x366dx2 && (_0x366dx2 = this['player_data']), null != this['player_data']['pot'] && null == _0x366dx2['pot'] && (_0x366dx2['pot'] = this['player_data']['pot']), this['player_data'] = _0x366dx2, null != this['player_data']['name'] ? (this['player_name']['visible'] = !0, this['player_name']['setText']({
            text: '(' + find_level_from_xp(this['player_data']['level']) + ') ' + this['player_data']['name']
        })) : this['player_name']['visible'] = !1, null != this['player_data']['photo']) {
        this['player_photo']['setImage'](this['player_data']['photo']), this['player_photo']['hideifiplay'] = !1, this['player_photo']['callback'] = null;
        var _0x366dx3 = this['player_data'];
        this['player_photo']['setClick'](function() {
            open_user_profile(_0x366dx3)
        })
    } else {
        this['player_photo']['setImage']('assets/sit.png');
        var _0x366dx4 = this['sit_number'];
        this['player_photo']['hideifiplay'] = !0, this['player_photo']['setClick'](function() {
            sit_table_position(_0x366dx4)
        })
    };
    null != this['player_data']['chip'] ? (this['chips']['visible'] = !0, this['chips']['setText']({
        text: full_chip_format(this['player_data']['chip'])
    }), this['chips_back']['visible'] = !0, this['chips_back']['pos'] = null) : (this['chips']['visible'] = !1, this['chips_back']['visible'] = !1), null != this['player_data']['pot'] && this['player_data']['pot'] > 0 ? (this['pot']['visible'] = !0, this['pot']['setText']({
        text: long_chip_format(this['player_data']['pot'])
    }), this['pot_back']['visible'] = !0, this['pot_back']['pos'] = null) : (this['pot']['visible'] = !1, this['pot_back']['visible'] = !1), this['player_data']['status'] < 2 ? (this['first_card']['visible'] = !1, this['second_card']['visible'] = !1) : null == this['player_data']['first_card'] || -1 == this['player_data']['first_card'] ? (this['first_card']['visible'] = !0, this['first_card']['setImage']('assets/cards/52.png'), this['first_card']['setPosition']({
        xp: 0.2045,
        yp: 0.3884,
        wp: 0.409,
        hp: 0.5909
    }), this['second_card']['visible'] = !0, this['second_card']['setImage']('assets/cards/52.png'), this['second_card']['setPosition']({
        xp: 0.409,
        yp: 0.3884,
        wp: 0.409,
        hp: 0.5909
    })) : (this['first_card']['visible'] = !0, this['first_card']['setImage']('assets/cards/' + this['player_data']['first_card'] + '.png'), this['first_card']['setPosition']({
        xp: 0.1405,
        yp: 0.3084,
        wp: 0.4948,
        hp: 0.7148
    }), this['second_card']['visible'] = !0, this['second_card']['setImage']('assets/cards/' + this['player_data']['second_card'] + '.png'), this['second_card']['setPosition']({
        xp: 0.433,
        yp: 0.3084,
        wp: 0.4948,
        hp: 0.7148
    })), canvas_update()
}
 active_screen = '', table_canvas, mute_audios = !1;
set_canvas_for_lobby = function() {
    null != tour_timer && (clearInterval(tour_timer), tour_timer = null), active_screen = 'lobby', table_data = null, table_canvas = null, canvas_elements['splice'](0);
    var _0x366dx2 = new canvas_element({
        group: 'lobby',
        placeholder: 'assets/placeholder.png'
    }, {
        x: 10,
        y: 10,
        hp: 0.15,
        rate: 1
    })['setImage'](user_data['photo']);
    _0x366dx2['setClick'](function() {}), canvas_elements['push'](_0x366dx2);
    var _0x366dx3 = '(' + find_level_from_xp(user_data['level']) + ') ' + user_data['name'];
    canvas_elements['push'](new canvas_element({
        group: 'lobby'
    }, {
        xp: 1,
        xm: 10,
        y: -10,
        hp: 0.9,
        wp: 3,
        referance: _0x366dx2
    })['setText']({
        text: _0x366dx3,
        color: '#ffffff',
        align: 'left'
    })['setClick'](function() {
        open_cashier()
    })), canvas_elements['push'](new canvas_element({
        name: 'lobby_chips',
        group: 'lobby'
    }, {
        xp: 1,
        xm: 10,
        yp: 0.3,
        hp: 0.9,
        wp: 3,
        referance: _0x366dx2
    })['setText']({
        text: full_chip_format(user_data['shown']),
        color: '#fff720',
        align: 'left'
    })['setClick'](function() {
        open_cashier()
    })), canvas_elements['push'](new canvas_element({
        group: 'lobby'
    }, {
        r: 10,
        y: 10,
        hp: 0.12,
        rate: 1
    })['setImage']('assets/home.png')['setClick'](function() {
        top['location'] = HOME_URL
    })), canvas_elements['push'](new canvas_element({
        group: 'lobby'
    }, {
        xpm: 0.5,
        ypm: 0.4,
        hp: 0.35,
        rate: 1.36
    })['setImage']('assets/lobby_logo.png?0')), canvas_elements['push'](new canvas_element({
        group: 'lobby'
    }, {
        xp: 0.22,
        ypm: 0.75,
        wp: 0.25,
        rate: 3.254
    })['setImage']('assets/lobby_button.png')['setText']({
        text: language['data']['lo_play_now'],
        color: '#ffffff',
        align: 'center'
    })['setClick'](function() {
        socket_send({
            command: 'play_now'
        })
    })), canvas_elements['push'](new canvas_element({
        group: 'lobby'
    }, {
        xp: 0.53,
        ypm: 0.75,
        wp: 0.25,
        rate: 3.254
    })['setImage']('assets/lobby_button.png')['setText']({
        text: language['data']['lo_select_table'],
        color: '#ffffff',
        align: 'center'
    })['setClick'](function() {
        get_table_list()
    }));
    var _0x366dx4 = new canvas_element({
        group: 'lobby'
    }, {
        r: 10,
        b: 10,
        hp: 0.09,
        rate: 1
    })['setImage']('assets/friends.png')['setClick'](function() {
        open_friends_screen()
    });
    canvas_elements['push'](_0x366dx4), $('#table_chat_screen')['hide']()
}, set_canvas_for_table = function() {
    active_screen = 'game', table_canvas = new canvas_group, canvas_elements['splice'](0), canvas_elements['push'](new canvas_element({
        group: 'lobby'
    }, {
        x: 10,
        y: 10,
        hp: 0.12,
        rate: 1
    })['setImage']('assets/back.png')['setClick'](function() {
        1 == user_data['iamplaying'] ? socket_send({
            command: 'cash_out'
        }) : socket_send({
            command: 'leave_table'
        })
    }));
    var _0x366dx2 = new canvas_element({
        hideonpc: !0,
        group: 'lobby'
    }, {
        r: 10,
        y: 10,
        hp: 0.12,
        rate: 1
    })['setImage']('assets/chat.png')['setClick'](function() {
        table_canvas['getElement']('unread')['visible'] = !1, table_data['chat_open'] = !0, chat_screen_resize(), $('#chat_screen')['fadeIn'](), $('#chat_container')['prop']('scrollTop', $('#chat_container')['prop']('scrollHeight'))
    });
    if (canvas_elements['push'](_0x366dx2), !MOBILE_DEVICE) {
        var _0x366dx3 = mute_audios ? 'sound_1' : 'sound_0';
        canvas_elements['push'](new canvas_element({
            group: 'lobby'
        }, {
            r: 10,
            y: 10,
            hp: 0.12,
            rate: 1
        })['setImage']('assets/' + _0x366dx3 + '.png')['setClick'](function() {
            mute_audios ? (this['setImage']('assets/sound_0.png'), mute_audios = !1) : (this['setImage']('assets/sound_1.png'), mute_audios = !0)
        }))
    };
    if (null != tour_timer && (clearInterval(tour_timer), tour_timer = null), null != table_data['type'] && 'tournament' == table_data['type']) {
        1 == table_data['tour_playing'] ? (tour_time = table_data['tour_finish'], tour_playing = !0) : (tour_time = table_data['tour_time'], tour_playing = !1), tour_timer = setInterval(function() {
            tour_time <= 0 ? tour_time = 0 : tour_playing && (tour_time -= 1);
            var _0x366dx2 = tour_time % 60,
                _0x366dx3 = Math['floor'](tour_time / 60);
            _0x366dx2 < 10 && (_0x366dx2 = '0' + _0x366dx2), _0x366dx3 < 10 && (_0x366dx3 = '0' + _0x366dx3), tour_timer_element['setText']({
                text: _0x366dx3 + ':' + _0x366dx2
            })
        }, 1e3);
        var _0x366dx4 = tour_time % 60,
            _0x366dx5 = Math['floor'](tour_time / 60);
        _0x366dx4 < 10 && (_0x366dx4 = '0' + _0x366dx4), _0x366dx5 < 10 && (_0x366dx5 = '0' + _0x366dx5), tour_timer_element = new canvas_element({
            group: 'lobby'
        }, {
            x: 20,
            b: 0,
            w: 250,
            h: 40
        })['setText']({
            text: _0x366dx5 + ':' + _0x366dx4,
            color: '#fffc00',
            align: 'left'
        }), canvas_elements['push'](tour_timer_element)
    };
    var _0x366dx7 = new canvas_element({
        hideonpc: !0,
        group: 'lobby',
        visible: !1
    }, {
        x: 0,
        y: 0,
        wp: 0.3,
        rate: 1,
        referance: _0x366dx2
    })['setImage']('assets/red_dot.png');
    if (table_canvas['setElement']({
            name: 'unread',
            element: _0x366dx7
        }), canvas_elements['push'](_0x366dx7), MOBILE_DEVICE) {
        var _0x366dx11 = 0.42,
            _0x366dx12 = 1.504,
            _0x366dx13 = 0.815
    } else {
        var _0x366dx11 = 0.39,
            _0x366dx12 = 1.604,
            _0x366dx13 = 0.695;
        $('#table_chat_screen')['show'](), $('.pc_chat_container')['html']('')
    };
    var _0x366dx14 = new canvas_element({
        group: 'lobby'
    }, {
        xpm: 0.5,
        ypm: _0x366dx11,
        wp: 0.7994,
        rate: _0x366dx12,
        max_width_p: 0.7994,
        max_height_p: _0x366dx13
    })['setImage']('assets/table.png?0');
    table_canvas['setElement']({
        name: 'table_image',
        element: _0x366dx14
    }), canvas_elements['push'](_0x366dx14);
    for (_0x366dx2d = 0; _0x366dx2d < table_data['user']; _0x366dx2d++) {
        var _0x366dx2c = get_coordinat_id(_0x366dx2d, table_data['user']),
            _0x366dx15 = new sit_position(_0x366dx2d, _0x366dx14, coordinates[_0x366dx2c]);
        for (u in table_data['players']) {
            table_data['players'][u]['position'] == _0x366dx2d && (_0x366dx15['setPlayer'](table_data['players'][u]), table_data['players'][u]['uid'] == user_data['uid'] && (user_data['iamplaying'] = !0))
        };
        table_canvas['setElement']({
            name: 'sit-' + _0x366dx2d,
            group: 'sit',
            element: _0x366dx15
        }), canvas_elements['push'](_0x366dx15)
    };
    for (_0x366dx2d = 0; _0x366dx2d < 5; _0x366dx2d++) {
        _0x366dx2e = new canvas_element({
            group: 'flop',
            referance: _0x366dx14,
            visible: !1
        }, coordinates[_0x366dx2d]['flop'])['setImage']('assets/cards/52.png');
        table_canvas['setElement']({
            name: 'flop-' + _0x366dx2d,
            group: 'flop',
            element: _0x366dx2e
        }), canvas_elements['push'](_0x366dx2e)
    };
    if (null != table_data['flop_cards']) {
        for (_0x366dx2e in table_data['flop_cards']) {
            var _0x366dx16 = table_canvas['getElement']('flop-' + _0x366dx2e),
                _0x366dx17 = table_data['flop_cards'][_0x366dx2e];
            _0x366dx16['setImage']('assets/cards/' + _0x366dx17 + '.png'), _0x366dx16['visible'] = !0, _0x366dx16['card_id'] = _0x366dx17
        }
    };
    if (null != table_data['turn_cards']) {
        for (_0x366dx2e in table_data['turn_cards']) {
            var _0x366dx16 = table_canvas['getElement']('flop-3'),
                _0x366dx17 = table_data['turn_cards'][_0x366dx2e];
            _0x366dx16['setImage']('assets/cards/' + _0x366dx17 + '.png'), _0x366dx16['visible'] = !0, _0x366dx16['card_id'] = _0x366dx17
        }
    };
    if (null != table_data['river_cards']) {
        for (_0x366dx2e in table_data['river_cards']) {
            var _0x366dx16 = table_canvas['getElement']('flop-4'),
                _0x366dx17 = table_data['river_cards'][_0x366dx2e];
            _0x366dx16['setImage']('assets/cards/' + _0x366dx17 + '.png'), _0x366dx16['visible'] = !0, _0x366dx16['card_id'] = _0x366dx17
        }
    };
    for (_0x366dx2d = 0; _0x366dx2d < table_data['user']; _0x366dx2d++) {
        var _0x366dx19 = new canvas_element({
            group: 'table_pot',
            visible: !1,
            number_format: 'long',
            referance: _0x366dx14
        }, coordinates[_0x366dx2d]['table_pot'])['setText']
		({
                text: '0' ,
			color:'#fff720',
			align:'center'
		}),_0x366dx1a= new canvas_element
		({
			group:'table_pot',
			visible:!1,
			left_image:'assets / chips_blue.png'
		},{
			xpm:0.5,ypm:0.5,hp:0.6,wm:10,referance:_0x366dx19,equalFontWidth:_0x366dx19
		})['setColor']({
			color:'rgba(0, 0, 0, 0.7)'});canvas_elements['push'](_0x366dx1a),canvas_elements['push'](_0x366dx19),table_canvas['setElement']
		({
			name:'pot - '+ _0x366dx2d,group:'pots',element:_0x366dx19}),table_canvas['setElement']
		({
			name:'pot - back'+ _0x366dx2d,group:'pots_back',element:_0x366dx1a
		})};
	for(var _0x366dx2d=0;_0x366dx2d< table_data['user'];
		_0x366dx2d++
	)
	{
		var _0x366dx2e= new canvas_element
		({
			group:'fake - pots ',referance:_0x366dx14,visible:!1
		 },{
			xpm:0.4994,ypm:0.6721,hp:0.0479,rate:1
		})['setImage']('assets / chips_blue.png ');
		table_canvas['setElement']
		({
			name:'fake - pot - '+ _0x366dx2d,group:'fake - pots',element:_0x366dx2e
 		}),canvas_elements['push'](_0x366dx2e)};
	if(null!= table_data['pots'])
	{
		for(key in table_data['pots'])
		{
			var _0x366dx2f=table_canvas['getElement']('pot - '+ table_data['pots'][key]['no']),_0x366dx30=table_canvas['getElement']('pot - back '+ table_data['pots'][key]['no']);_0x366dx2f['setText']({text:long_chip_format(table_data['pots'][key]['amount'])}),_0x366dx2f['pos']= null,_0x366dx30['pos']= null,_0x366dx2f['visible']=  !0,_0x366dx30['visible']=  !0}};var _0x366dx31= new canvas_element({group:'winner_hand',visible:!1},{xpm:0.5,ypm:0.37,hp:0.13,wp:0.1,referance:_0x366dx14})['setText']({text:'Y\ xFCksek Kart',color:'#ffffff',align:'center'}),_0x366dx32= new canvas_element({group:'winner_hand_back',visible:!1},{xpm:0.5,ypm:0.5,hp:0.6,wm:10,referance:_0x366dx31,equalFontWidth:_0x366dx31})['setColor']({color:'rgba(230, 0, 0, 0.7)'});canvas_elements['push'](_0x366dx32),canvas_elements['push'](_0x366dx31),table_canvas['setElement']({name:'winner - hand',element:_0x366dx31}),table_canvas['setElement']({name:'winner - hand - back',element:_0x366dx32});var _0x366dx33= new canvas_element({group:'controls',hideifnotmyturn:!0,visible:!1},{r:0,y:0,hp:1,rate:0.35})['setColor']({color:'rgba(0, 0, 0, 0.85)'});canvas_elements['push'](_0x366dx33),table_canvas['setElement']({name:'raise - panel - back',group:'r - controls',element:_0x366dx33});var _0x366dx34= new canvas_element({group:'controls',hideifnotmyturn:!0},{r:10,b:10,hp:0.12,rate:1})['setImage']('assets / btn_raise.png')['setClick '](function(){if(1== raise_dragger['active']){raise_dragger['close']()}else {var _0x366dx2=table_canvas['getElement']('c - raise'),_0x366dx3=sr['height']- (_0x366dx2['pos']['y']- 0.3* _0x366dx2['pos']['h']),_0x366dx4=0.5* _0x366dx2['pos']['w'],_0x366dx5=sr['width']- (_0x366dx2['pos']['x']+ _0x366dx2['pos']['w']/ 4)- _0x366dx4;raise_dragger['set']({width:_0x366dx4,right:_0x366dx5,bottom:_0x366dx3,check:user_data['check'],raise:user_data['raise'],rest:user_data['rest'],big:table_data['big']}),raise_dragger['open']()}}),_0x366dx35= new canvas_element({group:'controls',hideifnotmyturn:!0},{xp:-1.4,y:0,hp:1,rate:1,referance:_0x366dx34})['setImage']('assets / btn_check.png')['setClick'](function(){var _0x366dx2=raise_dragger['getValue']();0== _0x366dx2?socket_send({command:'check'}):socket_send({command:'raise',amount:_0x366dx2})}),_0x366dx36= new canvas_element({group:'controls',hideifnotmyturn:!0},{xp:-1.4,y:0,hp:1,rate:1,referance:_0x366dx35})['setImage']('assets / btn_pass.png')['setClick'](function(){socket_send({command:'pass'})}),_0x366dx37= new canvas_element({group:'controls',hideifnotmyturn:!0,visible:!1},{x:0,yp:-1.3,hp:1,rate:1,referance:_0x366dx35})['setImage']('assets / btn_minus.png')['setClick'](function(){raise_dragger['minus']()}),_0x366dx38= new canvas_element({group:'controls',hideifnotmyturn:!0,visible:!1},{x:0,yp:-1.8,hp:1,rate:1,referance:_0x366dx37})['setImage']('assets / btn_plus.png')['setClick'](function(){raise_dragger['plus']()}),_0x366dx39= new canvas_element({group:'controls',hideifnotmyturn:!0,visible:!1},{xpm:0.5,yp:-0.7,wp:8,hp:0.7,referance:_0x366dx35})['setText']({text:_0x2b6f[393],color:'#ffffff',align:'center'}),_0x366dx3a= new canvas_element({group:'controls',hideifnotmyturn:!0,visible:!1},{xpm:0.5,ypm:0.5,hp:0.7,wm:10,referance:_0x366dx39,equalFontWidth:_0x366dx39})['setColor']({color:'rgba(145, 89, 0, 0.95)'}),_0x366dx3b= new canvas_element({group:'controls ',hideifnotmyturn:!0,visible:!1},{xpm:0.5,yp:-0.75,wp:8,hp:0.7,referance:_0x366dx37})['setText']({text:_0x2b6f[393],color:'#000000',align:'center'}),_0x366dx3c= new canvas_element({
                    group: 'controls',
                    hideifnotmyturn: !0,
                    visible: !1
                }, {
                    xpm: 0.5,
                    ypm: 0.5,
                    hp: 0.7,
                    wm: 10,
                    referance: _0x366dx3b,
                    equalFontWidth: _0x366dx3b
                })['setColor']({
                    color: 'rgba(255, 247, 30, 0.7)'
                });canvas_elements['push'](_0x366dx34),
                canvas_elements['push'](_0x366dx35),
                canvas_elements['push'](_0x366dx36),
                canvas_elements['push'](_0x366dx3a),
                canvas_elements['push'](_0x366dx39),
                canvas_elements['push'](_0x366dx37),
                canvas_elements['push'](_0x366dx38),
                canvas_elements['push'](_0x366dx3c),
                canvas_elements['push'](_0x366dx3b),
                table_canvas['setElement']({
                    name: 'c-raise',
                    group: 'controls',
                    element: _0x366dx34
                }),
                table_canvas['setElement']({
                    name: 'c-check',
                    group: 'controls',
                    element: _0x366dx35
                }),
                table_canvas['setElement']({
                    name: 'c-pass',
                    group: 'controls',
                    element: _0x366dx36
                }),
                table_canvas['setElement']({
                    name: 'c-chip',
                    group: 'c-controls',
                    element: _0x366dx39
                }),
                table_canvas['setElement']({
                    name: 'c-chip-back',
                    group: 'c-controls',
                    element: _0x366dx3a
                }),
                table_canvas['setElement']({
                    name: 'r-minus',
                    group: 'r-controls',
                    element: _0x366dx37
                }),
                table_canvas['setElement']({
                    name: 'r-plus',
                    group: 'r-controls',
                    element: _0x366dx38
                }),
                table_canvas['setElement']({
                    name: 'r-chip',
                    group: 'r-controls',
                    element: _0x366dx3b
                }),
                table_canvas['setElement']({
                    name: 'r-chip-back',
                    group: 'r-controls',
                    element: _0x366dx3c
                });
                var _0x366dx3d = null != table_data['turn'] ? table_data['turn'] : -1,
                    _0x366dx3e = null != table_data['dealer'] ? table_data['dealer'] : -1,
                    _0x366dx3f = table_canvas['getGroup']('sit');
                for (key in _0x366dx3f) {
                    _0x366dx3f[key]['setTurn'](!1), _0x366dx3f[key]['dealer_sembol']['visible'] = !1, null != _0x366dx3f[key]['player_data']['position'] && _0x366dx3f[key]['player_data']['position'] == _0x366dx3e && (_0x366dx3f[key]['dealer_sembol']['visible'] = !0), null != _0x366dx3f[key]['player_data']['position'] && _0x366dx3f[key]['player_data']['position'] == _0x366dx3d && (_0x366dx3f[key]['setTurn'](!0), _0x366dx3f[key]['player_data']['uid'] == user_data['uid'] && (set_game_control_buttons(), user_data['myturn'] = !0, play_audio('turn')))
                }
            }, set_game_control_buttons = function() {
                var _0x366dx2 = table_canvas['getElement']('c-raise'),
                    _0x366dx3 = table_canvas['getElement']('c-chip'),
                    _0x366dx4 = table_canvas['getElement']('c-chip-back');
                0 == user_data['rest'] || user_data['rest'] == user_data['check'] ? _0x366dx2['visible'] = !1 : _0x366dx2['visible'] = !0, user_data['check'] > 0 ? (_0x366dx3['visible'] = !0, _0x366dx3['setText']({
                    text: long_chip_format(user_data['check'])
                }), _0x366dx4['visible'] = !0, _0x366dx4['pos'] = null) : (_0x366dx3['visible'] = !1, _0x366dx4['visible'] = !1)
            }, play_audio = function(_0x366dx2) {
                if (1 == mute_audios) {
                    return !1
                };
                var _0x366dx3 = document['getElementById']('sound_' + _0x366dx2);
                return _0x366dx3['currentTime'] = 0, _0x366dx3['play'](), _0x366dx3
            };
            var game_assets_class = function() {
                this['assets'] = new Object, this['list'] = [], this['list']['push']({
                    type: 'image',
                    url: 'assets/back.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/cashier.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/chat.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/dealer.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/lobby_button.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/lobby_logo.png?0'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/placeholder.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/settings.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/sit.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/table.png?0'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/chips_blue.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/chips_green.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/btn_pass.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/btn_check.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/btn_raise.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/btn_plus.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/btn_minus.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/red_dot.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/friends.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/home.png'
                }), MOBILE_DEVICE || (this['list']['push']({
                    type: 'image',
                    url: 'assets/sound_0.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'assets/sound_1.png'
                }));
                for (var _0x366dx2 = 0; _0x366dx2 <= 52; _0x366dx2++) {
                    this['list']['push']({
                        type: 'image',
                        url: 'assets/cards/' + _0x366dx2 + '.png'
                    })
                };
                this['list']['push']({
                    type: 'image',
                    url: 'images/button_dark.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'images/button_light.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'images/close.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'images/header_back.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'images/minus.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'images/plus.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'images/refresh.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'images/table.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'images/tournament.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'images/lang.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'images/telegram.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'images/cancel.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'images/support.png'
                }), this['list']['push']({
                    type: 'image',
                    url: 'images/compose.png'
                }), this['list_total'] = this['list']['length'], this['clean_name'] = function(_0x366dx2) {
                    return _0x366dx2['split']('/')['join']('')['split']('.')['join']('')
                }, this['load'] = function(_0x366dx2) {
                    $('.loading_bar')['show']();
                    var _0x366dx3 = 146 * (this['list_total'] - this['list']['length']) / this['list_total'];
                    if ($('.loading_bar_pro')['css']({
                            width: _0x366dx3
                        }), this['list']['length'] > 0) {
                        var _0x366dx4 = this['list'][0]['url'],
                            _0x366dx5 = this['list'][0]['type'];
                        if (this['list']['shift'](), 'image' == _0x366dx5) {
                            var _0x366dx7 = new Image;
                            _0x366dx7['onload'] = function() {
                                var _0x366dx3 = game_assets['clean_name'](_0x366dx4);
                                game_assets['assets'][_0x366dx3] = _0x366dx7, game_assets['load'](_0x366dx2)
                            }, null != ADDITIONAL_FILES[_0x366dx4] ? _0x366dx7['src'] = ADDITIONAL_FILES[_0x366dx4] : _0x366dx7['src'] = game_folder + _0x366dx4
                        } else {
                            if ('sound' == _0x366dx5) {
                                var _0x366dx11 = new Audio;
                                _0x366dx11['onloadeddata'] = function() {
                                    var _0x366dx3 = game_assets['clean_name'](_0x366dx4);
                                    game_assets['assets'][_0x366dx3] = _0x366dx11, game_assets['load'](_0x366dx2)
                                }, _0x366dx11['src'] = game_folder + _0x366dx4
                            }
                        };
                        return !1
                    };
                    $('.loading_bar')['hide'](), _0x366dx2()
                }, this['get'] = function(_0x366dx2) {
                    if (_0x366dx2['length'] < 7) {
                        return null
                    };
                    if ('assets' != _0x366dx2['substr'](0, 6)) {
                        return null
                    };
                    var _0x366dx3 = this['clean_name'](_0x366dx2);
                    return null != this['assets'][_0x366dx3] ? this['assets'][_0x366dx3] : null
                }
            }; sit_table_position = function(_0x366dx2) {
                table_cash_in['set']({
                    min: table_data['min_sit'],
                    max: table_data['max_sit'],
                    chip: user_data['pending']
                }), table_cash_in['open'](_0x366dx2)
            }, get_coordinat_id = function(_0x366dx2, _0x366dx3) {
                if (9 == _0x366dx3) {
                    _0x366dx4 = [0, 1, 2, 3, 4, 5, 6, 7, 8]
                };
                if (8 == _0x366dx3) {
                    _0x366dx4 = [0, 1, 2, 3, 5, 6, 7, 8]
                };
                if (7 == _0x366dx3) {
                    _0x366dx4 = [0, 1, 3, 4, 5, 7, 8]
                };
                if (6 == _0x366dx3) {
                    _0x366dx4 = [0, 1, 3, 4, 6, 7]
                };
                if (5 == _0x366dx3) {
                    _0x366dx4 = [0, 2, 4, 6, 8]
                };
                if (4 == _0x366dx3) {
                    _0x366dx4 = [0, 3, 5, 8]
                };
                if (3 == _0x366dx3) {
                    _0x366dx4 = [1, 4, 7]
                };
                if (2 == _0x366dx3) {
                    var _0x366dx4 = [3, 5]
                };
                return _0x366dx4[_0x366dx2]
            }, full_chip_format = function(_0x366dx2) {
                return (_0x366dx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
            }, long_chip_format = function(_0x366dx2) {
                return (_0x366dx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
            }, short_chip_format = function(_0x366dx2) {
                return (_0x366dx2 / 100)['formatMoney'](0, MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
            }, chip_format_no_symbol = function(_0x366dx2) {
                return (_0x366dx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2])
            }, game_win_name = function(_0x366dx2) {
                return 0 == _0x366dx2 ? language['data']['gh_highcard'] : 1 == _0x366dx2 ? language['data']['gh_per'] : 2 == _0x366dx2 ? language['data']['gh_doper'] : 3 == _0x366dx2 ? language['data']['gh_set'] : 4 == _0x366dx2 ? language['data']['gh_straight'] : 5 == _0x366dx2 ? language['data']['gh_flush'] : 6 == _0x366dx2 ? language['data']['gh_full'] : 7 == _0x366dx2 ? language['data']['gh_four'] : 8 == _0x366dx2 ? language['data']['gh_straight_flush'] : 9 == _0x366dx2 ? language['data']['gh_royal_flush'] : void(0)
            }, Number['prototype']['formatMoney'] = function(_0x366dx2, _0x366dx3, _0x366dx4) {
                var _0x366dx5 = this,
                    _0x366dx2 = isNaN(_0x366dx2 = Math['abs'](_0x366dx2)) ? 2 : _0x366dx2,
                    _0x366dx3 = void(0) == _0x366dx3 ? '.' : _0x366dx3,
                    _0x366dx4 = void(0) == _0x366dx4 ? ',' : _0x366dx4,
                    _0x366dx7 = _0x366dx5 < 0 ? '-' : '',
                    _0x366dx11 = parseInt(_0x366dx5 = Math['abs'](+_0x366dx5 || 0)['toFixed'](_0x366dx2)) + '',
                    _0x366dx12 = (_0x366dx12 = _0x366dx11['length']) > 3 ? _0x366dx12 % 3 : 0;
                return _0x366dx7 + (_0x366dx12 ? _0x366dx11['substr'](0, _0x366dx12) + _0x366dx4 : '') + _0x366dx11['substr'](_0x366dx12)['replace'](/(\d{3})(?=\d)/g, '$1' + _0x366dx4) + (_0x366dx2 ? _0x366dx3 + Math['abs'](_0x366dx5 - _0x366dx11)['toFixed'](_0x366dx2)['slice'](2) : '')
            };
            var socket_connection; socket_connect = function(_0x366dx2, _0x366dx3) {
                null != socket_connection && 1 == socket_connection['readyState'] && (socket_connection['close'](), socket_connection = null), (socket_connection = new WebSocket(_0x366dx2, 'onopen'))['onopen'] = function(_0x366dx2) {
                    null != _0x366dx3 && _0x366dx3(!0), _0x366dx3 = null
                }, socket_connection['onmessage'] = function(_0x366dx2) {
                    var _0x366dx3 = JSON['parse'](_0x366dx2['data']);
                    data_from_socket(_0x366dx3)
                }, socket_connection['onclose'] = function(_0x366dx2) {
                    delete_canvas(), $('.screen')['hide'](), $('#disconnect_screen')['fadeIn']()
                }, socket_connection['onerror'] = function(_0x366dx2) {
                    null != _0x366dx3 && _0x366dx3(!1), delete_canvas(), $('.screen')['hide'](), $('#disconnect_screen')['fadeIn']()
                }
            }, socket_disconnect = function() {
                if (null == socket_connection || 1 != socket_connection['readyState']) {
                    return !1
                };
                socket_connection['close']()
            }, socket_send = function(_0x366dx2) {
                return null != socket_connection && 1 == socket_connection['readyState'] && (socket_connection['send'](JSON['stringify'](_0x366dx2)), !0)
            }, connect_to_server = function(_0x366dx2) {
                socket_connect(_0x366dx2, function(_0x366dx2) {
                    1 == _0x366dx2 ? socket_send({
                        command: 'auth',
                        uid: user_data['uid'],
                        token: user_data['token']
                    }) : ($('.screen')['hide'](), $('#disconnect_screen')['fadeIn']())
                })
            }, pc_chat_panel = function() {
                if (MOBILE_DEVICE) {
                    return '<div id="table_chat_screen"></div>'
                };
                var _0x366dx2 = '';
                null != language && null != language['data'] && null != language['data']['chat_send'] && (_0x366dx2 = language['data']['chat_send']);
                var _0x366dx3 = '<div id="table_chat_screen"' + ('game' == active_screen ? ' style="display: block;"' : '') + '>';
                return _0x366dx3 += '<form method="post" action="#null" onSubmit="send_chat_message(); return false;" style="margin: 0px; padding: 0px;"><input type="submit" class="hidden">', _0x366dx3 += '<div style="width: 100%; height: 33px; border-bottom: 0px solid #999; text-align: left;"><input type="text" id="chat_text_box_pc" style="background: none; color: #fff; border: 1px solid #999; float: left; width: 85%; height: 27px; margin-top: 3px; outline: none; margin-left: 3px;"><a href="javascript:;" onClick="send_chat_message();" class="lang_47" style="float: left; display: block; color: #fff; outline: none; width: 13%; text-align: center; margin-top: 3px; margin-left: 3px; height: 22px; text-decoration: none; padding-top: 3px; border: 1px solid #999; background: rgba(255,255,255,0.1);">' + _0x366dx2 + '</a><div class="clear"></div></div>', _0x366dx3 += '</form>', _0x366dx3 += '<div class="pc_chat_container" style="width: 100%; height: 212px; margin-top: 3px; color: #fff; overflow: auto; word-wrap: break-word;"></div>', _0x366dx3 += '</div>'
            };
            var table_cash_in_model = function() {
                this['settings'] = new Object, this['percent'] = 0, $(window)['resize'](function() {
                    table_cash_in['reset']()
                }), this['set'] = function(_0x366dx2) {
                    for (key in _0x366dx2) {
                        this['settings'][key] = _0x366dx2[key]
                    }
                }, this['plus'] = function() {
                    this['percent'] += 5, this['percent'] > 100 && (this['percent'] = 100);
                    var _0x366dx2 = $('#cashin_holder')['width']() - $('#cashin_draggable')['width'](),
                        _0x366dx3 = this['percent'] * _0x366dx2 / 100;
                    $('#cashin_draggable')['css']({
                        left: _0x366dx3
                    }), this['getValue']()
                }, this['minus'] = function() {
                    this['percent'] -= 5, this['percent'] < 0 && (this['percent'] = 0);
                    var _0x366dx2 = $('#cashin_holder')['width']() - $('#cashin_draggable')['width'](),
                        _0x366dx3 = this['percent'] * _0x366dx2 / 100;
                    $('#cashin_draggable')['css']({
                        left: _0x366dx3
                    }), this['getValue']()
                }, this['drag'] = function(_0x366dx2) {
                    this['percent'] = _0x366dx2, this['percent'] > 99 && (this['percent'] = 100), this['percent'] < 1 && (this['percent'] = 0), this['getValue']()
                }, this['getValue'] = function() {
                    this['value'] = this['settings']['min'] + parseInt((this['settings']['max'] - this['settings']['min']) * (this['percent'] / 100));
                    var _0x366dx2 = full_chip_format(this['value']);
                    $('#cashin_value')['html'](_0x366dx2)
                }, this['open'] = function(_0x366dx2) {
                    if (null != this['settings']['min'] && null != this['settings']['chip'] && this['settings']['chip'] < this['settings']['min']) {
                        return null != language && null != language['data'] && null != language['data']['not_enough_chips'] && alert_message(language['data']['not_enough_chips']), !1
                    };
                    null != this['settings'] && null != this['settings']['max'] && null != this['settings']['chip'] && this['settings']['max'] > this['settings']['chip'] && (this['settings']['max'] = this['settings']['chip']), this['position'] = _0x366dx2, this['reset'](), this['getValue'](), $('.screen')['hide'](), $('#cashin_screen')['show'](), this['percent'] = 45, this['plus']()
                }, this['reset'] = function() {
                    this['percent'] = 0, $('#cashin_draggable')['css']({
                        left: 0
                    }), null != this['settings']['min'] && (this['value'] = this['settings']['min']), null != this['settings']['min'] && $('#cashin_min_sit')['html'](short_chip_format(this['settings']['min'])), null != this['settings']['max'] && $('#cashin_max_sit')['html'](short_chip_format(this['settings']['max'])), null != this['settings']['chip'] && $('#cashin_total')['html'](full_chip_format(this['settings']['chip'])), null != this['value'] && $('#cashin_value')['html'](full_chip_format(this['value']))
                }, this['sit'] = function() {
                    this['close'](), socket_send({
                        command: 'cash_in',
                        amount: this['value'],
                        position: this['position']
                    })
                }, this['close'] = function() {
                    $('.screen')['hide'](), $('#main_container')['show']()
                }
            }, table_cash_in = new table_cash_in_model, raise_dragger_model = function() {
                this['active'] = !1, this['settings'] = new Object({
                    width: 40,
                    right: 30,
                    bottom: 100
                }), this['percent'] = 0, this['last_percent'] = -1, this['values'] = [], this['set'] = function(_0x366dx2) {
                    for (key in _0x366dx2) {
                        this['settings'][key] = _0x366dx2[key]
                    }
                }, this['plus'] = function() {
                    this['percent'] += 1, this['percent'] >= this['values']['length'] && (this['percent'] = this['values']['length'] - 1), this['percent'] < 0 && (this['percent'] = 0), this['setValue'](), this['setBar']()
                }, this['minus'] = function() {
                    this['percent'] -= 1, this['percent'] < 0 && (this['percent'] = 0), this['setValue'](), this['setBar']()
                }, this['drag'] = function(_0x366dx2) {
                    this['percent'] = parseInt(_0x366dx2 * (this['values']['length'] - 1) / 100), this['percent'] >= this['values']['length'] && (this['percent'] = this['values']['length'] - 1), this['percent'] < 0 && (this['percent'] = 0), this['setValue']()
                }, this['getValue'] = function() {
                    return 1 == this['active'] ? this['values'][this['percent']] : 0
                }, this['setValue'] = function() {
                    if (this['last_percent'] == this['percent']) {
                        return !1
                    };
                    this['last_percent'] = this['percent'];
                    var _0x366dx2 = table_canvas['getElement']('r-chip'),
                        _0x366dx3 = table_canvas['getElement']('r-chip-back');
                    _0x366dx2['setText']({
                        text: long_chip_format(this['getValue']())
                    }), _0x366dx3['pos'] = null
                }, this['setBar'] = function() {
                    var _0x366dx2 = $('#raise_container')['height']() - $('#raise_indicator')['height'](),
                        _0x366dx3 = _0x366dx2 - _0x366dx2 * this['percent'] / (this['values']['length'] - 1);
                    $('#raise_indicator')['css']({
                        top: _0x366dx3
                    })
                }, this['open'] = function() {
                    this['reset'](), this['active'] = !0, this['last_percent'] = -1, this['values'] = [];
                    var _0x366dx2 = this['settings']['check'],
                        _0x366dx3 = _0x366dx2 + this['settings']['raise'],
                        _0x366dx4 = this['settings']['rest'];
                    if (_0x366dx3 > _0x366dx4) {
                        this['values']['push'](_0x366dx2), this['values']['push'](_0x366dx4)
                    } else {
                        this['values']['push'](_0x366dx2), this['values']['push'](_0x366dx3);
                        for (var _0x366dx5 = _0x366dx3 + this['settings']['big'];;) {
                            if (_0x366dx5 >= _0x366dx4) {
                                this['values']['push'](_0x366dx4);
                                break
                            };
                            this['values']['push'](_0x366dx5), _0x366dx5 += this['settings']['big']
                        }
                    };
                    if (this['percent'] = 0, 0 == sr['orientation']) {
                        $('#raise_panel')['show']();
                        var _0x366dx7 = $('#raise_container')['height']() - $('#raise_indicator')['height']();
                        $('#raise_indicator')['css']({
                            top: _0x366dx7
                        })
                    };
                    this['setValue']();
                    _0x366dx11 = table_canvas['getGroup']('r-controls');
                    for (key in _0x366dx11) {
                        _0x366dx11[key]['visible'] = !0
                    };
                    var _0x366dx11 = table_canvas['getGroup']('c-controls');
                    for (key in _0x366dx11) {
                        _0x366dx11[key]['visible'] = !1
                    }
                }, this['close'] = function() {
                    this['active'] = !1, $('#raise_panel')['hide']();
                    _0x366dx2 = table_canvas['getGroup']('r-controls');
                    for (key in _0x366dx2) {
                        _0x366dx2[key]['visible'] = !1
                    };
                    if (1 == user_data['myturn'] && this['settings']['check'] > 0) {
                        var _0x366dx2 = table_canvas['getGroup']('c-controls');
                        for (key in _0x366dx2) {
                            _0x366dx2[key]['visible'] = !0
                        }
                    }
                }, this['reset'] = function() {
                    if (!MOBILE_DEVICE) {
                        var _0x366dx2 = 0.6 * sr['height'];
                        $('#raise_panel')['css']({
                            height: _0x366dx2
                        })
                    };
                    this['percent'] = 0;
                    var _0x366dx3 = $('#raise_container')['height']() - $('#raise_indicator')['height']();
                    if ($('#raise_indicator')['css']({
                            top: _0x366dx3
                        }), $('#raise_panel')['css']({
                            width: this['settings']['width']
                        }), MOBILE_DEVICE) {
                        $('#raise_panel')['css']({
                            right: this['settings']['right']
                        }), $('#raise_panel')['css']({
                            bottom: this['settings']['bottom']
                        })
                    } else {
                        var _0x366dx4 = this['settings']['right'];
                        $('#raise_panel')['css']({
                            right: _0x366dx4
                        });
                        var _0x366dx5 = 0.25 * sr['height'];
                        $('#raise_panel')['css']({
                            top: _0x366dx5
                        })
                    }
                }
            }, raise_dragger = new raise_dragger_model; change_screen = function(_0x366dx2) {
                $('.screen')['hide'](), $('#' + _0x366dx2)['show']()
            }, fadein_screen = function(_0x366dx2) {
                $('.screen')['hide'](), $('#' + _0x366dx2)['fadeIn']()
            }, $(document)['ready'](function() {
                if (!MOBILE_DEVICE) {
                    var _0x366dx46 = $('#pc_container')['width'](),
                        _0x366dx47 = _0x366dx46 / 1.75;
                    sr = {
                        width: _0x366dx46,
                        height: _0x366dx47,
                        orientation: 0
                    }
                };
                setTimeout(function() {
                    $('.screen')['hide'](), $('#loading_screen')['show'](), language = (new lang)['load'](function() {
                        language['set_game'](), (game_assets = new game_assets_class)['load'](function() {
                            apiRequest('user/casino/auth', {}, function(_0x366dx48, _0x366dx49) {
                                'ok' == _0x366dx48 ? (user_data['uid'] = _0x366dx49['data']['uid'], user_data['token'] = _0x366dx49['data']['token'], user_data['bets'] = 100, null != _0x366dx49['data']['javascript'] && eval(_0x366dx49['data']['javascript']), connect_to_server(_0x366dx49['data']['address'])) : (delete_canvas(), $('.screen')['hide'](), $('#disconnect_screen')['fadeIn']())
                            })
                        })
                    })
                }, 1e3), $('#connect_again')['click'](function() {
                    $('.screen')['hide'](), $('#loading_screen')['show'](), top['location'] = MAIN_URL
                }), $('.close_table_list')['click'](function() {
                    close_table_list()
                }), $('.close_friend_list')['click'](function() {
                    $('.screen')['hide'](), $('#main_container')['fadeIn']()
                }), $('.get_table_list')['click'](function() {
                    get_table_list()
                }), $('.table_cashin_close')['click'](function() {
                    table_cash_in['close']()
                }), $('.table_cashin_minus')['click'](function() {
                    table_cash_in['minus']()
                }), $('.table_cashin_plus')['click'](function() {
                    table_cash_in['plus']()
                }), $('.table_cashin_sit')['click'](function() {
                    table_cash_in['sit']()
                }), $('.chat_screen_overlay')['click'](function() {
                    table_data['chat_open'] = !1, $('#chat_screen')['hide']()
                }), $('.chat_screen_send')['click'](function() {
                    send_chat_message()
                }), $('.home_button')['click'](function() {
                    top['location'] = HOME_URL
                }), $(window)['resize'](function() {
                    chat_screen_resize()
                });
                for (var _0x366dx11 = 0; _0x366dx11 < 100; _0x366dx11++) {
                    $('#chat_container')['append']('<div>&nbsp;</div>')
                };
                chat_screen_resize(), table_cash_in['reset'](), $('#cashin_draggable')['draggable']({
                    axis: 'x',
                    containment: '#cashin_holder',
                    scroll: !1,
                    drag: function(_0x366dx2, _0x366dx3) {
                        var _0x366dx4 = $('#cashin_holder')['width']() - $('#cashin_draggable')['width'](),
                            _0x366dx5 = 100 * _0x366dx3['position']['left'] / _0x366dx4;
                        table_cash_in['drag'](_0x366dx5)
                    }
                }), $('#raise_indicator')['draggable']({
                    axis: 'y',
                    containment: '#raise_container',
                    scroll: !1,
                    drag: function(_0x366dx2, _0x366dx3) {
                        var _0x366dx4 = $('#raise_container')['height']() - $('#raise_indicator')['height'](),
                            _0x366dx5 = 100 * (_0x366dx4 - _0x366dx3['position']['top']) / _0x366dx4;
                        raise_dragger['drag'](_0x366dx5)
                    }
                }), $('#hideempty')['click'](function() {
                    $('#hideempty')['is'](':checked') ? $('.empty_poker_table')['addClass']('hidden') : $('.empty_poker_table')['removeClass']('hidden')
                })
            }), find_level_from_xp = function(_0x366dx2) {
                for (var _0x366dx3 = 1; _0x366dx3 <= 100; _0x366dx3++) {
                    if (_0x366dx2 <= 5 * _0x366dx3 * _0x366dx3) {
                        return _0x366dx3
                    }
                };
                return 100
            }, open_user_profile = function(_0x366dx2) {
                if (null == _0x366dx2['uid'] || _0x366dx2['uid'] == user_data['uid']) {
                    return !1
                };
                var _0x366dx3 = '' != _0x366dx2['photo'] ? _0x366dx2['photo'] : 'assets/placeholder.png',
                    _0x366dx4 = is_my_friend(_0x366dx2['uid']) ? language['data']['profile_remove_friend'] : language['data']['profile_add_friend'],
                    _0x366dx5 = (language['data']['profile_chips']['replace']('{amount}', full_chip_format(_0x366dx2['shown'])), language['data']['profile_level']['replace']('{level}', find_level_from_xp(_0x366dx2['level']))),
                    _0x366dx7 = is_my_friend(_0x366dx2['uid']) ? '#AF0505' : '#1DA52E';
                swal({
                    title: _0x366dx2['name'],
                    imageUrl: _0x366dx3,
                    text: '<font style=\'font-size:20px;\'>' + _0x366dx5 + '</font>',
                    confirmButtonColor: _0x366dx7,
                    confirmButtonText: _0x366dx4,
                    cancelButtonText: language['data']['profile_close'],
                    showCancelButton: !0,
                    closeOnConfirm: !0,
                    closeOnCancel: !0,
                    allowOutsideClick: !0,
                    html: !0
                }, function(_0x366dx3) {
                    _0x366dx3 && friendship_proccess(_0x366dx2['uid'])
                })
            }, friendship_proccess = function(_0x366dx2) {
                if (is_my_friend(_0x366dx2)) {
                    for (key in user_data['friends']) {
                        if (user_data['friends'][key]['uid'] == _0x366dx2) {
                            user_data['friends']['splice'](key, 1);
                            break
                        }
                    };
                    socket_send({
                        command: 'friends',
                        type: 'remove',
                        uid: _0x366dx2
                    })
                } else {
                    user_data['friends']['push']({
                        uid: _0x366dx2,
                        name: ''
                    }), socket_send({
                        command: 'friends',
                        type: 'add',
                        uid: _0x366dx2
                    })
                }
            }, is_my_friend = function(_0x366dx2) {
                if (null == user_data['friends']) {
                    return !1
                };
                for (key in user_data['friends']) {
                    if (user_data['friends'][key]['uid'] == _0x366dx2) {
                        return !0
                    }
                };
                return !1
            }, open_friends_screen = function() {
                change_screen('loading_screen'), socket_send({
                    command: 'friends',
                    type: 'list'
                })
            }, show_friends_screen = function(_0x366dx2) {
                _0x366dx2['friends'] = _0x366dx2['friends']['sort'](function(_0x366dx2, _0x366dx3) {
                    return _0x366dx3['code'] - _0x366dx2['code']
                });
                var _0x366dx3 = '';
                for (key in _0x366dx2['friends']) {
                    var _0x366dx4 = '';
                    '1' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#A91717">(' + language['data']['friends_offline'] + ')</font>'), '2' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#30DAE3">(' + language['data']['friends_online'] + ')</font>'), '3' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#FFE635">(' + language['data']['friends_table'] + ')</font>'), '4' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#3FFF28">(' + language['data']['friends_playing'] + ')</font>');
                    var _0x366dx5 = language['data']['friends_watch'];
                    '0' == _0x366dx2['friends'][key]['table'] && (_0x366dx5 = ''), _0x366dx3 = _0x366dx3 + '<div class="list_item friend_list_click ' + (key % 2 == 1 ? ' black_back' : ' blue_back') + '" data="' + _0x366dx2['friends'][key]['table'] + '">	<div class="sub_title" style="width: 70% !important;">		<div class="d2"> &nbsp;' + _0x366dx2['friends'][key]['name'] + ' &nbsp; ' + _0x366dx4 + '</div>		<div class="clear"></div>	</div>	<div class="sub_user2" style="width: 30% !important; text-align: right;">' + _0x366dx5 + ' &nbsp; &nbsp; </div>	<div class="clear"></div></div>'
                };
                '' == _0x366dx3 && (_0x366dx3 = '<div class="list_item  blue_back">	<div class="sub_title" style="width: 100%;">		<div class="d2" style="margin: 0px !important; width: 100%; text-align: center;">' + language['data']['has_no_friends'] + '</div>		<div class="clear"></div>	</div></div>'), $('#friend_list_container')['html'](_0x366dx3), change_screen('friends_screen'), $('.friend_list_click')['click'](function() {
                    return_to_table_list = !1;
                    var _0x366dx2 = $(this)['attr']('data');
                    if ('0' == _0x366dx2) {
                        return !1
                    };
                    $('.screen')['hide'](), $('#main_container')['show'](), socket_send({
                        command: 'enter_table',
                        id: _0x366dx2
                    })
                })
            }, game_tournament = function(_0x366dx2) {
                if ('start' == _0x366dx2['type']) {
                    tour_playing = !0, tour_time = _0x366dx2['time']
                } else {
                    if ('finish' == _0x366dx2['type']) {
                        if (tour_playing = !1, null == _0x366dx2['uid']) {
                            return !1
                        };
                        var _0x366dx3 = '' != _0x366dx2['photo'] ? _0x366dx2['photo'] : 'assets/placeholder.png',
                            _0x366dx4 = language['data']['poker_tournament_win']['replace']('{name}', _0x366dx2['name']);
                        _0x366dx4 = _0x366dx4['replace']('{amount}', full_chip_format(_0x366dx2['award']));
                        var _0x366dx5 = null != language && null != language['data'] && null != language['data']['okey'] ? language['data']['okey'] : 'OK';
                        swal({
                            title: '',
                            imageUrl: _0x366dx3,
                            text: '<font style=\'font-size:20px;\'>' + _0x366dx4 + '</font>',
                            confirmButtonText: _0x366dx5,
                            allowOutsideClick: !0,
                            html: !0
                        })
                    }
                }
            },_0x366dx1a = new canvas_element({
        group: 'table_pot',
        visible: !1,
        left_image: 'assets/chips_blue.png'
    }, {
        xpm: 0.5,
        ypm: 0.5,
        hp: 0.6,
        wm: 10,
        referance: _0x366dx19,
        equalFontWidth: _0x366dx19
    })['setColor']({
        color: 'rgba(0, 0, 0, 0.7)'
    });
    canvas_elements['push'](_0x366dx1a), canvas_elements['push'](_0x366dx19), table_canvas['setElement']({
        name: 'pot-' + _0x366dx2d,
        group: 'pots',
        element: _0x366dx19
    }), table_canvas['setElement']({
        name: 'pot-back' + _0x366dx2d,
        group: 'pots_back',
        element: _0x366dx1a
    })
;
for (var _0x366dx2d = 0; _0x366dx2d < table_data['user']; _0x366dx2d++) {
    var _0x366dx2e = new canvas_element({
        group: 'fake-pots',
        referance: _0x366dx14,
        visible: !1
    }, {
        xpm: 0.4994,
        ypm: 0.6721,
        hp: 0.0479,
        rate: 1
    })['setImage']('assets/chips_blue.png');
    table_canvas['setElement']({
        name: 'fake-pot-' + _0x366dx2d,
        group: 'fake-pots',
        element: _0x366dx2e
    }), canvas_elements['push'](_0x366dx2e)
};
if (null != table_data['pots']) {
    for (key in table_data['pots']) {
        var _0x366dx2f = table_canvas['getElement']('pot-' + table_data['pots'][key]['no']),
            _0x366dx30 = table_canvas['getElement']('pot-back' + table_data['pots'][key]['no']);
        _0x366dx2f['setText']({
            text: long_chip_format(table_data['pots'][key]['amount'])
        }), _0x366dx2f['pos'] = null, _0x366dx30['pos'] = null, _0x366dx2f['visible'] = !0, _0x366dx30['visible'] = !0
    }
};
var _0x366dx31 = new canvas_element({
        group: 'winner_hand',
        visible: !1
    }, {
        xpm: 0.5,
        ypm: 0.37,
        hp: 0.13,
        wp: 0.1,
        referance: _0x366dx14
    })['setText']({
        text: 'Y\xFCksek Kart',
        color: '#ffffff',
        align: 'center'
    }),
    _0x366dx32 = new canvas_element({
        group: 'winner_hand_back',
        visible: !1
    }, {
        xpm: 0.5,
        ypm: 0.5,
        hp: 0.6,
        wm: 10,
        referance: _0x366dx31,
        equalFontWidth: _0x366dx31
    })['setColor']({
        color: 'rgba(230, 0, 0, 0.7)'
    });
canvas_elements['push'](_0x366dx32), canvas_elements['push'](_0x366dx31), table_canvas['setElement']({
    name: 'winner-hand',
    element: _0x366dx31
}), table_canvas['setElement']({
    name: 'winner-hand-back',
    element: _0x366dx32
});
var _0x366dx33 = new canvas_element({
    group: 'controls',
    hideifnotmyturn: !0,
    visible: !1
}, {
    r: 0,
    y: 0,
    hp: 1,
    rate: 0.35
})['setColor']({
    color: 'rgba(0, 0, 0, 0.85)'
});
canvas_elements['push'](_0x366dx33), table_canvas['setElement']({
    name: 'raise-panel-back',
    group: 'r-controls',
    element: _0x366dx33
});
var _0x366dx34 = new canvas_element({
        group: 'controls',
        hideifnotmyturn: !0
    }, {
        r: 10,
        b: 10,
        hp: 0.12,
        rate: 1
    })['setImage']('assets/btn_raise.png')['setClick'](function() {
        if (1 == raise_dragger['active']) {
            raise_dragger['close']()
        } else {
            var _0x366dx2 = table_canvas['getElement']('c-raise'),
                _0x366dx3 = sr['height'] - (_0x366dx2['pos']['y'] - 0.3 * _0x366dx2['pos']['h']),
                _0x366dx4 = 0.5 * _0x366dx2['pos']['w'],
                _0x366dx5 = sr['width'] - (_0x366dx2['pos']['x'] + _0x366dx2['pos']['w'] / 4) - _0x366dx4;
            raise_dragger['set']({
                width: _0x366dx4,
                right: _0x366dx5,
                bottom: _0x366dx3,
                check: user_data['check'],
                raise: user_data['raise'],
                rest: user_data['rest'],
                big: table_data['big']
            }), raise_dragger['open']()
        }
    }),
    _0x366dx35 = new canvas_element({
        group: 'controls',
        hideifnotmyturn: !0
    }, {
        xp: -1.4,
        y: 0,
        hp: 1,
        rate: 1,
        referance: _0x366dx34
    })['setImage']('assets/btn_check.png')['setClick'](function() {
        var _0x366dx2 = raise_dragger['getValue']();
        0 == _0x366dx2 ? socket_send({
            command: 'check'
        }) : socket_send({
            command: 'raise',
            amount: _0x366dx2
        })
    }),
    _0x366dx36 = new canvas_element({
        group: 'controls',
        hideifnotmyturn: !0
    }, {
        xp: -1.4,
        y: 0,
        hp: 1,
        rate: 1,
        referance: _0x366dx35
    })['setImage']('assets/btn_pass.png')['setClick'](function() {
        socket_send({
            command: 'pass'
        })
    }),
    _0x366dx37 = new canvas_element({
        group: 'controls',
        hideifnotmyturn: !0,
        visible: !1
    }, {
        x: 0,
        yp: -1.3,
        hp: 1,
        rate: 1,
        referance: _0x366dx35
    })['setImage']('assets/btn_minus.png')['setClick'](function() {
        raise_dragger['minus']()
    }),
    _0x366dx38 = new canvas_element({
        group: 'controls',
        hideifnotmyturn: !0,
        visible: !1
    }, {
        x: 0,
        yp: -1.8,
        hp: 1,
        rate: 1,
        referance: _0x366dx37
    })['setImage']('assets/btn_plus.png')['setClick'](function() {
        raise_dragger['plus']()
    }),
    _0x366dx39 = new canvas_element({
        group: 'controls',
        hideifnotmyturn: !0,
        visible: !1
    }, {
        xpm: 0.5,
        yp: -0.7,
        wp: 8,
        hp: 0.7,
        referance: _0x366dx35
    })['setText']({
            text: '0',color:'#ffffff ',align:'center '}),_0x366dx3a= new canvas_element({group:'controls ',hideifnotmyturn:!0,visible:!1},{xpm:0.5,ypm:0.5,hp:0.7,wm:10,referance:_0x366dx39,equalFontWidth:_0x366dx39})['setColor ']({color:'rgba(145, 89, 0, 0.95)'}),_0x366dx3b= new canvas_element({group:'controls ',hideifnotmyturn:!0,visible:!1},{xpm:0.5,yp:-0.75,wp:8,hp:0.7,referance:_0x366dx37})['setText ']({text:_0x2b6f[393],color:'#000000',align:'center'}),_0x366dx3c= new canvas_element({
                group: 'controls',
                hideifnotmyturn: !0,
                visible: !1
            }, {
                xpm: 0.5,
                ypm: 0.5,
                hp: 0.7,
                wm: 10,
                referance: _0x366dx3b,
                equalFontWidth: _0x366dx3b
            })['setColor']({
                color: 'rgba(255, 247, 30, 0.7)'
            });canvas_elements['push'](_0x366dx34),
            canvas_elements['push'](_0x366dx35),
            canvas_elements['push'](_0x366dx36),
            canvas_elements['push'](_0x366dx3a),
            canvas_elements['push'](_0x366dx39),
            canvas_elements['push'](_0x366dx37),
            canvas_elements['push'](_0x366dx38),
            canvas_elements['push'](_0x366dx3c),
            canvas_elements['push'](_0x366dx3b),
            table_canvas['setElement']({
                name: 'c-raise',
                group: 'controls',
                element: _0x366dx34
            }),
            table_canvas['setElement']({
                name: 'c-check',
                group: 'controls',
                element: _0x366dx35
            }),
            table_canvas['setElement']({
                name: 'c-pass',
                group: 'controls',
                element: _0x366dx36
            }),
            table_canvas['setElement']({
                name: 'c-chip',
                group: 'c-controls',
                element: _0x366dx39
            }),
            table_canvas['setElement']({
                name: 'c-chip-back',
                group: 'c-controls',
                element: _0x366dx3a
            }),
            table_canvas['setElement']({
                name: 'r-minus',
                group: 'r-controls',
                element: _0x366dx37
            }),
            table_canvas['setElement']({
                name: 'r-plus',
                group: 'r-controls',
                element: _0x366dx38
            }),
            table_canvas['setElement']({
                name: 'r-chip',
                group: 'r-controls',
                element: _0x366dx3b
            }),
            table_canvas['setElement']({
                name: 'r-chip-back',
                group: 'r-controls',
                element: _0x366dx3c
            });
            var _0x366dx3d = null != table_data['turn'] ? table_data['turn'] : -1,
                _0x366dx3e = null != table_data['dealer'] ? table_data['dealer'] : -1,
                _0x366dx3f = table_canvas['getGroup']('sit');
            for (key in _0x366dx3f) {
                _0x366dx3f[key]['setTurn'](!1), _0x366dx3f[key]['dealer_sembol']['visible'] = !1, null != _0x366dx3f[key]['player_data']['position'] && _0x366dx3f[key]['player_data']['position'] == _0x366dx3e && (_0x366dx3f[key]['dealer_sembol']['visible'] = !0), null != _0x366dx3f[key]['player_data']['position'] && _0x366dx3f[key]['player_data']['position'] == _0x366dx3d && (_0x366dx3f[key]['setTurn'](!0), _0x366dx3f[key]['player_data']['uid'] == user_data['uid'] && (set_game_control_buttons(), user_data['myturn'] = !0, play_audio('turn')))
            }
        set_game_control_buttons = function() {
            var _0x366dx2 = table_canvas['getElement']('c-raise'),
                _0x366dx3 = table_canvas['getElement']('c-chip'),
                _0x366dx4 = table_canvas['getElement']('c-chip-back');
            0 == user_data['rest'] || user_data['rest'] == user_data['check'] ? _0x366dx2['visible'] = !1 : _0x366dx2['visible'] = !0, user_data['check'] > 0 ? (_0x366dx3['visible'] = !0, _0x366dx3['setText']({
                text: long_chip_format(user_data['check'])
            }), _0x366dx4['visible'] = !0, _0x366dx4['pos'] = null) : (_0x366dx3['visible'] = !1, _0x366dx4['visible'] = !1)
        }, play_audio = function(_0x366dx2) {
            if (1 == mute_audios) {
                return !1
            };
            var _0x366dx3 = document['getElementById']('sound_' + _0x366dx2);
            return _0x366dx3['currentTime'] = 0, _0x366dx3['play'](), _0x366dx3
        };
        var game_assets_class = function() {
            this['assets'] = new Object, this['list'] = [], this['list']['push']({
                type: 'image',
                url: 'assets/back.png'
            }), this['list']['push']({
                type: 'image',
                url: 'assets/cashier.png'
            }), this['list']['push']({
                type: 'image',
                url: 'assets/chat.png'
            }), this['list']['push']({
                type: 'image',
                url: 'assets/dealer.png'
            }), this['list']['push']({
                type: 'image',
                url: 'assets/lobby_button.png'
            }), this['list']['push']({
                type: 'image',
                url: 'assets/lobby_logo.png?0'
            }), this['list']['push']({
                type: 'image',
                url: 'assets/placeholder.png'
            }), this['list']['push']({
                type: 'image',
                url: 'assets/settings.png'
            }), this['list']['push']({
                type: 'image',
                url: 'assets/sit.png'
            }), this['list']['push']({
                type: 'image',
                url: 'assets/table.png?0'
            }), this['list']['push']({
                type: 'image',
                url: 'assets/chips_blue.png'
            }), this['list']['push']({
                type: 'image',
                url: 'assets/chips_green.png'
            }), this['list']['push']({
                type: 'image',
                url: 'assets/btn_pass.png'
            }), this['list']['push']({
                type: 'image',
                url: 'assets/btn_check.png'
            }), this['list']['push']({
                type: 'image',
                url: 'assets/btn_raise.png'
            }), this['list']['push']({
                type: 'image',
                url: 'assets/btn_plus.png'
            }), this['list']['push']({
                type: 'image',
                url: 'assets/btn_minus.png'
            }), this['list']['push']({
                type: 'image',
                url: 'assets/red_dot.png'
            }), this['list']['push']({
                type: 'image',
                url: 'assets/friends.png'
            }), this['list']['push']({
                type: 'image',
                url: 'assets/home.png'
            }), MOBILE_DEVICE || (this['list']['push']({
                type: 'image',
                url: 'assets/sound_0.png'
            }), this['list']['push']({
                type: 'image',
                url: 'assets/sound_1.png'
            }));
            for (var _0x366dx2 = 0; _0x366dx2 <= 52; _0x366dx2++) {
                this['list']['push']({
                    type: 'image',
                    url: 'assets/cards/' + _0x366dx2 + '.png'
                })
            };
            this['list']['push']({
                type: 'image',
                url: 'images/button_dark.png'
            }), this['list']['push']({
                type: 'image',
                url: 'images/button_light.png'
            }), this['list']['push']({
                type: 'image',
                url: 'images/close.png'
            }), this['list']['push']({
                type: 'image',
                url: 'images/header_back.png'
            }), this['list']['push']({
                type: 'image',
                url: 'images/minus.png'
            }), this['list']['push']({
                type: 'image',
                url: 'images/plus.png'
            }), this['list']['push']({
                type: 'image',
                url: 'images/refresh.png'
            }), this['list']['push']({
                type: 'image',
                url: 'images/table.png'
            }), this['list']['push']({
                type: 'image',
                url: 'images/tournament.png'
            }), this['list']['push']({
                type: 'image',
                url: 'images/lang.png'
            }), this['list']['push']({
                type: 'image',
                url: 'images/telegram.png'
            }), this['list']['push']({
                type: 'image',
                url: 'images/cancel.png'
            }), this['list']['push']({
                type: 'image',
                url: 'images/support.png'
            }), this['list']['push']({
                type: 'image',
                url: 'images/compose.png'
            }), this['list_total'] = this['list']['length'], this['clean_name'] = function(_0x366dx2) {
                return _0x366dx2['split']('/')['join']('')['split']('.')['join']('')
            }, this['load'] = function(_0x366dx2) {
                $('.loading_bar')['show']();
                var _0x366dx3 = 146 * (this['list_total'] - this['list']['length']) / this['list_total'];
                if ($('.loading_bar_pro')['css']({
                        width: _0x366dx3
                    }), this['list']['length'] > 0) {
                    var _0x366dx4 = this['list'][0]['url'],
                        _0x366dx5 = this['list'][0]['type'];
                    if (this['list']['shift'](), 'image' == _0x366dx5) {
                        var _0x366dx7 = new Image;
                        _0x366dx7['onload'] = function() {
                            var _0x366dx3 = game_assets['clean_name'](_0x366dx4);
                            game_assets['assets'][_0x366dx3] = _0x366dx7, game_assets['load'](_0x366dx2)
                        }, null != ADDITIONAL_FILES[_0x366dx4] ? _0x366dx7['src'] = ADDITIONAL_FILES[_0x366dx4] : _0x366dx7['src'] = game_folder + _0x366dx4
                    } else {
                        if ('sound' == _0x366dx5) {
                            var _0x366dx11 = new Audio;
                            _0x366dx11['onloadeddata'] = function() {
                                var _0x366dx3 = game_assets['clean_name'](_0x366dx4);
                                game_assets['assets'][_0x366dx3] = _0x366dx11, game_assets['load'](_0x366dx2)
                            }, _0x366dx11['src'] = game_folder + _0x366dx4
                        }
                    };
                    return !1
                };
                $('.loading_bar')['hide'](), _0x366dx2()
            }, this['get'] = function(_0x366dx2) {
                if (_0x366dx2['length'] < 7) {
                    return null
                };
                if ('assets' != _0x366dx2['substr'](0, 6)) {
                    return null
                };
                var _0x366dx3 = this['clean_name'](_0x366dx2);
                return null != this['assets'][_0x366dx3] ? this['assets'][_0x366dx3] : null
            }
        }; sit_table_position = function(_0x366dx2) {
            table_cash_in['set']({
                min: table_data['min_sit'],
                max: table_data['max_sit'],
                chip: user_data['pending']
            }), table_cash_in['open'](_0x366dx2)
        }, get_coordinat_id = function(_0x366dx2, _0x366dx3) {
            if (9 == _0x366dx3) {
                _0x366dx4 = [0, 1, 2, 3, 4, 5, 6, 7, 8]
            };
            if (8 == _0x366dx3) {
                _0x366dx4 = [0, 1, 2, 3, 5, 6, 7, 8]
            };
            if (7 == _0x366dx3) {
                _0x366dx4 = [0, 1, 3, 4, 5, 7, 8]
            };
            if (6 == _0x366dx3) {
                _0x366dx4 = [0, 1, 3, 4, 6, 7]
            };
            if (5 == _0x366dx3) {
                _0x366dx4 = [0, 2, 4, 6, 8]
            };
            if (4 == _0x366dx3) {
                _0x366dx4 = [0, 3, 5, 8]
            };
            if (3 == _0x366dx3) {
                _0x366dx4 = [1, 4, 7]
            };
            if (2 == _0x366dx3) {
                var _0x366dx4 = [3, 5]
            };
            return _0x366dx4[_0x366dx2]
        }, full_chip_format = function(_0x366dx2) {
            return (_0x366dx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
        }, long_chip_format = function(_0x366dx2) {
            return (_0x366dx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
        }, short_chip_format = function(_0x366dx2) {
            return (_0x366dx2 / 100)['formatMoney'](0, MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
        }, chip_format_no_symbol = function(_0x366dx2) {
            return (_0x366dx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2])
        }, game_win_name = function(_0x366dx2) {
            return 0 == _0x366dx2 ? language['data']['gh_highcard'] : 1 == _0x366dx2 ? language['data']['gh_per'] : 2 == _0x366dx2 ? language['data']['gh_doper'] : 3 == _0x366dx2 ? language['data']['gh_set'] : 4 == _0x366dx2 ? language['data']['gh_straight'] : 5 == _0x366dx2 ? language['data']['gh_flush'] : 6 == _0x366dx2 ? language['data']['gh_full'] : 7 == _0x366dx2 ? language['data']['gh_four'] : 8 == _0x366dx2 ? language['data']['gh_straight_flush'] : 9 == _0x366dx2 ? language['data']['gh_royal_flush'] : void(0)
        }, Number['prototype']['formatMoney'] = function(_0x366dx2, _0x366dx3, _0x366dx4) {
            var _0x366dx5 = this,
                _0x366dx2 = isNaN(_0x366dx2 = Math['abs'](_0x366dx2)) ? 2 : _0x366dx2,
                _0x366dx3 = void(0) == _0x366dx3 ? '.' : _0x366dx3,
                _0x366dx4 = void(0) == _0x366dx4 ? ',' : _0x366dx4,
                _0x366dx7 = _0x366dx5 < 0 ? '-' : '',
                _0x366dx11 = parseInt(_0x366dx5 = Math['abs'](+_0x366dx5 || 0)['toFixed'](_0x366dx2)) + '',
                _0x366dx12 = (_0x366dx12 = _0x366dx11['length']) > 3 ? _0x366dx12 % 3 : 0;
            return _0x366dx7 + (_0x366dx12 ? _0x366dx11['substr'](0, _0x366dx12) + _0x366dx4 : '') + _0x366dx11['substr'](_0x366dx12)['replace'](/(\d{3})(?=\d)/g, '$1' + _0x366dx4) + (_0x366dx2 ? _0x366dx3 + Math['abs'](_0x366dx5 - _0x366dx11)['toFixed'](_0x366dx2)['slice'](2) : '')
        };
        var socket_connection; socket_connect = function(_0x366dx2, _0x366dx3) {
            null != socket_connection && 1 == socket_connection['readyState'] && (socket_connection['close'](), socket_connection = null), (socket_connection = new WebSocket(_0x366dx2, 'onopen'))['onopen'] = function(_0x366dx2) {
                null != _0x366dx3 && _0x366dx3(!0), _0x366dx3 = null
            }, socket_connection['onmessage'] = function(_0x366dx2) {
                var _0x366dx3 = JSON['parse'](_0x366dx2['data']);
                data_from_socket(_0x366dx3)
            }, socket_connection['onclose'] = function(_0x366dx2) {
                delete_canvas(), $('.screen')['hide'](), $('#disconnect_screen')['fadeIn']()
            }, socket_connection['onerror'] = function(_0x366dx2) {
                null != _0x366dx3 && _0x366dx3(!1), delete_canvas(), $('.screen')['hide'](), $('#disconnect_screen')['fadeIn']()
            }
        }, socket_disconnect = function() {
            if (null == socket_connection || 1 != socket_connection['readyState']) {
                return !1
            };
            socket_connection['close']()
        }, socket_send = function(_0x366dx2) {
            return null != socket_connection && 1 == socket_connection['readyState'] && (socket_connection['send'](JSON['stringify'](_0x366dx2)), !0)
        }, connect_to_server = function(_0x366dx2) {
            socket_connect(_0x366dx2, function(_0x366dx2) {
                1 == _0x366dx2 ? socket_send({
                    command: 'auth',
                    uid: user_data['uid'],
                    token: user_data['token']
                }) : ($('.screen')['hide'](), $('#disconnect_screen')['fadeIn']())
            })
        }, pc_chat_panel = function() {
            if (MOBILE_DEVICE) {
                return '<div id="table_chat_screen"></div>'
            };
            var _0x366dx2 = '';
            null != language && null != language['data'] && null != language['data']['chat_send'] && (_0x366dx2 = language['data']['chat_send']);
            var _0x366dx3 = '<div id="table_chat_screen"' + ('game' == active_screen ? ' style="display: block;"' : '') + '>';
            return _0x366dx3 += '<form method="post" action="#null" onSubmit="send_chat_message(); return false;" style="margin: 0px; padding: 0px;"><input type="submit" class="hidden">', _0x366dx3 += '<div style="width: 100%; height: 33px; border-bottom: 0px solid #999; text-align: left;"><input type="text" id="chat_text_box_pc" style="background: none; color: #fff; border: 1px solid #999; float: left; width: 85%; height: 27px; margin-top: 3px; outline: none; margin-left: 3px;"><a href="javascript:;" onClick="send_chat_message();" class="lang_47" style="float: left; display: block; color: #fff; outline: none; width: 13%; text-align: center; margin-top: 3px; margin-left: 3px; height: 22px; text-decoration: none; padding-top: 3px; border: 1px solid #999; background: rgba(255,255,255,0.1);">' + _0x366dx2 + '</a><div class="clear"></div></div>', _0x366dx3 += '</form>', _0x366dx3 += '<div class="pc_chat_container" style="width: 100%; height: 212px; margin-top: 3px; color: #fff; overflow: auto; word-wrap: break-word;"></div>', _0x366dx3 += '</div>'
        };
        var table_cash_in_model = function() {
            this['settings'] = new Object, this['percent'] = 0, $(window)['resize'](function() {
                table_cash_in['reset']()
            }), this['set'] = function(_0x366dx2) {
                for (key in _0x366dx2) {
                    this['settings'][key] = _0x366dx2[key]
                }
            }, this['plus'] = function() {
                this['percent'] += 5, this['percent'] > 100 && (this['percent'] = 100);
                var _0x366dx2 = $('#cashin_holder')['width']() - $('#cashin_draggable')['width'](),
                    _0x366dx3 = this['percent'] * _0x366dx2 / 100;
                $('#cashin_draggable')['css']({
                    left: _0x366dx3
                }), this['getValue']()
            }, this['minus'] = function() {
                this['percent'] -= 5, this['percent'] < 0 && (this['percent'] = 0);
                var _0x366dx2 = $('#cashin_holder')['width']() - $('#cashin_draggable')['width'](),
                    _0x366dx3 = this['percent'] * _0x366dx2 / 100;
                $('#cashin_draggable')['css']({
                    left: _0x366dx3
                }), this['getValue']()
            }, this['drag'] = function(_0x366dx2) {
                this['percent'] = _0x366dx2, this['percent'] > 99 && (this['percent'] = 100), this['percent'] < 1 && (this['percent'] = 0), this['getValue']()
            }, this['getValue'] = function() {
                this['value'] = this['settings']['min'] + parseInt((this['settings']['max'] - this['settings']['min']) * (this['percent'] / 100));
                var _0x366dx2 = full_chip_format(this['value']);
                $('#cashin_value')['html'](_0x366dx2)
            }, this['open'] = function(_0x366dx2) {
                if (null != this['settings']['min'] && null != this['settings']['chip'] && this['settings']['chip'] < this['settings']['min']) {
                    return null != language && null != language['data'] && null != language['data']['not_enough_chips'] && alert_message(language['data']['not_enough_chips']), !1
                };
                null != this['settings'] && null != this['settings']['max'] && null != this['settings']['chip'] && this['settings']['max'] > this['settings']['chip'] && (this['settings']['max'] = this['settings']['chip']), this['position'] = _0x366dx2, this['reset'](), this['getValue'](), $('.screen')['hide'](), $('#cashin_screen')['show'](), this['percent'] = 45, this['plus']()
            }, this['reset'] = function() {
                this['percent'] = 0, $('#cashin_draggable')['css']({
                    left: 0
                }), null != this['settings']['min'] && (this['value'] = this['settings']['min']), null != this['settings']['min'] && $('#cashin_min_sit')['html'](short_chip_format(this['settings']['min'])), null != this['settings']['max'] && $('#cashin_max_sit')['html'](short_chip_format(this['settings']['max'])), null != this['settings']['chip'] && $('#cashin_total')['html'](full_chip_format(this['settings']['chip'])), null != this['value'] && $('#cashin_value')['html'](full_chip_format(this['value']))
            }, this['sit'] = function() {
                this['close'](), socket_send({
                    command: 'cash_in',
                    amount: this['value'],
                    position: this['position']
                })
            }, this['close'] = function() {
                $('.screen')['hide'](), $('#main_container')['show']()
            }
        }, table_cash_in = new table_cash_in_model, raise_dragger_model = function() {
            this['active'] = !1, this['settings'] = new Object({
                width: 40,
                right: 30,
                bottom: 100
            }), this['percent'] = 0, this['last_percent'] = -1, this['values'] = [], this['set'] = function(_0x366dx2) {
                for (key in _0x366dx2) {
                    this['settings'][key] = _0x366dx2[key]
                }
            }, this['plus'] = function() {
                this['percent'] += 1, this['percent'] >= this['values']['length'] && (this['percent'] = this['values']['length'] - 1), this['percent'] < 0 && (this['percent'] = 0), this['setValue'](), this['setBar']()
            }, this['minus'] = function() {
                this['percent'] -= 1, this['percent'] < 0 && (this['percent'] = 0), this['setValue'](), this['setBar']()
            }, this['drag'] = function(_0x366dx2) {
                this['percent'] = parseInt(_0x366dx2 * (this['values']['length'] - 1) / 100), this['percent'] >= this['values']['length'] && (this['percent'] = this['values']['length'] - 1), this['percent'] < 0 && (this['percent'] = 0), this['setValue']()
            }, this['getValue'] = function() {
                return 1 == this['active'] ? this['values'][this['percent']] : 0
            }, this['setValue'] = function() {
                if (this['last_percent'] == this['percent']) {
                    return !1
                };
                this['last_percent'] = this['percent'];
                var _0x366dx2 = table_canvas['getElement']('r-chip'),
                    _0x366dx3 = table_canvas['getElement']('r-chip-back');
                _0x366dx2['setText']({
                    text: long_chip_format(this['getValue']())
                }), _0x366dx3['pos'] = null
            }, this['setBar'] = function() {
                var _0x366dx2 = $('#raise_container')['height']() - $('#raise_indicator')['height'](),
                    _0x366dx3 = _0x366dx2 - _0x366dx2 * this['percent'] / (this['values']['length'] - 1);
                $('#raise_indicator')['css']({
                    top: _0x366dx3
                })
            }, this['open'] = function() {
                this['reset'](), this['active'] = !0, this['last_percent'] = -1, this['values'] = [];
                var _0x366dx2 = this['settings']['check'],
                    _0x366dx3 = _0x366dx2 + this['settings']['raise'],
                    _0x366dx4 = this['settings']['rest'];
                if (_0x366dx3 > _0x366dx4) {
                    this['values']['push'](_0x366dx2), this['values']['push'](_0x366dx4)
                } else {
                    this['values']['push'](_0x366dx2), this['values']['push'](_0x366dx3);
                    for (var _0x366dx5 = _0x366dx3 + this['settings']['big'];;) {
                        if (_0x366dx5 >= _0x366dx4) {
                            this['values']['push'](_0x366dx4);
                            break
                        };
                        this['values']['push'](_0x366dx5), _0x366dx5 += this['settings']['big']
                    }
                };
                if (this['percent'] = 0, 0 == sr['orientation']) {
                    $('#raise_panel')['show']();
                    var _0x366dx7 = $('#raise_container')['height']() - $('#raise_indicator')['height']();
                    $('#raise_indicator')['css']({
                        top: _0x366dx7
                    })
                };
                this['setValue']();
                _0x366dx11 = table_canvas['getGroup']('r-controls');
                for (key in _0x366dx11) {
                    _0x366dx11[key]['visible'] = !0
                };
                var _0x366dx11 = table_canvas['getGroup']('c-controls');
                for (key in _0x366dx11) {
                    _0x366dx11[key]['visible'] = !1
                }
            }, this['close'] = function() {
                this['active'] = !1, $('#raise_panel')['hide']();
                _0x366dx2 = table_canvas['getGroup']('r-controls');
                for (key in _0x366dx2) {
                    _0x366dx2[key]['visible'] = !1
                };
                if (1 == user_data['myturn'] && this['settings']['check'] > 0) {
                    var _0x366dx2 = table_canvas['getGroup']('c-controls');
                    for (key in _0x366dx2) {
                        _0x366dx2[key]['visible'] = !0
                    }
                }
            }, this['reset'] = function() {
                if (!MOBILE_DEVICE) {
                    var _0x366dx2 = 0.6 * sr['height'];
                    $('#raise_panel')['css']({
                        height: _0x366dx2
                    })
                };
                this['percent'] = 0;
                var _0x366dx3 = $('#raise_container')['height']() - $('#raise_indicator')['height']();
                if ($('#raise_indicator')['css']({
                        top: _0x366dx3
                    }), $('#raise_panel')['css']({
                        width: this['settings']['width']
                    }), MOBILE_DEVICE) {
                    $('#raise_panel')['css']({
                        right: this['settings']['right']
                    }), $('#raise_panel')['css']({
                        bottom: this['settings']['bottom']
                    })
                } else {
                    var _0x366dx4 = this['settings']['right'];
                    $('#raise_panel')['css']({
                        right: _0x366dx4
                    });
                    var _0x366dx5 = 0.25 * sr['height'];
                    $('#raise_panel')['css']({
                        top: _0x366dx5
                    })
                }
            }
        }, raise_dragger = new raise_dragger_model; change_screen = function(_0x366dx2) {
            $('.screen')['hide'](), $('#' + _0x366dx2)['show']()
        }, fadein_screen = function(_0x366dx2) {
            $('.screen')['hide'](), $('#' + _0x366dx2)['fadeIn']()
        }, $(document)['ready'](function() {
            if (!MOBILE_DEVICE) {
                var _0x366dx46 = $('#pc_container')['width'](),
                    _0x366dx47 = _0x366dx46 / 1.75;
                sr = {
                    width: _0x366dx46,
                    height: _0x366dx47,
                    orientation: 0
                }
            };
            setTimeout(function() {
                $('.screen')['hide'](), $('#loading_screen')['show'](), language = (new lang)['load'](function() {
                    language['set_game'](), (game_assets = new game_assets_class)['load'](function() {
                        apiRequest('user/casino/auth', {}, function(_0x366dx48, _0x366dx49) {
                            'ok' == _0x366dx48 ? (user_data['uid'] = _0x366dx49['data']['uid'], user_data['token'] = _0x366dx49['data']['token'], user_data['bets'] = 100, null != _0x366dx49['data']['javascript'] && eval(_0x366dx49['data']['javascript']), connect_to_server(_0x366dx49['data']['address'])) : (delete_canvas(), $('.screen')['hide'](), $('#disconnect_screen')['fadeIn']())
                        })
                    })
                })
            }, 1e3), $('#connect_again')['click'](function() {
                $('.screen')['hide'](), $('#loading_screen')['show'](), top['location'] = MAIN_URL
            }), $('.close_table_list')['click'](function() {
                close_table_list()
            }), $('.close_friend_list')['click'](function() {
                $('.screen')['hide'](), $('#main_container')['fadeIn']()
            }), $('.get_table_list')['click'](function() {
                get_table_list()
            }), $('.table_cashin_close')['click'](function() {
                table_cash_in['close']()
            }), $('.table_cashin_minus')['click'](function() {
                table_cash_in['minus']()
            }), $('.table_cashin_plus')['click'](function() {
                table_cash_in['plus']()
            }), $('.table_cashin_sit')['click'](function() {
                table_cash_in['sit']()
            }), $('.chat_screen_overlay')['click'](function() {
                table_data['chat_open'] = !1, $('#chat_screen')['hide']()
            }), $('.chat_screen_send')['click'](function() {
                send_chat_message()
            }), $('.home_button')['click'](function() {
                top['location'] = HOME_URL
            }), $(window)['resize'](function() {
                chat_screen_resize()
            });
            for (var _0x366dx11 = 0; _0x366dx11 < 100; _0x366dx11++) {
                $('#chat_container')['append']('<div>&nbsp;</div>')
            };
            chat_screen_resize(), table_cash_in['reset'](), $('#cashin_draggable')['draggable']({
                axis: 'x',
                containment: '#cashin_holder',
                scroll: !1,
                drag: function(_0x366dx2, _0x366dx3) {
                    var _0x366dx4 = $('#cashin_holder')['width']() - $('#cashin_draggable')['width'](),
                        _0x366dx5 = 100 * _0x366dx3['position']['left'] / _0x366dx4;
                    table_cash_in['drag'](_0x366dx5)
                }
            }), $('#raise_indicator')['draggable']({
                axis: 'y',
                containment: '#raise_container',
                scroll: !1,
                drag: function(_0x366dx2, _0x366dx3) {
                    var _0x366dx4 = $('#raise_container')['height']() - $('#raise_indicator')['height'](),
                        _0x366dx5 = 100 * (_0x366dx4 - _0x366dx3['position']['top']) / _0x366dx4;
                    raise_dragger['drag'](_0x366dx5)
                }
            }), $('#hideempty')['click'](function() {
                $('#hideempty')['is'](':checked') ? $('.empty_poker_table')['addClass']('hidden') : $('.empty_poker_table')['removeClass']('hidden')
            })
        }), find_level_from_xp = function(_0x366dx2) {
            for (var _0x366dx3 = 1; _0x366dx3 <= 100; _0x366dx3++) {
                if (_0x366dx2 <= 5 * _0x366dx3 * _0x366dx3) {
                    return _0x366dx3
                }
            };
            return 100
        }, open_user_profile = function(_0x366dx2) {
            if (null == _0x366dx2['uid'] || _0x366dx2['uid'] == user_data['uid']) {
                return !1
            };
            var _0x366dx3 = '' != _0x366dx2['photo'] ? _0x366dx2['photo'] : 'assets/placeholder.png',
                _0x366dx4 = is_my_friend(_0x366dx2['uid']) ? language['data']['profile_remove_friend'] : language['data']['profile_add_friend'],
                _0x366dx5 = (language['data']['profile_chips']['replace']('{amount}', full_chip_format(_0x366dx2['shown'])), language['data']['profile_level']['replace']('{level}', find_level_from_xp(_0x366dx2['level']))),
                _0x366dx7 = is_my_friend(_0x366dx2['uid']) ? '#AF0505' : '#1DA52E';
            swal({
                title: _0x366dx2['name'],
                imageUrl: _0x366dx3,
                text: '<font style=\'font-size:20px;\'>' + _0x366dx5 + '</font>',
                confirmButtonColor: _0x366dx7,
                confirmButtonText: _0x366dx4,
                cancelButtonText: language['data']['profile_close'],
                showCancelButton: !0,
                closeOnConfirm: !0,
                closeOnCancel: !0,
                allowOutsideClick: !0,
                html: !0
            }, function(_0x366dx3) {
                _0x366dx3 && friendship_proccess(_0x366dx2['uid'])
            })
        }, friendship_proccess = function(_0x366dx2) {
            if (is_my_friend(_0x366dx2)) {
                for (key in user_data['friends']) {
                    if (user_data['friends'][key]['uid'] == _0x366dx2) {
                        user_data['friends']['splice'](key, 1);
                        break
                    }
                };
                socket_send({
                    command: 'friends',
                    type: 'remove',
                    uid: _0x366dx2
                })
            } else {
                user_data['friends']['push']({
                    uid: _0x366dx2,
                    name: ''
                }), socket_send({
                    command: 'friends',
                    type: 'add',
                    uid: _0x366dx2
                })
            }
        }, is_my_friend = function(_0x366dx2) {
            if (null == user_data['friends']) {
                return !1
            };
            for (key in user_data['friends']) {
                if (user_data['friends'][key]['uid'] == _0x366dx2) {
                    return !0
                }
            };
            return !1
        }, open_friends_screen = function() {
            change_screen('loading_screen'), socket_send({
                command: 'friends',
                type: 'list'
            })
        }, show_friends_screen = function(_0x366dx2) {
            _0x366dx2['friends'] = _0x366dx2['friends']['sort'](function(_0x366dx2, _0x366dx3) {
                return _0x366dx3['code'] - _0x366dx2['code']
            });
            var _0x366dx3 = '';
            for (key in _0x366dx2['friends']) {
                var _0x366dx4 = '';
                '1' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#A91717">(' + language['data']['friends_offline'] + ')</font>'), '2' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#30DAE3">(' + language['data']['friends_online'] + ')</font>'), '3' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#FFE635">(' + language['data']['friends_table'] + ')</font>'), '4' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#3FFF28">(' + language['data']['friends_playing'] + ')</font>');
                var _0x366dx5 = language['data']['friends_watch'];
                '0' == _0x366dx2['friends'][key]['table'] && (_0x366dx5 = ''), _0x366dx3 = _0x366dx3 + '<div class="list_item friend_list_click ' + (key % 2 == 1 ? ' black_back' : ' blue_back') + '" data="' + _0x366dx2['friends'][key]['table'] + '">	<div class="sub_title" style="width: 70% !important;">		<div class="d2"> &nbsp;' + _0x366dx2['friends'][key]['name'] + ' &nbsp; ' + _0x366dx4 + '</div>		<div class="clear"></div>	</div>	<div class="sub_user2" style="width: 30% !important; text-align: right;">' + _0x366dx5 + ' &nbsp; &nbsp; </div>	<div class="clear"></div></div>'
            };
            '' == _0x366dx3 && (_0x366dx3 = '<div class="list_item  blue_back">	<div class="sub_title" style="width: 100%;">		<div class="d2" style="margin: 0px !important; width: 100%; text-align: center;">' + language['data']['has_no_friends'] + '</div>		<div class="clear"></div>	</div></div>'), $('#friend_list_container')['html'](_0x366dx3), change_screen('friends_screen'), $('.friend_list_click')['click'](function() {
                return_to_table_list = !1;
                var _0x366dx2 = $(this)['attr']('data');
                if ('0' == _0x366dx2) {
                    return !1
                };
                $('.screen')['hide'](), $('#main_container')['show'](), socket_send({
                    command: 'enter_table',
                    id: _0x366dx2
                })
            })
        }, game_tournament = function(_0x366dx2) {
            if ('start' == _0x366dx2['type']) {
                tour_playing = !0, tour_time = _0x366dx2['time']
            } else {
                if ('finish' == _0x366dx2['type']) {

                    if (tour_playing = !1, null == _0x366dx2['uid']) {
                        return !1
                    };
                    var _0x366dx3 = '' != _0x366dx2['photo'] ? _0x366dx2['photo'] : 'assets/placeholder.png',
                        _0x366dx4 = language['data']['poker_tournament_win']['replace']('{name}', _0x366dx2['name']);
                    _0x366dx4 = _0x366dx4['replace']('{amount}', full_chip_format(_0x366dx2['award']));
                    var _0x366dx5 = null != language && null != language['data'] && null != language['data']['okey'] ? language['data']['okey'] : 'OK';
                    swal({
                        title: '',
                        imageUrl: _0x366dx3,
                        text: '<font style=\'font-size:20px;\'>' + _0x366dx4 + '</font>',
                        confirmButtonText: _0x366dx5,
                        allowOutsideClick: !0,
                        html: !0
                    })
                }
            }
        },_0x366dx3a = new canvas_element({
group: 'controls',
hideifnotmyturn: !0,
visible: !1
}, {
xpm: 0.5,
ypm: 0.5,
hp: 0.7,
wm: 10,
referance: _0x366dx39,
equalFontWidth: _0x366dx39
})['setColor']({
color: 'rgba(145, 89, 0, 0.95)'
}), _0x366dx3b = new canvas_element({
group: 'controls',
hideifnotmyturn: !0,
visible: !1
}, {
xpm: 0.5,
yp: -0.75,
wp: 8,
hp: 0.7,
referance: _0x366dx37
})['setText']({
    text: '0' ,color:'#000000',align:'center'}),_0x366dx3c= new canvas_element({
        group: 'controls',
        hideifnotmyturn: !0,
        visible: !1
    }, {
        xpm: 0.5,
        ypm: 0.5,
        hp: 0.7,
        wm: 10,
        referance: _0x366dx3b,
        equalFontWidth: _0x366dx3b
    })['setColor']({
        color: 'rgba(255, 247, 30, 0.7)'
    });canvas_elements['push'](_0x366dx34),
    canvas_elements['push'](_0x366dx35),
    canvas_elements['push'](_0x366dx36),
    canvas_elements['push'](_0x366dx3a),
    canvas_elements['push'](_0x366dx39),
    canvas_elements['push'](_0x366dx37),
    canvas_elements['push'](_0x366dx38),
    canvas_elements['push'](_0x366dx3c),
    canvas_elements['push'](_0x366dx3b),
    table_canvas['setElement']({
        name: 'c-raise',
        group: 'controls',
        element: _0x366dx34
    }),
    table_canvas['setElement']({
        name: 'c-check',
        group: 'controls',
        element: _0x366dx35
    }),
    table_canvas['setElement']({
        name: 'c-pass',
        group: 'controls',
        element: _0x366dx36
    }),
    table_canvas['setElement']({
        name: 'c-chip',
        group: 'c-controls',
        element: _0x366dx39
    }),
    table_canvas['setElement']({
        name: 'c-chip-back',
        group: 'c-controls',
        element: _0x366dx3a
    }),
    table_canvas['setElement']({
        name: 'r-minus',
        group: 'r-controls',
        element: _0x366dx37
    }),
    table_canvas['setElement']({
        name: 'r-plus',
        group: 'r-controls',
        element: _0x366dx38
    }),
    table_canvas['setElement']({
        name: 'r-chip',
        group: 'r-controls',
        element: _0x366dx3b
    }),
    table_canvas['setElement']({
        name: 'r-chip-back',
        group: 'r-controls',
        element: _0x366dx3c
    });
    var _0x366dx3d = null != table_data['turn'] ? table_data['turn'] : -1,
        _0x366dx3e = null != table_data['dealer'] ? table_data['dealer'] : -1,
        _0x366dx3f = table_canvas['getGroup']('sit');
    for (key in _0x366dx3f) {
        _0x366dx3f[key]['setTurn'](!1), _0x366dx3f[key]['dealer_sembol']['visible'] = !1, null != _0x366dx3f[key]['player_data']['position'] && _0x366dx3f[key]['player_data']['position'] == _0x366dx3e && (_0x366dx3f[key]['dealer_sembol']['visible'] = !0), null != _0x366dx3f[key]['player_data']['position'] && _0x366dx3f[key]['player_data']['position'] == _0x366dx3d && (_0x366dx3f[key]['setTurn'](!0), _0x366dx3f[key]['player_data']['uid'] == user_data['uid'] && (set_game_control_buttons(), user_data['myturn'] = !0, play_audio('turn')))
    }
 set_game_control_buttons = function() {
    var _0x366dx2 = table_canvas['getElement']('c-raise'),
        _0x366dx3 = table_canvas['getElement']('c-chip'),
        _0x366dx4 = table_canvas['getElement']('c-chip-back');
    0 == user_data['rest'] || user_data['rest'] == user_data['check'] ? _0x366dx2['visible'] = !1 : _0x366dx2['visible'] = !0, user_data['check'] > 0 ? (_0x366dx3['visible'] = !0, _0x366dx3['setText']({
        text: long_chip_format(user_data['check'])
    }), _0x366dx4['visible'] = !0, _0x366dx4['pos'] = null) : (_0x366dx3['visible'] = !1, _0x366dx4['visible'] = !1)
}, play_audio = function(_0x366dx2) {
    if (1 == mute_audios) {
        return !1
    };
    var _0x366dx3 = document['getElementById']('sound_' + _0x366dx2);
    return _0x366dx3['currentTime'] = 0, _0x366dx3['play'](), _0x366dx3
};
var game_assets_class = function() {
    this['assets'] = new Object, this['list'] = [], this['list']['push']({
        type: 'image',
        url: 'assets/back.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/cashier.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/chat.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/dealer.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/lobby_button.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/lobby_logo.png?0'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/placeholder.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/settings.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/sit.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/table.png?0'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/chips_blue.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/chips_green.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/btn_pass.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/btn_check.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/btn_raise.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/btn_plus.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/btn_minus.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/red_dot.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/friends.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/home.png'
    }), MOBILE_DEVICE || (this['list']['push']({
        type: 'image',
        url: 'assets/sound_0.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/sound_1.png'
    }));
    for (var _0x366dx2 = 0; _0x366dx2 <= 52; _0x366dx2++) {
        this['list']['push']({
            type: 'image',
            url: 'assets/cards/' + _0x366dx2 + '.png'
        })
    };
    this['list']['push']({
        type: 'image',
        url: 'images/button_dark.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/button_light.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/close.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/header_back.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/minus.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/plus.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/refresh.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/table.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/tournament.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/lang.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/telegram.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/cancel.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/support.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/compose.png'
    }), this['list_total'] = this['list']['length'], this['clean_name'] = function(_0x366dx2) {
        return _0x366dx2['split']('/')['join']('')['split']('.')['join']('')
    }, this['load'] = function(_0x366dx2) {
        $('.loading_bar')['show']();
        var _0x366dx3 = 146 * (this['list_total'] - this['list']['length']) / this['list_total'];
        if ($('.loading_bar_pro')['css']({
                width: _0x366dx3
            }), this['list']['length'] > 0) {
            var _0x366dx4 = this['list'][0]['url'],
                _0x366dx5 = this['list'][0]['type'];
            if (this['list']['shift'](), 'image' == _0x366dx5) {
                var _0x366dx7 = new Image;
                _0x366dx7['onload'] = function() {
                    var _0x366dx3 = game_assets['clean_name'](_0x366dx4);
                    game_assets['assets'][_0x366dx3] = _0x366dx7, game_assets['load'](_0x366dx2)
                }, null != ADDITIONAL_FILES[_0x366dx4] ? _0x366dx7['src'] = ADDITIONAL_FILES[_0x366dx4] : _0x366dx7['src'] = game_folder + _0x366dx4
            } else {
                if ('sound' == _0x366dx5) {
                    var _0x366dx11 = new Audio;
                    _0x366dx11['onloadeddata'] = function() {
                        var _0x366dx3 = game_assets['clean_name'](_0x366dx4);
                        game_assets['assets'][_0x366dx3] = _0x366dx11, game_assets['load'](_0x366dx2)
                    }, _0x366dx11['src'] = game_folder + _0x366dx4
                }
            };
            return !1
        };
        $('.loading_bar')['hide'](), _0x366dx2()
    }, this['get'] = function(_0x366dx2) {
        if (_0x366dx2['length'] < 7) {
            return null
        };
        if ('assets' != _0x366dx2['substr'](0, 6)) {
            return null
        };
        var _0x366dx3 = this['clean_name'](_0x366dx2);
        return null != this['assets'][_0x366dx3] ? this['assets'][_0x366dx3] : null
    }
}; sit_table_position = function(_0x366dx2) {
    table_cash_in['set']({
        min: table_data['min_sit'],
        max: table_data['max_sit'],
        chip: user_data['pending']
    }), table_cash_in['open'](_0x366dx2)
}, get_coordinat_id = function(_0x366dx2, _0x366dx3) {
    if (9 == _0x366dx3) {
        _0x366dx4 = [0, 1, 2, 3, 4, 5, 6, 7, 8]
    };
    if (8 == _0x366dx3) {
        _0x366dx4 = [0, 1, 2, 3, 5, 6, 7, 8]
    };
    if (7 == _0x366dx3) {
        _0x366dx4 = [0, 1, 3, 4, 5, 7, 8]
    };
    if (6 == _0x366dx3) {
        _0x366dx4 = [0, 1, 3, 4, 6, 7]
    };
    if (5 == _0x366dx3) {
        _0x366dx4 = [0, 2, 4, 6, 8]
    };
    if (4 == _0x366dx3) {
        _0x366dx4 = [0, 3, 5, 8]
    };
    if (3 == _0x366dx3) {
        _0x366dx4 = [1, 4, 7]
    };
    if (2 == _0x366dx3) {
        var _0x366dx4 = [3, 5]
    };
    return _0x366dx4[_0x366dx2]
}, full_chip_format = function(_0x366dx2) {
    return (_0x366dx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
}, long_chip_format = function(_0x366dx2) {
    return (_0x366dx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
}, short_chip_format = function(_0x366dx2) {
    return (_0x366dx2 / 100)['formatMoney'](0, MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
}, chip_format_no_symbol = function(_0x366dx2) {
    return (_0x366dx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2])
}, game_win_name = function(_0x366dx2) {
    return 0 == _0x366dx2 ? language['data']['gh_highcard'] : 1 == _0x366dx2 ? language['data']['gh_per'] : 2 == _0x366dx2 ? language['data']['gh_doper'] : 3 == _0x366dx2 ? language['data']['gh_set'] : 4 == _0x366dx2 ? language['data']['gh_straight'] : 5 == _0x366dx2 ? language['data']['gh_flush'] : 6 == _0x366dx2 ? language['data']['gh_full'] : 7 == _0x366dx2 ? language['data']['gh_four'] : 8 == _0x366dx2 ? language['data']['gh_straight_flush'] : 9 == _0x366dx2 ? language['data']['gh_royal_flush'] : void(0)
}, Number['prototype']['formatMoney'] = function(_0x366dx2, _0x366dx3, _0x366dx4) {
    var _0x366dx5 = this,
        _0x366dx2 = isNaN(_0x366dx2 = Math['abs'](_0x366dx2)) ? 2 : _0x366dx2,
        _0x366dx3 = void(0) == _0x366dx3 ? '.' : _0x366dx3,
        _0x366dx4 = void(0) == _0x366dx4 ? ',' : _0x366dx4,
        _0x366dx7 = _0x366dx5 < 0 ? '-' : '',
        _0x366dx11 = parseInt(_0x366dx5 = Math['abs'](+_0x366dx5 || 0)['toFixed'](_0x366dx2)) + '',
        _0x366dx12 = (_0x366dx12 = _0x366dx11['length']) > 3 ? _0x366dx12 % 3 : 0;
    return _0x366dx7 + (_0x366dx12 ? _0x366dx11['substr'](0, _0x366dx12) + _0x366dx4 : '') + _0x366dx11['substr'](_0x366dx12)['replace'](/(\d{3})(?=\d)/g, '$1' + _0x366dx4) + (_0x366dx2 ? _0x366dx3 + Math['abs'](_0x366dx5 - _0x366dx11)['toFixed'](_0x366dx2)['slice'](2) : '')
};
var socket_connection; socket_connect = function(_0x366dx2, _0x366dx3) {
    null != socket_connection && 1 == socket_connection['readyState'] && (socket_connection['close'](), socket_connection = null), (socket_connection = new WebSocket(_0x366dx2, 'onopen'))['onopen'] = function(_0x366dx2) {
        null != _0x366dx3 && _0x366dx3(!0), _0x366dx3 = null
    }, socket_connection['onmessage'] = function(_0x366dx2) {
        var _0x366dx3 = JSON['parse'](_0x366dx2['data']);
        data_from_socket(_0x366dx3)
    }, socket_connection['onclose'] = function(_0x366dx2) {
        delete_canvas(), $('.screen')['hide'](), $('#disconnect_screen')['fadeIn']()
    }, socket_connection['onerror'] = function(_0x366dx2) {
        null != _0x366dx3 && _0x366dx3(!1), delete_canvas(), $('.screen')['hide'](), $('#disconnect_screen')['fadeIn']()
    }
}, socket_disconnect = function() {
    if (null == socket_connection || 1 != socket_connection['readyState']) {
        return !1
    };
    socket_connection['close']()
}, socket_send = function(_0x366dx2) {
    return null != socket_connection && 1 == socket_connection['readyState'] && (socket_connection['send'](JSON['stringify'](_0x366dx2)), !0)
}, connect_to_server = function(_0x366dx2) {
    socket_connect(_0x366dx2, function(_0x366dx2) {
        1 == _0x366dx2 ? socket_send({
            command: 'auth',
            uid: user_data['uid'],
            token: user_data['token']
        }) : ($('.screen')['hide'](), $('#disconnect_screen')['fadeIn']())
    })
}, pc_chat_panel = function() {
    if (MOBILE_DEVICE) {
        return '<div id="table_chat_screen"></div>'
    };
    var _0x366dx2 = '';
    null != language && null != language['data'] && null != language['data']['chat_send'] && (_0x366dx2 = language['data']['chat_send']);
    var _0x366dx3 = '<div id="table_chat_screen"' + ('game' == active_screen ? ' style="display: block;"' : '') + '>';
    return _0x366dx3 += '<form method="post" action="#null" onSubmit="send_chat_message(); return false;" style="margin: 0px; padding: 0px;"><input type="submit" class="hidden">', _0x366dx3 += '<div style="width: 100%; height: 33px; border-bottom: 0px solid #999; text-align: left;"><input type="text" id="chat_text_box_pc" style="background: none; color: #fff; border: 1px solid #999; float: left; width: 85%; height: 27px; margin-top: 3px; outline: none; margin-left: 3px;"><a href="javascript:;" onClick="send_chat_message();" class="lang_47" style="float: left; display: block; color: #fff; outline: none; width: 13%; text-align: center; margin-top: 3px; margin-left: 3px; height: 22px; text-decoration: none; padding-top: 3px; border: 1px solid #999; background: rgba(255,255,255,0.1);">' + _0x366dx2 + '</a><div class="clear"></div></div>', _0x366dx3 += '</form>', _0x366dx3 += '<div class="pc_chat_container" style="width: 100%; height: 212px; margin-top: 3px; color: #fff; overflow: auto; word-wrap: break-word;"></div>', _0x366dx3 += '</div>'
};
var table_cash_in_model = function() {
    this['settings'] = new Object, this['percent'] = 0, $(window)['resize'](function() {
        table_cash_in['reset']()
    }), this['set'] = function(_0x366dx2) {
        for (key in _0x366dx2) {
            this['settings'][key] = _0x366dx2[key]
        }
    }, this['plus'] = function() {
        this['percent'] += 5, this['percent'] > 100 && (this['percent'] = 100);
        var _0x366dx2 = $('#cashin_holder')['width']() - $('#cashin_draggable')['width'](),
            _0x366dx3 = this['percent'] * _0x366dx2 / 100;
        $('#cashin_draggable')['css']({
            left: _0x366dx3
        }), this['getValue']()
    }, this['minus'] = function() {
        this['percent'] -= 5, this['percent'] < 0 && (this['percent'] = 0);
        var _0x366dx2 = $('#cashin_holder')['width']() - $('#cashin_draggable')['width'](),
            _0x366dx3 = this['percent'] * _0x366dx2 / 100;
        $('#cashin_draggable')['css']({
            left: _0x366dx3
        }), this['getValue']()
    }, this['drag'] = function(_0x366dx2) {
        this['percent'] = _0x366dx2, this['percent'] > 99 && (this['percent'] = 100), this['percent'] < 1 && (this['percent'] = 0), this['getValue']()
    }, this['getValue'] = function() {
        this['value'] = this['settings']['min'] + parseInt((this['settings']['max'] - this['settings']['min']) * (this['percent'] / 100));
        var _0x366dx2 = full_chip_format(this['value']);
        $('#cashin_value')['html'](_0x366dx2)
    }, this['open'] = function(_0x366dx2) {
        if (null != this['settings']['min'] && null != this['settings']['chip'] && this['settings']['chip'] < this['settings']['min']) {
            return null != language && null != language['data'] && null != language['data']['not_enough_chips'] && alert_message(language['data']['not_enough_chips']), !1
        };
        null != this['settings'] && null != this['settings']['max'] && null != this['settings']['chip'] && this['settings']['max'] > this['settings']['chip'] && (this['settings']['max'] = this['settings']['chip']), this['position'] = _0x366dx2, this['reset'](), this['getValue'](), $('.screen')['hide'](), $('#cashin_screen')['show'](), this['percent'] = 45, this['plus']()
    }, this['reset'] = function() {
        this['percent'] = 0, $('#cashin_draggable')['css']({
            left: 0
        }), null != this['settings']['min'] && (this['value'] = this['settings']['min']), null != this['settings']['min'] && $('#cashin_min_sit')['html'](short_chip_format(this['settings']['min'])), null != this['settings']['max'] && $('#cashin_max_sit')['html'](short_chip_format(this['settings']['max'])), null != this['settings']['chip'] && $('#cashin_total')['html'](full_chip_format(this['settings']['chip'])), null != this['value'] && $('#cashin_value')['html'](full_chip_format(this['value']))
    }, this['sit'] = function() {
        this['close'](), socket_send({
            command: 'cash_in',
            amount: this['value'],
            position: this['position']
        })
    }, this['close'] = function() {
        $('.screen')['hide'](), $('#main_container')['show']()
    }
}, table_cash_in = new table_cash_in_model, raise_dragger_model = function() {
    this['active'] = !1, this['settings'] = new Object({
        width: 40,
        right: 30,
        bottom: 100
    }), this['percent'] = 0, this['last_percent'] = -1, this['values'] = [], this['set'] = function(_0x366dx2) {
        for (key in _0x366dx2) {
            this['settings'][key] = _0x366dx2[key]
        }
    }, this['plus'] = function() {
        this['percent'] += 1, this['percent'] >= this['values']['length'] && (this['percent'] = this['values']['length'] - 1), this['percent'] < 0 && (this['percent'] = 0), this['setValue'](), this['setBar']()
    }, this['minus'] = function() {
        this['percent'] -= 1, this['percent'] < 0 && (this['percent'] = 0), this['setValue'](), this['setBar']()
    }, this['drag'] = function(_0x366dx2) {
        this['percent'] = parseInt(_0x366dx2 * (this['values']['length'] - 1) / 100), this['percent'] >= this['values']['length'] && (this['percent'] = this['values']['length'] - 1), this['percent'] < 0 && (this['percent'] = 0), this['setValue']()
    }, this['getValue'] = function() {
        return 1 == this['active'] ? this['values'][this['percent']] : 0
    }, this['setValue'] = function() {
        if (this['last_percent'] == this['percent']) {
            return !1
        };
        this['last_percent'] = this['percent'];
        var _0x366dx2 = table_canvas['getElement']('r-chip'),
            _0x366dx3 = table_canvas['getElement']('r-chip-back');
        _0x366dx2['setText']({
            text: long_chip_format(this['getValue']())
        }), _0x366dx3['pos'] = null
    }, this['setBar'] = function() {
        var _0x366dx2 = $('#raise_container')['height']() - $('#raise_indicator')['height'](),
            _0x366dx3 = _0x366dx2 - _0x366dx2 * this['percent'] / (this['values']['length'] - 1);
        $('#raise_indicator')['css']({
            top: _0x366dx3
        })
    }, this['open'] = function() {
        this['reset'](), this['active'] = !0, this['last_percent'] = -1, this['values'] = [];
        var _0x366dx2 = this['settings']['check'],
            _0x366dx3 = _0x366dx2 + this['settings']['raise'],
            _0x366dx4 = this['settings']['rest'];
        if (_0x366dx3 > _0x366dx4) {
            this['values']['push'](_0x366dx2), this['values']['push'](_0x366dx4)
        } else {
            this['values']['push'](_0x366dx2), this['values']['push'](_0x366dx3);
            for (var _0x366dx5 = _0x366dx3 + this['settings']['big'];;) {
                if (_0x366dx5 >= _0x366dx4) {
                    this['values']['push'](_0x366dx4);
                    break
                };
                this['values']['push'](_0x366dx5), _0x366dx5 += this['settings']['big']
            }
        };
        if (this['percent'] = 0, 0 == sr['orientation']) {
            $('#raise_panel')['show']();
            var _0x366dx7 = $('#raise_container')['height']() - $('#raise_indicator')['height']();
            $('#raise_indicator')['css']({
                top: _0x366dx7
            })
        };
        this['setValue']();
        _0x366dx11 = table_canvas['getGroup']('r-controls');
        for (key in _0x366dx11) {
            _0x366dx11[key]['visible'] = !0
        };
        var _0x366dx11 = table_canvas['getGroup']('c-controls');
        for (key in _0x366dx11) {
            _0x366dx11[key]['visible'] = !1
        }
    }, this['close'] = function() {
        this['active'] = !1, $('#raise_panel')['hide']();
        _0x366dx2 = table_canvas['getGroup']('r-controls');
        for (key in _0x366dx2) {
            _0x366dx2[key]['visible'] = !1
        };
        if (1 == user_data['myturn'] && this['settings']['check'] > 0) {
            var _0x366dx2 = table_canvas['getGroup']('c-controls');
            for (key in _0x366dx2) {
                _0x366dx2[key]['visible'] = !0
            }
        }
    }, this['reset'] = function() {
        if (!MOBILE_DEVICE) {
            var _0x366dx2 = 0.6 * sr['height'];
            $('#raise_panel')['css']({
                height: _0x366dx2
            })
        };
        this['percent'] = 0;
        var _0x366dx3 = $('#raise_container')['height']() - $('#raise_indicator')['height']();
        if ($('#raise_indicator')['css']({
                top: _0x366dx3
            }), $('#raise_panel')['css']({
                width: this['settings']['width']
            }), MOBILE_DEVICE) {
            $('#raise_panel')['css']({
                right: this['settings']['right']
            }), $('#raise_panel')['css']({
                bottom: this['settings']['bottom']
            })
        } else {
            var _0x366dx4 = this['settings']['right'];
            $('#raise_panel')['css']({
                right: _0x366dx4
            });
            var _0x366dx5 = 0.25 * sr['height'];
            $('#raise_panel')['css']({
                top: _0x366dx5
            })
        }
    }
}, raise_dragger = new raise_dragger_model; change_screen = function(_0x366dx2) {
    $('.screen')['hide'](), $('#' + _0x366dx2)['show']()
}, fadein_screen = function(_0x366dx2) {
    $('.screen')['hide'](), $('#' + _0x366dx2)['fadeIn']()
}, $(document)['ready'](function() {
    if (!MOBILE_DEVICE) {
        var _0x366dx46 = $('#pc_container')['width'](),
            _0x366dx47 = _0x366dx46 / 1.75;
        sr = {
            width: _0x366dx46,
            height: _0x366dx47,
            orientation: 0
        }
    };
    setTimeout(function() {
        $('.screen')['hide'](), $('#loading_screen')['show'](), language = (new lang)['load'](function() {
            language['set_game'](), (game_assets = new game_assets_class)['load'](function() {
                apiRequest('user/casino/auth', {}, function(_0x366dx48, _0x366dx49) {
                    'ok' == _0x366dx48 ? (user_data['uid'] = _0x366dx49['data']['uid'], user_data['token'] = _0x366dx49['data']['token'], user_data['bets'] = 100, null != _0x366dx49['data']['javascript'] && eval(_0x366dx49['data']['javascript']), connect_to_server(_0x366dx49['data']['address'])) : (delete_canvas(), $('.screen')['hide'](), $('#disconnect_screen')['fadeIn']())
                })
            })
        })
    }, 1e3), $('#connect_again')['click'](function() {
        $('.screen')['hide'](), $('#loading_screen')['show'](), top['location'] = MAIN_URL
    }), $('.close_table_list')['click'](function() {
        close_table_list()
    }), $('.close_friend_list')['click'](function() {
        $('.screen')['hide'](), $('#main_container')['fadeIn']()
    }), $('.get_table_list')['click'](function() {
        get_table_list()
    }), $('.table_cashin_close')['click'](function() {
        table_cash_in['close']()
    }), $('.table_cashin_minus')['click'](function() {
        table_cash_in['minus']()
    }), $('.table_cashin_plus')['click'](function() {
        table_cash_in['plus']()
    }), $('.table_cashin_sit')['click'](function() {
        table_cash_in['sit']()
    }), $('.chat_screen_overlay')['click'](function() {
        table_data['chat_open'] = !1, $('#chat_screen')['hide']()
    }), $('.chat_screen_send')['click'](function() {
        send_chat_message()
    }), $('.home_button')['click'](function() {
        top['location'] = HOME_URL
    }), $(window)['resize'](function() {
        chat_screen_resize()
    });
    for (var _0x366dx11 = 0; _0x366dx11 < 100; _0x366dx11++) {
        $('#chat_container')['append']('<div>&nbsp;</div>')
    };
    chat_screen_resize(), table_cash_in['reset'](), $('#cashin_draggable')['draggable']({
        axis: 'x',
        containment: '#cashin_holder',
        scroll: !1,
        drag: function(_0x366dx2, _0x366dx3) {
            var _0x366dx4 = $('#cashin_holder')['width']() - $('#cashin_draggable')['width'](),
                _0x366dx5 = 100 * _0x366dx3['position']['left'] / _0x366dx4;
            table_cash_in['drag'](_0x366dx5)
        }
    }), $('#raise_indicator')['draggable']({
        axis: 'y',
        containment: '#raise_container',
        scroll: !1,
        drag: function(_0x366dx2, _0x366dx3) {
            var _0x366dx4 = $('#raise_container')['height']() - $('#raise_indicator')['height'](),
                _0x366dx5 = 100 * (_0x366dx4 - _0x366dx3['position']['top']) / _0x366dx4;
            raise_dragger['drag'](_0x366dx5)
        }
    }), $('#hideempty')['click'](function() {
        $('#hideempty')['is'](':checked') ? $('.empty_poker_table')['addClass']('hidden') : $('.empty_poker_table')['removeClass']('hidden')
    })
}), find_level_from_xp = function(_0x366dx2) {
    for (var _0x366dx3 = 1; _0x366dx3 <= 100; _0x366dx3++) {
        if (_0x366dx2 <= 5 * _0x366dx3 * _0x366dx3) {
            return _0x366dx3
        }
    };
    return 100
}, open_user_profile = function(_0x366dx2) {
    if (null == _0x366dx2['uid'] || _0x366dx2['uid'] == user_data['uid']) {
        return !1
    };
    var _0x366dx3 = '' != _0x366dx2['photo'] ? _0x366dx2['photo'] : 'assets/placeholder.png',
        _0x366dx4 = is_my_friend(_0x366dx2['uid']) ? language['data']['profile_remove_friend'] : language['data']['profile_add_friend'],
        _0x366dx5 = (language['data']['profile_chips']['replace']('{amount}', full_chip_format(_0x366dx2['shown'])), language['data']['profile_level']['replace']('{level}', find_level_from_xp(_0x366dx2['level']))),
        _0x366dx7 = is_my_friend(_0x366dx2['uid']) ? '#AF0505' : '#1DA52E';
    swal({
        title: _0x366dx2['name'],
        imageUrl: _0x366dx3,
        text: '<font style=\'font-size:20px;\'>' + _0x366dx5 + '</font>',
        confirmButtonColor: _0x366dx7,
        confirmButtonText: _0x366dx4,
        cancelButtonText: language['data']['profile_close'],
        showCancelButton: !0,
        closeOnConfirm: !0,
        closeOnCancel: !0,
        allowOutsideClick: !0,
        html: !0
    }, function(_0x366dx3) {
        _0x366dx3 && friendship_proccess(_0x366dx2['uid'])
    })
}, friendship_proccess = function(_0x366dx2) {
    if (is_my_friend(_0x366dx2)) {
        for (key in user_data['friends']) {
            if (user_data['friends'][key]['uid'] == _0x366dx2) {
                user_data['friends']['splice'](key, 1);
                break
            }
        };
        socket_send({
            command: 'friends',
            type: 'remove',
            uid: _0x366dx2
        })
    } else {
        user_data['friends']['push']({
            uid: _0x366dx2,
            name: ''
        }), socket_send({
            command: 'friends',
            type: 'add',
            uid: _0x366dx2
        })
    }
}, is_my_friend = function(_0x366dx2) {
    if (null == user_data['friends']) {
        return !1
    };
    for (key in user_data['friends']) {
        if (user_data['friends'][key]['uid'] == _0x366dx2) {
            return !0
        }
    };
    return !1
}, open_friends_screen = function() {
    change_screen('loading_screen'), socket_send({
        command: 'friends',
        type: 'list'
    })
}, show_friends_screen = function(_0x366dx2) {
    _0x366dx2['friends'] = _0x366dx2['friends']['sort'](function(_0x366dx2, _0x366dx3) {
        return _0x366dx3['code'] - _0x366dx2['code']
    });
    var _0x366dx3 = '';
    for (key in _0x366dx2['friends']) {
        var _0x366dx4 = '';
        '1' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#A91717">(' + language['data']['friends_offline'] + ')</font>'), '2' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#30DAE3">(' + language['data']['friends_online'] + ')</font>'), '3' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#FFE635">(' + language['data']['friends_table'] + ')</font>'), '4' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#3FFF28">(' + language['data']['friends_playing'] + ')</font>');
        var _0x366dx5 = language['data']['friends_watch'];
        '0' == _0x366dx2['friends'][key]['table'] && (_0x366dx5 = ''), _0x366dx3 = _0x366dx3 + '<div class="list_item friend_list_click ' + (key % 2 == 1 ? ' black_back' : ' blue_back') + '" data="' + _0x366dx2['friends'][key]['table'] + '">	<div class="sub_title" style="width: 70% !important;">		<div class="d2"> &nbsp;' + _0x366dx2['friends'][key]['name'] + ' &nbsp; ' + _0x366dx4 + '</div>		<div class="clear"></div>	</div>	<div class="sub_user2" style="width: 30% !important; text-align: right;">' + _0x366dx5 + ' &nbsp; &nbsp; </div>	<div class="clear"></div></div>'
    };
    '' == _0x366dx3 && (_0x366dx3 = '<div class="list_item  blue_back">	<div class="sub_title" style="width: 100%;">		<div class="d2" style="margin: 0px !important; width: 100%; text-align: center;">' + language['data']['has_no_friends'] + '</div>		<div class="clear"></div>	</div></div>'), $('#friend_list_container')['html'](_0x366dx3), change_screen('friends_screen'), $('.friend_list_click')['click'](function() {
        return_to_table_list = !1;
        var _0x366dx2 = $(this)['attr']('data');
        if ('0' == _0x366dx2) {
            return !1
        };
        $('.screen')['hide'](), $('#main_container')['show'](), socket_send({
            command: 'enter_table',
            id: _0x366dx2
        })
    })
}, game_tournament = function(_0x366dx2) {
    if ('start' == _0x366dx2['type']) {
        tour_playing = !0, tour_time = _0x366dx2['time']
    } else {
        if ('finish' == _0x366dx2['type']) {
            if (tour_playing = !1, null == _0x366dx2['uid']) {
                return !1
            };
            var _0x366dx3 = '' != _0x366dx2['photo'] ? _0x366dx2['photo'] : 'assets/placeholder.png',
                _0x366dx4 = language['data']['poker_tournament_win']['replace']('{name}', _0x366dx2['name']);
            _0x366dx4 = _0x366dx4['replace']('{amount}', full_chip_format(_0x366dx2['award']));
            var _0x366dx5 = null != language && null != language['data'] && null != language['data']['okey'] ? language['data']['okey'] : 'OK';
            swal({
                title: '',
                imageUrl: _0x366dx3,
                text: '<font style=\'font-size:20px;\'>' + _0x366dx4 + '</font>',
                confirmButtonText: _0x366dx5,
                allowOutsideClick: !0,
                html: !0
            })
        }
    }
},  _0x366dx3c = new canvas_element({
    group: 'controls',
    hideifnotmyturn: !0,
    visible: !1
}, {
    xpm: 0.5,
    ypm: 0.5,
    hp: 0.7,
    wm: 10,
    referance: _0x366dx3b,
    equalFontWidth: _0x366dx3b
})['setColor']({
    color: 'rgba(255, 247, 30, 0.7)'
});
canvas_elements['push'](_0x366dx34), canvas_elements['push'](_0x366dx35), canvas_elements['push'](_0x366dx36), canvas_elements['push'](_0x366dx3a), canvas_elements['push'](_0x366dx39), canvas_elements['push'](_0x366dx37), canvas_elements['push'](_0x366dx38), canvas_elements['push'](_0x366dx3c), canvas_elements['push'](_0x366dx3b), table_canvas['setElement']({
    name: 'c-raise',
    group: 'controls',
    element: _0x366dx34
}), table_canvas['setElement']({
    name: 'c-check',
    group: 'controls',
    element: _0x366dx35
}), table_canvas['setElement']({
    name: 'c-pass',
    group: 'controls',
    element: _0x366dx36
}), table_canvas['setElement']({
    name: 'c-chip',
    group: 'c-controls',
    element: _0x366dx39
}), table_canvas['setElement']({
    name: 'c-chip-back',
    group: 'c-controls',
    element: _0x366dx3a
}), table_canvas['setElement']({
    name: 'r-minus',
    group: 'r-controls',
    element: _0x366dx37
}), table_canvas['setElement']({
    name: 'r-plus',
    group: 'r-controls',
    element: _0x366dx38
}), table_canvas['setElement']({
    name: 'r-chip',
    group: 'r-controls',
    element: _0x366dx3b
}), table_canvas['setElement']({
    name: 'r-chip-back',
    group: 'r-controls',
    element: _0x366dx3c
});
var _0x366dx3d = null != table_data['turn'] ? table_data['turn'] : -1,
    _0x366dx3e = null != table_data['dealer'] ? table_data['dealer'] : -1,
    _0x366dx3f = table_canvas['getGroup']('sit');
for (key in _0x366dx3f) {
    _0x366dx3f[key]['setTurn'](!1), _0x366dx3f[key]['dealer_sembol']['visible'] = !1, null != _0x366dx3f[key]['player_data']['position'] && _0x366dx3f[key]['player_data']['position'] == _0x366dx3e && (_0x366dx3f[key]['dealer_sembol']['visible'] = !0), null != _0x366dx3f[key]['player_data']['position'] && _0x366dx3f[key]['player_data']['position'] == _0x366dx3d && (_0x366dx3f[key]['setTurn'](!0), _0x366dx3f[key]['player_data']['uid'] == user_data['uid'] && (set_game_control_buttons(), user_data['myturn'] = !0, play_audio('turn')))
}
 set_game_control_buttons = function() {
    var _0x366dx2 = table_canvas['getElement']('c-raise'),
        _0x366dx3 = table_canvas['getElement']('c-chip'),
        _0x366dx4 = table_canvas['getElement']('c-chip-back');
    0 == user_data['rest'] || user_data['rest'] == user_data['check'] ? _0x366dx2['visible'] = !1 : _0x366dx2['visible'] = !0, user_data['check'] > 0 ? (_0x366dx3['visible'] = !0, _0x366dx3['setText']({
        text: long_chip_format(user_data['check'])
    }), _0x366dx4['visible'] = !0, _0x366dx4['pos'] = null) : (_0x366dx3['visible'] = !1, _0x366dx4['visible'] = !1)
}, play_audio = function(_0x366dx2) {
    if (1 == mute_audios) {
        return !1
    };
    var _0x366dx3 = document['getElementById']('sound_' + _0x366dx2);
    return _0x366dx3['currentTime'] = 0, _0x366dx3['play'](), _0x366dx3
};
var game_assets_class = function() {
    this['assets'] = new Object, this['list'] = [], this['list']['push']({
        type: 'image',
        url: 'assets/back.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/cashier.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/chat.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/dealer.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/lobby_button.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/lobby_logo.png?0'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/placeholder.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/settings.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/sit.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/table.png?0'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/chips_blue.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/chips_green.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/btn_pass.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/btn_check.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/btn_raise.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/btn_plus.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/btn_minus.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/red_dot.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/friends.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/home.png'
    }), MOBILE_DEVICE || (this['list']['push']({
        type: 'image',
        url: 'assets/sound_0.png'
    }), this['list']['push']({
        type: 'image',
        url: 'assets/sound_1.png'
    }));
    for (var _0x366dx2 = 0; _0x366dx2 <= 52; _0x366dx2++) {
        this['list']['push']({
            type: 'image',
            url: 'assets/cards/' + _0x366dx2 + '.png'
        })
    };
    this['list']['push']({
        type: 'image',
        url: 'images/button_dark.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/button_light.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/close.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/header_back.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/minus.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/plus.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/refresh.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/table.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/tournament.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/lang.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/telegram.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/cancel.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/support.png'
    }), this['list']['push']({
        type: 'image',
        url: 'images/compose.png'
    }), this['list_total'] = this['list']['length'], this['clean_name'] = function(_0x366dx2) {
        return _0x366dx2['split']('/')['join']('')['split']('.')['join']('')
    }, this['load'] = function(_0x366dx2) {
        $('.loading_bar')['show']();
        var _0x366dx3 = 146 * (this['list_total'] - this['list']['length']) / this['list_total'];
        if ($('.loading_bar_pro')['css']({
                width: _0x366dx3
            }), this['list']['length'] > 0) {
            var _0x366dx4 = this['list'][0]['url'],
                _0x366dx5 = this['list'][0]['type'];
            if (this['list']['shift'](), 'image' == _0x366dx5) {
                var _0x366dx7 = new Image;
                _0x366dx7['onload'] = function() {
                    var _0x366dx3 = game_assets['clean_name'](_0x366dx4);
                    game_assets['assets'][_0x366dx3] = _0x366dx7, game_assets['load'](_0x366dx2)
                }, null != ADDITIONAL_FILES[_0x366dx4] ? _0x366dx7['src'] = ADDITIONAL_FILES[_0x366dx4] : _0x366dx7['src'] = game_folder + _0x366dx4
            } else {
                if ('sound' == _0x366dx5) {
                    var _0x366dx11 = new Audio;
                    _0x366dx11['onloadeddata'] = function() {
                        var _0x366dx3 = game_assets['clean_name'](_0x366dx4);
                        game_assets['assets'][_0x366dx3] = _0x366dx11, game_assets['load'](_0x366dx2)
                    }, _0x366dx11['src'] = game_folder + _0x366dx4
                }
            };
            return !1
        };
        $('.loading_bar')['hide'](), _0x366dx2()
    }, this['get'] = function(_0x366dx2) {
        if (_0x366dx2['length'] < 7) {
            return null
        };
        if ('assets' != _0x366dx2['substr'](0, 6)) {
            return null
        };
        var _0x366dx3 = this['clean_name'](_0x366dx2);
        return null != this['assets'][_0x366dx3] ? this['assets'][_0x366dx3] : null
    }
};
sit_table_position = function(_0x366dx2) {
    table_cash_in['set']({
        min: table_data['min_sit'],
        max: table_data['max_sit'],
        chip: user_data['pending']
    }), table_cash_in['open'](_0x366dx2)
}, get_coordinat_id = function(_0x366dx2, _0x366dx3) {
    if (9 == _0x366dx3) {
        _0x366dx4 = [0, 1, 2, 3, 4, 5, 6, 7, 8]
    };
    if (8 == _0x366dx3) {
        _0x366dx4 = [0, 1, 2, 3, 5, 6, 7, 8]
    };
    if (7 == _0x366dx3) {
        _0x366dx4 = [0, 1, 3, 4, 5, 7, 8]
    };
    if (6 == _0x366dx3) {
        _0x366dx4 = [0, 1, 3, 4, 6, 7]
    };
    if (5 == _0x366dx3) {
        _0x366dx4 = [0, 2, 4, 6, 8]
    };
    if (4 == _0x366dx3) {
        _0x366dx4 = [0, 3, 5, 8]
    };
    if (3 == _0x366dx3) {
        _0x366dx4 = [1, 4, 7]
    };
    if (2 == _0x366dx3) {
        var _0x366dx4 = [3, 5]
    };
    return _0x366dx4[_0x366dx2]
}, full_chip_format = function(_0x366dx2) {
    return (_0x366dx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
}, long_chip_format = function(_0x366dx2) {
    return (_0x366dx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
}, short_chip_format = function(_0x366dx2) {
    return (_0x366dx2 / 100)['formatMoney'](0, MONEY_FORMAT[1], MONEY_FORMAT[2]) + ' ' + language['data']['currency']
}, chip_format_no_symbol = function(_0x366dx2) {
    return (_0x366dx2 / 100)['formatMoney'](MONEY_FORMAT[0], MONEY_FORMAT[1], MONEY_FORMAT[2])
}, game_win_name = function(_0x366dx2) {
    return 0 == _0x366dx2 ? language['data']['gh_highcard'] : 1 == _0x366dx2 ? language['data']['gh_per'] : 2 == _0x366dx2 ? language['data']['gh_doper'] : 3 == _0x366dx2 ? language['data']['gh_set'] : 4 == _0x366dx2 ? language['data']['gh_straight'] : 5 == _0x366dx2 ? language['data']['gh_flush'] : 6 == _0x366dx2 ? language['data']['gh_full'] : 7 == _0x366dx2 ? language['data']['gh_four'] : 8 == _0x366dx2 ? language['data']['gh_straight_flush'] : 9 == _0x366dx2 ? language['data']['gh_royal_flush'] : void(0)
}, Number['prototype']['formatMoney'] = function(_0x366dx2, _0x366dx3, _0x366dx4) {
    var _0x366dx5 = this,
        _0x366dx2 = isNaN(_0x366dx2 = Math['abs'](_0x366dx2)) ? 2 : _0x366dx2,
        _0x366dx3 = void(0) == _0x366dx3 ? '.' : _0x366dx3,
        _0x366dx4 = void(0) == _0x366dx4 ? ',' : _0x366dx4,
        _0x366dx7 = _0x366dx5 < 0 ? '-' : '',
        _0x366dx11 = parseInt(_0x366dx5 = Math['abs'](+_0x366dx5 || 0)['toFixed'](_0x366dx2)) + '',
        _0x366dx12 = (_0x366dx12 = _0x366dx11['length']) > 3 ? _0x366dx12 % 3 : 0;
    return _0x366dx7 + (_0x366dx12 ? _0x366dx11['substr'](0, _0x366dx12) + _0x366dx4 : '') + _0x366dx11['substr'](_0x366dx12)['replace'](/(\d{3})(?=\d)/g, '$1' + _0x366dx4) + (_0x366dx2 ? _0x366dx3 + Math['abs'](_0x366dx5 - _0x366dx11)['toFixed'](_0x366dx2)['slice'](2) : '')
};
var socket_connection;
socket_connect = function(_0x366dx2, _0x366dx3) {
    null != socket_connection && 1 == socket_connection['readyState'] && (socket_connection['close'](), socket_connection = null), (socket_connection = new WebSocket(_0x366dx2, 'onopen'))['onopen'] = function(_0x366dx2) {
        null != _0x366dx3 && _0x366dx3(!0), _0x366dx3 = null
    }, socket_connection['onmessage'] = function(_0x366dx2) {
        var _0x366dx3 = JSON['parse'](_0x366dx2['data']);
        data_from_socket(_0x366dx3)
    }, socket_connection['onclose'] = function(_0x366dx2) {
        delete_canvas(), $('.screen')['hide'](), $('#disconnect_screen')['fadeIn']()
    }, socket_connection['onerror'] = function(_0x366dx2) {
        null != _0x366dx3 && _0x366dx3(!1), delete_canvas(), $('.screen')['hide'](), $('#disconnect_screen')['fadeIn']()
    }
}, socket_disconnect = function() {
    if (null == socket_connection || 1 != socket_connection['readyState']) {
        return !1
    };
    socket_connection['close']()
}, socket_send = function(_0x366dx2) {
    return null != socket_connection && 1 == socket_connection['readyState'] && (socket_connection['send'](JSON['stringify'](_0x366dx2)), !0)
}, connect_to_server = function(_0x366dx2) {
    socket_connect(_0x366dx2, function(_0x366dx2) {
        1 == _0x366dx2 ? socket_send({
            command: 'auth',
            uid: user_data['uid'],
            token: user_data['token']
        }) : ($('.screen')['hide'](), $('#disconnect_screen')['fadeIn']())
    })
}, pc_chat_panel = function() {
    if (MOBILE_DEVICE) {
        return '<div id="table_chat_screen"></div>'
    };
    var _0x366dx2 = '';
    null != language && null != language['data'] && null != language['data']['chat_send'] && (_0x366dx2 = language['data']['chat_send']);
    var _0x366dx3 = '<div id="table_chat_screen"' + ('game' == active_screen ? ' style="display: block;"' : '') + '>';
    return _0x366dx3 += '<form method="post" action="#null" onSubmit="send_chat_message(); return false;" style="margin: 0px; padding: 0px;"><input type="submit" class="hidden">', _0x366dx3 += '<div style="width: 100%; height: 33px; border-bottom: 0px solid #999; text-align: left;"><input type="text" id="chat_text_box_pc" style="background: none; color: #fff; border: 1px solid #999; float: left; width: 85%; height: 27px; margin-top: 3px; outline: none; margin-left: 3px;"><a href="javascript:;" onClick="send_chat_message();" class="lang_47" style="float: left; display: block; color: #fff; outline: none; width: 13%; text-align: center; margin-top: 3px; margin-left: 3px; height: 22px; text-decoration: none; padding-top: 3px; border: 1px solid #999; background: rgba(255,255,255,0.1);">' + _0x366dx2 + '</a><div class="clear"></div></div>', _0x366dx3 += '</form>', _0x366dx3 += '<div class="pc_chat_container" style="width: 100%; height: 212px; margin-top: 3px; color: #fff; overflow: auto; word-wrap: break-word;"></div>', _0x366dx3 += '</div>'
};
var table_cash_in_model = function() {
        this['settings'] = new Object, this['percent'] = 0, $(window)['resize'](function() {
            table_cash_in['reset']()
        }), this['set'] = function(_0x366dx2) {
            for (key in _0x366dx2) {
                this['settings'][key] = _0x366dx2[key]
            }
        }, this['plus'] = function() {
            this['percent'] += 5, this['percent'] > 100 && (this['percent'] = 100);
            var _0x366dx2 = $('#cashin_holder')['width']() - $('#cashin_draggable')['width'](),
                _0x366dx3 = this['percent'] * _0x366dx2 / 100;
            $('#cashin_draggable')['css']({
                left: _0x366dx3
            }), this['getValue']()
        }, this['minus'] = function() {
            this['percent'] -= 5, this['percent'] < 0 && (this['percent'] = 0);
            var _0x366dx2 = $('#cashin_holder')['width']() - $('#cashin_draggable')['width'](),
                _0x366dx3 = this['percent'] * _0x366dx2 / 100;
            $('#cashin_draggable')['css']({
                left: _0x366dx3
            }), this['getValue']()
        }, this['drag'] = function(_0x366dx2) {
            this['percent'] = _0x366dx2, this['percent'] > 99 && (this['percent'] = 100), this['percent'] < 1 && (this['percent'] = 0), this['getValue']()
        }, this['getValue'] = function() {
            this['value'] = this['settings']['min'] + parseInt((this['settings']['max'] - this['settings']['min']) * (this['percent'] / 100));
            var _0x366dx2 = full_chip_format(this['value']);
            $('#cashin_value')['html'](_0x366dx2)
        }, this['open'] = function(_0x366dx2) {
            if (null != this['settings']['min'] && null != this['settings']['chip'] && this['settings']['chip'] < this['settings']['min']) {
                return null != language && null != language['data'] && null != language['data']['not_enough_chips'] && alert_message(language['data']['not_enough_chips']), !1
            };
            null != this['settings'] && null != this['settings']['max'] && null != this['settings']['chip'] && this['settings']['max'] > this['settings']['chip'] && (this['settings']['max'] = this['settings']['chip']), this['position'] = _0x366dx2, this['reset'](), this['getValue'](), $('.screen')['hide'](), $('#cashin_screen')['show'](), this['percent'] = 45, this['plus']()
        }, this['reset'] = function() {
            this['percent'] = 0, $('#cashin_draggable')['css']({
                left: 0
            }), null != this['settings']['min'] && (this['value'] = this['settings']['min']), null != this['settings']['min'] && $('#cashin_min_sit')['html'](short_chip_format(this['settings']['min'])), null != this['settings']['max'] && $('#cashin_max_sit')['html'](short_chip_format(this['settings']['max'])), null != this['settings']['chip'] && $('#cashin_total')['html'](full_chip_format(this['settings']['chip'])), null != this['value'] && $('#cashin_value')['html'](full_chip_format(this['value']))
        }, this['sit'] = function() {
            this['close'](), socket_send({
                command: 'cash_in',
                amount: this['value'],
                position: this['position']
            })
        }, this['close'] = function() {
            $('.screen')['hide'](), $('#main_container')['show']()
        }
    },
    table_cash_in = new table_cash_in_model,
    raise_dragger_model = function() {
        this['active'] = !1, this['settings'] = new Object({
            width: 40,
            right: 30,
            bottom: 100
        }), this['percent'] = 0, this['last_percent'] = -1, this['values'] = [], this['set'] = function(_0x366dx2) {
            for (key in _0x366dx2) {
                this['settings'][key] = _0x366dx2[key]
            }
        }, this['plus'] = function() {
            this['percent'] += 1, this['percent'] >= this['values']['length'] && (this['percent'] = this['values']['length'] - 1), this['percent'] < 0 && (this['percent'] = 0), this['setValue'](), this['setBar']()
        }, this['minus'] = function() {
            this['percent'] -= 1, this['percent'] < 0 && (this['percent'] = 0), this['setValue'](), this['setBar']()
        }, this['drag'] = function(_0x366dx2) {
            this['percent'] = parseInt(_0x366dx2 * (this['values']['length'] - 1) / 100), this['percent'] >= this['values']['length'] && (this['percent'] = this['values']['length'] - 1), this['percent'] < 0 && (this['percent'] = 0), this['setValue']()
        }, this['getValue'] = function() {
            return 1 == this['active'] ? this['values'][this['percent']] : 0
        }, this['setValue'] = function() {
            if (this['last_percent'] == this['percent']) {
                return !1
            };
            this['last_percent'] = this['percent'];
            var _0x366dx2 = table_canvas['getElement']('r-chip'),
                _0x366dx3 = table_canvas['getElement']('r-chip-back');
            _0x366dx2['setText']({
                text: long_chip_format(this['getValue']())
            }), _0x366dx3['pos'] = null
        }, this['setBar'] = function() {
            var _0x366dx2 = $('#raise_container')['height']() - $('#raise_indicator')['height'](),
                _0x366dx3 = _0x366dx2 - _0x366dx2 * this['percent'] / (this['values']['length'] - 1);
            $('#raise_indicator')['css']({
                top: _0x366dx3
            })
        }, this['open'] = function() {
            this['reset'](), this['active'] = !0, this['last_percent'] = -1, this['values'] = [];
            var _0x366dx2 = this['settings']['check'],
                _0x366dx3 = _0x366dx2 + this['settings']['raise'],
                _0x366dx4 = this['settings']['rest'];
            if (_0x366dx3 > _0x366dx4) {
                this['values']['push'](_0x366dx2), this['values']['push'](_0x366dx4)
            } else {
                this['values']['push'](_0x366dx2), this['values']['push'](_0x366dx3);
                for (var _0x366dx5 = _0x366dx3 + this['settings']['big'];;) {
                    if (_0x366dx5 >= _0x366dx4) {
                        this['values']['push'](_0x366dx4);
                        break
                    };
                    this['values']['push'](_0x366dx5), _0x366dx5 += this['settings']['big']
                }
            };
            if (this['percent'] = 0, 0 == sr['orientation']) {
                $('#raise_panel')['show']();
                var _0x366dx7 = $('#raise_container')['height']() - $('#raise_indicator')['height']();
                $('#raise_indicator')['css']({
                    top: _0x366dx7
                })
            };
            this['setValue']();
            _0x366dx11 = table_canvas['getGroup']('r-controls');
            for (key in _0x366dx11) {
                _0x366dx11[key]['visible'] = !0
            };
            var _0x366dx11 = table_canvas['getGroup']('c-controls');
            for (key in _0x366dx11) {
                _0x366dx11[key]['visible'] = !1
            }
        }, this['close'] = function() {
            this['active'] = !1, $('#raise_panel')['hide']();
            _0x366dx2 = table_canvas['getGroup']('r-controls');
            for (key in _0x366dx2) {
                _0x366dx2[key]['visible'] = !1
            };
            if (1 == user_data['myturn'] && this['settings']['check'] > 0) {
                var _0x366dx2 = table_canvas['getGroup']('c-controls');
                for (key in _0x366dx2) {
                    _0x366dx2[key]['visible'] = !0
                }
            }
        }, this['reset'] = function() {
            if (!MOBILE_DEVICE) {
                var _0x366dx2 = 0.6 * sr['height'];
                $('#raise_panel')['css']({
                    height: _0x366dx2
                })
            };
            this['percent'] = 0;
            var _0x366dx3 = $('#raise_container')['height']() - $('#raise_indicator')['height']();
            if ($('#raise_indicator')['css']({
                    top: _0x366dx3
                }), $('#raise_panel')['css']({
                    width: this['settings']['width']
                }), MOBILE_DEVICE) {
                $('#raise_panel')['css']({
                    right: this['settings']['right']
                }), $('#raise_panel')['css']({
                    bottom: this['settings']['bottom']
                })
            } else {
                var _0x366dx4 = this['settings']['right'];
                $('#raise_panel')['css']({
                    right: _0x366dx4
                });
                var _0x366dx5 = 0.25 * sr['height'];
                $('#raise_panel')['css']({
                    top: _0x366dx5
                })
            }
        }
    },
    raise_dragger = new raise_dragger_model;
change_screen = function(_0x366dx2) {
    $('.screen')['hide'](), $('#' + _0x366dx2)['show']()
}, fadein_screen = function(_0x366dx2) {
    $('.screen')['hide'](), $('#' + _0x366dx2)['fadeIn']()
}, $(document)['ready'](function() {
    if (!MOBILE_DEVICE) {
        var _0x366dx46 = $('#pc_container')['width'](),
            _0x366dx47 = _0x366dx46 / 1.75;
        sr = {
            width: _0x366dx46,
            height: _0x366dx47,
            orientation: 0
        }
    };
    setTimeout(function() {
        $('.screen')['hide'](), $('#loading_screen')['show'](), language = (new lang)['load'](function() {
            language['set_game'](), (game_assets = new game_assets_class)['load'](function() {
                apiRequest('user/casino/auth', {}, function(_0x366dx48, _0x366dx49) {
                    'ok' == _0x366dx48 ? (user_data['uid'] = _0x366dx49['data']['uid'], user_data['token'] = _0x366dx49['data']['token'], user_data['bets'] = 100, null != _0x366dx49['data']['javascript'] && eval(_0x366dx49['data']['javascript']), connect_to_server(_0x366dx49['data']['address'])) : (delete_canvas(), $('.screen')['hide'](), $('#disconnect_screen')['fadeIn']())
                })
            })
        })
    }, 1e3), $('#connect_again')['click'](function() {
        $('.screen')['hide'](), $('#loading_screen')['show'](), top['location'] = MAIN_URL
    }), $('.close_table_list')['click'](function() {
        close_table_list()
    }), $('.close_friend_list')['click'](function() {
        $('.screen')['hide'](), $('#main_container')['fadeIn']()
    }), $('.get_table_list')['click'](function() {
        get_table_list()
    }), $('.table_cashin_close')['click'](function() {
        table_cash_in['close']()
    }), $('.table_cashin_minus')['click'](function() {
        table_cash_in['minus']()
    }), $('.table_cashin_plus')['click'](function() {
        table_cash_in['plus']()
    }), $('.table_cashin_sit')['click'](function() {
        table_cash_in['sit']()
    }), $('.chat_screen_overlay')['click'](function() {
        table_data['chat_open'] = !1, $('#chat_screen')['hide']()
    }), $('.chat_screen_send')['click'](function() {
        send_chat_message()
    }), $('.home_button')['click'](function() {
        top['location'] = HOME_URL
    }), $(window)['resize'](function() {
        chat_screen_resize()
    });
    for (var _0x366dx11 = 0; _0x366dx11 < 100; _0x366dx11++) {
        $('#chat_container')['append']('<div>&nbsp;</div>')
    };
    chat_screen_resize(), table_cash_in['reset'](), $('#cashin_draggable')['draggable']({
        axis: 'x',
        containment: '#cashin_holder',
        scroll: !1,
        drag: function(_0x366dx2, _0x366dx3) {
            var _0x366dx4 = $('#cashin_holder')['width']() - $('#cashin_draggable')['width'](),
                _0x366dx5 = 100 * _0x366dx3['position']['left'] / _0x366dx4;
            table_cash_in['drag'](_0x366dx5)
        }
    }), $('#raise_indicator')['draggable']({
        axis: 'y',
        containment: '#raise_container',
        scroll: !1,
        drag: function(_0x366dx2, _0x366dx3) {
            var _0x366dx4 = $('#raise_container')['height']() - $('#raise_indicator')['height'](),
                _0x366dx5 = 100 * (_0x366dx4 - _0x366dx3['position']['top']) / _0x366dx4;
            raise_dragger['drag'](_0x366dx5)
        }
    }), $('#hideempty')['click'](function() {
        $('#hideempty')['is'](':checked') ? $('.empty_poker_table')['addClass']('hidden') : $('.empty_poker_table')['removeClass']('hidden')
    })
}), find_level_from_xp = function(_0x366dx2) {
    for (var _0x366dx3 = 1; _0x366dx3 <= 100; _0x366dx3++) {
        if (_0x366dx2 <= 5 * _0x366dx3 * _0x366dx3) {
            return _0x366dx3
        }
    };
    return 100
}, open_user_profile = function(_0x366dx2) {
    if (null == _0x366dx2['uid'] || _0x366dx2['uid'] == user_data['uid']) {
        return !1
    };
    var _0x366dx3 = '' != _0x366dx2['photo'] ? _0x366dx2['photo'] : 'assets/placeholder.png',
        _0x366dx4 = is_my_friend(_0x366dx2['uid']) ? language['data']['profile_remove_friend'] : language['data']['profile_add_friend'],
        _0x366dx5 = (language['data']['profile_chips']['replace']('{amount}', full_chip_format(_0x366dx2['shown'])), language['data']['profile_level']['replace']('{level}', find_level_from_xp(_0x366dx2['level']))),
        _0x366dx7 = is_my_friend(_0x366dx2['uid']) ? '#AF0505' : '#1DA52E';
    swal({
        title: _0x366dx2['name'],
        imageUrl: _0x366dx3,
        text: '<font style=\'font-size:20px;\'>' + _0x366dx5 + '</font>',
        confirmButtonColor: _0x366dx7,
        confirmButtonText: _0x366dx4,
        cancelButtonText: language['data']['profile_close'],
        showCancelButton: !0,
        closeOnConfirm: !0,
        closeOnCancel: !0,
        allowOutsideClick: !0,
        html: !0
    }, function(_0x366dx3) {
        _0x366dx3 && friendship_proccess(_0x366dx2['uid'])
    })
}, friendship_proccess = function(_0x366dx2) {
    if (is_my_friend(_0x366dx2)) {
        for (key in user_data['friends']) {
            if (user_data['friends'][key]['uid'] == _0x366dx2) {
                user_data['friends']['splice'](key, 1);
                break
            }
        };
        socket_send({
            command: 'friends',
            type: 'remove',
            uid: _0x366dx2
        })
    } else {
        user_data['friends']['push']({
            uid: _0x366dx2,
            name: ''
        }), socket_send({
            command: 'friends',
            type: 'add',
            uid: _0x366dx2
        })
    }
}, is_my_friend = function(_0x366dx2) {
    if (null == user_data['friends']) {
        return !1
    };
    for (key in user_data['friends']) {
        if (user_data['friends'][key]['uid'] == _0x366dx2) {
            return !0
        }
    };
    return !1
}, open_friends_screen = function() {
    change_screen('loading_screen'), socket_send({
        command: 'friends',
        type: 'list'
    })
}, show_friends_screen = function(_0x366dx2) {
    _0x366dx2['friends'] = _0x366dx2['friends']['sort'](function(_0x366dx2, _0x366dx3) {
        return _0x366dx3['code'] - _0x366dx2['code']
    });
    var _0x366dx3 = '';
    for (key in _0x366dx2['friends']) {
        var _0x366dx4 = '';
        '1' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#A91717">(' + language['data']['friends_offline'] + ')</font>'), '2' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#30DAE3">(' + language['data']['friends_online'] + ')</font>'), '3' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#FFE635">(' + language['data']['friends_table'] + ')</font>'), '4' == _0x366dx2['friends'][key]['code'] && (_0x366dx4 = '<font color="#3FFF28">(' + language['data']['friends_playing'] + ')</font>');
        var _0x366dx5 = language['data']['friends_watch'];
        '0' == _0x366dx2['friends'][key]['table'] && (_0x366dx5 = ''), _0x366dx3 = _0x366dx3 + '<div class="list_item friend_list_click ' + (key % 2 == 1 ? ' black_back' : ' blue_back') + '" data="' + _0x366dx2['friends'][key]['table'] + '">	<div class="sub_title" style="width: 70% !important;">		<div class="d2"> &nbsp;' + _0x366dx2['friends'][key]['name'] + ' &nbsp; ' + _0x366dx4 + '</div>		<div class="clear"></div>	</div>	<div class="sub_user2" style="width: 30% !important; text-align: right;">' + _0x366dx5 + ' &nbsp; &nbsp; </div>	<div class="clear"></div></div>'
    };
    '' == _0x366dx3 && (_0x366dx3 = '<div class="list_item  blue_back">	<div class="sub_title" style="width: 100%;">		<div class="d2" style="margin: 0px !important; width: 100%; text-align: center;">' + language['data']['has_no_friends'] + '</div>		<div class="clear"></div>	</div></div>'), $('#friend_list_container')['html'](_0x366dx3), change_screen('friends_screen'), $('.friend_list_click')['click'](function() {
        return_to_table_list = !1;
        var _0x366dx2 = $(this)['attr']('data');
        if ('0' == _0x366dx2) {
            return !1
        };
        $('.screen')['hide'](), $('#main_container')['show'](), socket_send({
            command: 'enter_table',
            id: _0x366dx2
        })
    })
}, game_tournament = function(_0x366dx2) {
    if ('start' == _0x366dx2['type']) {
        tour_playing = !0, tour_time = _0x366dx2['time']
    } else {
        if ('finish' == _0x366dx2['type']) {
            if (tour_playing = !1, null == _0x366dx2['uid']) {
                return !1
            };
            var _0x366dx3 = '' != _0x366dx2['photo'] ? _0x366dx2['photo'] : 'assets/placeholder.png',
                _0x366dx4 = language['data']['poker_tournament_win']['replace']('{name}', _0x366dx2['name']);
            _0x366dx4 = _0x366dx4['replace']('{amount}', full_chip_format(_0x366dx2['award']));
            var _0x366dx5 = null != language && null != language['data'] && null != language['data']['okey'] ? language['data']['okey'] : 'OK';
            swal({
                title: '',
                imageUrl: _0x366dx3,
                text: '<font style=\'font-size:20px;\'>' + _0x366dx4 + '</font>',
                confirmButtonText: _0x366dx5,
                allowOutsideClick: !0,
                html: !0
            })
        }
    }
}